{
	"info": {
		"_postman_id": "9b4d8215-089e-47f7-b7ac-be7502c187fe",
		"name": "MiGrocer Busniess Admin individual store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18293790"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "GetOTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mobile_no\": \"{{phone_number}}\",\n\t\"country_code\": \"{{country_code}}\",\n\t\"supplier_id\": {{supplier_id}},\n\t\"app_name1\": \"business_admin_app\"\n}"
						},
						"url": {
							"raw": "{{url}}/login/send_otp",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								"send_otp"
							]
						}
					},
					"response": [
						{
							"name": "SuccessResponse",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mobile_no\": \"7032939303\", \n\t\"supplier_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/login/send_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"send_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, must-revalidate, private, max-age=0"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=eEIxZXkyQ0UzSitkdnJINFQ4M2s0SGxqcWluYlZxZ1hBbmIzdWd4RnRZWVRVUzQxclcwR2c1aXZCY2p3RWhKUlhmRStIVjBMcmRmYzgwYUN6UGtUK2JnWlc4Q3I2UHRIdFlJdWxKNnR6YjBiaEQvSkJzMXEvdmtNMVhRbXA2YWFMV2J6NXZTek9NRjBOY0xzdEJMdnRJc244TEh5c252U3NKMk9sMUpndnk4M0o4V2d3clFoWEIzRXlrRFhUUzduSzVUZzZnTDEzbysxYmdQS3g0WUxCZXZXRE5kQTY5eWh3U3hHemVHdzVDYzhUTjBZazQxWDJzV2dzcmwyOGJ6RW1uRmZXTkZwaURLcXR0M1VKMFZmcTRUenpCek5jVUZQK1lMZFM0ZEFoaXZwcnBLWlRIcUNMaDQ0MEQ3dHExWGdoTFpzMTMrWVlNdDc5cmNHTTcrT1VzUm5FdFd3R1RaVHBGVnl6OHB3R2ZyaEhPNmZyTnhCdTRkR2djdXJjbGlUMFVtQmwxNWw0U2V0YW5USUZaak1tcU9FaUNBYWIreHQxR0pwdkp3VWxQcmM4MDZlczZUVzJyRzZjdGFNcU5BNlZjNWpBRGV4MldHenROQmxKelNncGhhR2RtVCtRWDQxdUs1bXlNRk9xV1pYcGpOYy85ZGpMQlYwQ3NkazlRdFdZWW1nZ01obVF0WWREcTVHNDNJYVhxaTFyVzNoRjBKUnU0VUdwVkhUcW96L0hZTTNEMHo1K2hzMm1KOFFrN1NwWmZ1bDB6SU1aZWVlbnlSUkU5d2xRdUpqdk92RWVDaEREcnQ3YlJOWUE0SWpuMGllUTJaMk9tWnV4L2xmbDM1eENtNXA3STB4UEJxMkpybE5nL2dtZVQ5anN2OEZCTDhLN1psUDFvdEkzelBtV1FxdFpsMDYvNU9pbTJzd1NDYzd6eXp6dUJPZVl4aUVUVlZ5ZDZSSW5BWnAyYnZpVk1IZmlDRTRxaWNKaEtvMS94dkVOY1A5WW9CWkdielZuOEswRWtMR2NrQkIxdTcrMzZPNXRBLzZVREJndXJtbUhhWTZxVWFGbU0zODFnVmJQUEVIRmdGWUtwSFoySC9OejZWbDB1OW1ka0JTSWFkZU5pR1NkaitaenkrbEdQVkN1MG5uQUM0VmFyUjVNV2NsUGJ2RGhRbmtQV2wvMkVNeE1TSHFtZXJsTEpiSEpBVDRjeXZSVTgwSTJwSmZjRUVSTnc5YW5wKzVLeS9HNy9pQXprSnlQSGo2VWlOeWxXbWsyRENRcVdUN2w1SmVHZWJQaGFMQ2gyK25vR2FFdzJmVm4wOU5ZOUpiSFZSOGRVVGt4YUpQT0pSMTIrZVltK3VFSXp1ZzdYQmxPazM3Q21yaDVUYWR4Y0twcDUya2Nla2RmTk40Zy8xTDNaNzUxcElBdDJFdThvN3BtS0ZxdTZwV25GOXVVdElDMERxWGlKWlNja3JzaldJcXUrU3VUeUx2dG54bnRrOU1HbW1BUlYvbUdKc0UvTlNqRlJhdS9teW44eHpLeTNNbTU4c2U2SUxYcmdraFhIZ2EvdDA3R25KSXdSRS84WTl5bkoweEhUb1lrSmtwbDBWQ2hTY3cxVkRNZ1E3WGZFQmpqanMwczBhbW1MelJER2Vab0E9PS0tVzFUQkhjTnFPOXZNMVltT3FXNVhrdz09--a4e6fae74e7ade22f1392e3911f8d67d1a3a4aa1; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "8c00e46a-82c9-40d4-8e56-5282b4d1549c"
								},
								{
									"key": "X-Runtime",
									"value": "11.056333"
								},
								{
									"key": "X-MiniProfiler-Original-Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "X-MiniProfiler-Ids",
									"value": "[\"uo718omadf0cbkqalooi\",\"ix0shylggr3fbrhwf1d5\",\"2b88lsb2guecg4y6dhw\"]"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"3966756f6865363633353330\",\n    \"type\": \"success\"\n}"
						},
						{
							"name": "InvalidSupplierId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mobile_no\": \"9014259811\", \n\t\"supplier_id\": 409\n}"
								},
								"url": {
									"raw": "{{url}}/login/send_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"send_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=MXhGNDZISDFKTWRIbW9qVy9FbzFKNGk2UVphaHFzbithTnhPdml0L1EwS3p5cWhDbm1jQW1jQlhXS2tvckllNFZoUjViSWVTU28rZHlaVTM3UnVLN1YzN3JncVZBelQvUnhzenJCUXl6TWhFdXFIYWhHODJOaXNWYnJWMDExMW1GTVgzYVl0MUhYblNSQjdNZUtCRmg0Rlh3VXJoWUExanFycGhzbmVsaEtPM3YzQkxvd0pIamhaYmFxUGRTMktCU3ZZckF5bm11VFRiWkwxakxTMHE5RmZ4VEI4MUptR1M2N3hJT3dRcEo4UUxTdU8ycmt6V2VWdG9WL08zUGdYWXJtUm85VUtVaWZQbVVrWVMvZUpIV3d6Zm82NkxvKzFJYzJpL0plQ25yUFlIQVgyc1BDODk5WUt4d3lwMysvamRaM29NRHJLVGowazFzVGZqTFRCWklqVXlhY2x1dXI4YXVyL3ljMWZYU1M5ZXJ5WnhwL3h3M2kvTHJPcnB3cVU1b3BKdjFyUndPMDRBcHRnOCtLNHI5dnpLNXdHRE1xcmZ4QVJrcFlkVm9RNVVsbDlhalFRNWVDUGZSTXVGeDF1Tmh1ak9GNnRFRFBHbUsxSzU5TWxMNDlSVlF3V3g4UjNCYzVseXFZTFFqaWJUbDUxbnpLQngxVDhjRHFzclJ1WXU5MTkrc3JLVUFKNWNpcXZTd2tqcDNZMjRLbmI4aE9yRkRlZXFKeU5wbWQ3ZnZuT3B3TDEya0ErRkcyMzNiZVVYWklFWk5kc3JOMzRCbWFGeXNnaG5WdC9nRGI4Vkt3NFJxNDVBcVhRSnFib2VEK01yMlc2R1lrdU40dTN6ckFUNWU4WEc0OWh1K3I5Mno4MTkybG9NbHpoWXpxVWNFSThSaEhDNUo3aTNKTzI3UnRRVlRBejV3ek1ESE1wOXhNNFMrOGRleE9oc3haelhoMDQzVVYxRlZJbzlzM0Y0QWNFc1NaQ0ZzM0gxcWs5Wmd6N3Q3ai9yYm1CNWJXZmQ4bmlYY0IrckhWMFRRbS9oNUVFYVJRN0JTUXVoSFQrU1U4UUwrSDZOcDV2YlJ0eWxFcEpQUlZjVDFnbDhwZXJ2ZTJNUURFczVZK3FVWnc1QzZLZm1RaDFhQnlLc2V4L1J1QXRhMHl1Z2NZWUV2VG9mcVRhT0x4dTBLYnRmaHExbzdqb3BZNzUzU29EdFZzeUdIeVVLVGxKRjFGbXVnamJSS24rM0UzTTM1Y3NCZ1BkRUxnNll1UTJEeStMT01Pa29TLzdIOFpyYml2NFhIU0dZVnpFTGVsejl6T0VSUU9pZ2VocEZHREpIVWsyZW9FWi9uVnVYSEpQTnowOFNSaWRWR2JTWk8zRktIWTkxSlpSNE81Ull4MU13NGovRDZyOXhyMmJzR2xsaWY5QlpDc3NGYjVubHd0RHR4c1RPUitRODRuS2JvTTJQeXNwNkNXN1JqWXNRRkM0TWdqUERVcm52eG5vTitNVDhQeW5Qc1pSaVZYdHAycDN5ZEEzWHM4Qkt4WktwVjcrREtkWVMvdUhPTTJDclhuY0w0TzFGWk93bEVMamNNUFJCZkgzYTRrTEE2eFhZRWR5R1MwUW9oa0QxWnZBd1o4TTBDcFNTV3dLN2lCMlA4aWUzVVE9PS0tODdnVHkrck5kNHZySW16TmRiTnl1QT09--1145ffa79606380cd9f14bcf450520a98e507e6c; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "a7513e57-458a-4636-8172-c696eafaff1d"
								},
								{
									"key": "X-Runtime",
									"value": "0.004982"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Supplier Id\"\n}"
						}
					]
				},
				{
					"name": "VerifyOTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"let uid = pm.response.headers.get('uid');",
									"",
									"let access_token = pm.response.headers.get('access-token');",
									"let client = pm.response.headers.get('client');",
									"",
									"pm.collectionVariables.set(\"uid\", uid);",
									"pm.collectionVariables.set(\"client\", client);",
									"pm.collectionVariables.set(\"access_token\", access_token);",
									"",
									"",
									"",
									"console.log(\"uid : \", pm.collectionVariables.get(\"uid\"))",
									"console.log(\"access_token : \", pm.collectionVariables.get(\"access_token\"))",
									"console.log(\"client : \", pm.collectionVariables.get(\"client\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "supplier_id",
								"type": "text",
								"value": "272",
								"disabled": true
							},
							{
								"key": "uid",
								"type": "text",
								"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
								"disabled": true
							},
							{
								"key": "access-token",
								"type": "text",
								"value": "R9vgiznm-19EnNbAyb9F4Q",
								"disabled": true
							},
							{
								"key": "client",
								"type": "text",
								"value": "3JepNbFc3Yt-ljRYdlee1g",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile_no\": \"{{phone_number}}\",\n    \"country_code\": \"{{country_code}}\",\n    \"otp_code\": \"1234\",\n    \"app_name\": 613,\n    \"fcm_toke1n\": \"e9lYiZBhRvemMV8jOw4GIZ:APA91bEDPIKvOJYp9XtMEpoZm-v12XBF-coz63ZXPmRFXYKlRDjKGMgRGGIzf3nikLfOm6sAncNp4qIXelWpUERUTnMBXzC5b2n48XSKVK-NJc-mOGpwP5GwFf-AJVQiECg_RpB-j9Qr\"\n}"
						},
						"url": {
							"raw": "{{url}}/login/verify_otp_supplier",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								"verify_otp_supplier"
							]
						}
					},
					"response": [
						{
							"name": "OTP Expired",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=OThmOHhjSml6RUNWNE1VRUhpaTIyYzdTaHVyM2lMbXV2N2dEWDFOVThreVA1bE4xdTJLbTd3VEt1WHFLZWRqWjZ1NXFtMWh0RmZtQXl4N1NPZFBsTFA5a1M1eTJscmRVTDFIRUsvak10bHdkMXd4VGdRZ3lvS2VlNDFERWFzUEZMeGVHazRVL2tpNWtZZnZVUGx4RisrVloyVk5TVVYxMWNqRmJtUG93cXNGOTlESXlBMkttRlRLTkdEMWJ4Q3FpS3BqRUFQb1llbUMreVpLRlRkaXJ1cUczS1cvK0I0K1grZ2gxaE1PMU96NHJCd01hYldvUHZwR1VNR3lka2FLQ2Nnb1ZYaUV4R2xUOWxhMnNpTGllVGZIN2ZiVHhINDZvb2N4OUxaampaMEluL1hQY2NnYk4yT21ackRwejY5Q3U4VkQ4c1ZkeDRPQzBveCtndGV1aU82bTcxMEg5bE9LMlFHR005NnFDMzJKNmNzNDB2Wi96RkFWMy9RUTluWGxGRkVYaDQ5bVVHR0JJSzRWK2V1TkVwNFNpVkcwbTBaZW9jcDgzNGU4dHc5QzkzbmlpYkx0WmdhNmVuZmZ0cXY0ZHpHMjl4YXcwdk1jckd5QmJTSWpjb3k1MlF6V2tvcFZhbFNHWDFzTllFNjJiL29vZGZFL1FweS9MSjNDQy9xNGV4OCtudkkwbnAxbDdBZTA2YVVSNDAxTnhsVnBKQW9LWXhZV0I3YWNQQVRJdDdhZ2t0RnRIVmsxaE1WczU4NytDWGoxb0tFNityS3NBWURYL29vRUJxNEhiUk8rWEdvNGNBYUczd1dGNnAxU3VyZkUydjl6RWM0VkdWVTZrdUJ1YWMxYVY4ajBaRUs4cWpaZHRMc1ZWcVVzVk1uRWFHc0NxbXpTcHo0Y1R6c1pWSzhYay9lQ1RlRndxSllRRURnSTRoTUg2NWNzWkZ1MER2MmlIM0lYbnZrV2Q3NUp5eFNNUUFkdHJwb2ZpcHppSGFNYmRZQVJxZmZLTm0rcWdiVlh2V2xXSlJvS1pWbDNMOVhkL0RLU3ZKTk9OUXhINE9jeDBpSUdvMjdsMTJlcytUL2VGeFd2OHhmbW8yVjNSSjZBWUd0VU9iTituV3Zld25Ha2JDNWFJS25vNS9QVUh5M1lJd1RzNEhCSXBnVVNUaG5HS1J0YTFBckdNdEdGb1JUTENRWmI0dURXbHpHVXpITFFqNWNGdEdvcndiQjVnd1pKeEZsWU9oSWM5cURoMVpaUXNOcjZkaEJRelp1S0ZTelI5ZWxuSkQ4c2tBZUpFdnRBUWZ2dG1VaThic3ZpSkVXdkV5ZWYrWTBpYSthS0NLWXhIL1ZQOG5hRW1nRFpsVE9sekhxbE5BNTBXOTlSMWtJNGQwRmFUa2t6eGRaWjdGMkN3OWUybC8xc2dnQnJ1NGZmY0NpQkJGejFiS0lCaDNwTXl2Yk9MN1J6Qm0yWHYwNFNWRjFYOTUyK3VDZkhSWEcvSWJtM2FFeE9NSS9ucGFKSGxPOEErR2V3eGlFUHJtWnd1dERiMHlDSURLOTJNREJsWVpHOEczQVhXQml6dStnQmRVV1NGaGlpTHViTGwvUmJSTTA0aXdMa3VNYU02Q2VWbmxXVkxUMjhrdm5nSFBoaUQ2cEZhd1E9PS0tRFNLSHhBV0twUDE2S3Z5L0I2RjZpZz09--6353f430dd4c42ae5423008d9411a8b21b61392e; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "71371364-554f-4a0c-8ea3-8658679a615c"
								},
								{
									"key": "X-Runtime",
									"value": "0.210981"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:59:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Access-Token",
									"value": "GrpheNgkFUH8wwixjwOMnw"
								},
								{
									"key": "Token-Type",
									"value": "Bearer"
								},
								{
									"key": "Client",
									"value": "vZqbia0mRQ-T6j1_tiWu1w"
								},
								{
									"key": "Expiry",
									"value": "33010714774"
								},
								{
									"key": "Uid",
									"value": "9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Etag",
									"value": "W/\"8155e657bf4f1866f677db487a367565\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=cVo1TWZTaFFzejFPS0dyeXlyZHp0eEVwb0ZJaGxxY1FWd2RFUU9RRUI1ditVcXY5b2dra1NQUklHa3FZLzQ3dGRjVmxwdDNqNmZPaE5SbjR3d21zT21kMUdLMzZGdDJ4cVlySmpFR0JxTkliVXlCcEVTbzBEbVFUUWZmdVpzMG1SL2pobmhuNlFhWjl1M2dWMFB4cVNpTkwwYmZmSWRuOXNualR4TkxWbytkTzFPaGtudEZib3BpZlJOTTNZZmExWkFJS1V6SWg2anBtdlUzbGFuTDd3T2hjU2gzcmYzMDF4Q0ZQVGMwR2EwTVBWb3NGd1BENmdTSHR6UzRhN2EyZkVqelJFQm4xTUhobVFCd2dReHg3cEZ6V1JUK2RrVjlLVHJUdFJWVjlBNmpiZ25yaWFPVm1QbDZaQy90dU5oMVhlRDY4MGRlMWQyaHJVNXczeTRsZlpCa3Nna3JvNHpxYjZBOE5idTIzZE5yNmRHQ3B6VmFaQWJNU2VnSk1mcFp6MHUyaERyd2ZyYmpPV0UzWXlrZlJPb2R5UTVoc0dVWE1DdUhQWmZ2UStkVlRoSHZrbllUNzcrVnUxS25rZUFQWUpYMkZVek9qV1pqcEE4WExTblBBMzlwc3M1dXQrSytobEpOcUpuZFFHNUE4MnFqVWxMcmpCajlTNmVUbEFVYXVFYlFqejl4WjcweXZtcm1OYWhXUndoTnEzZjFnMHZXclhubWl6dFNlbVk4a3F0SWZScEtvZEpxSktHS05MS1JiN2twclY3VG1WVEIyWlFoaWNuWnRtcnltajFFamN6cVo2RWFJZlhFZ2YzTElFUzFqUXg4MXFYa0lQOEQ4WUEzMWk4R1l5NGxmWDYzclAyNkIvUWJwY296SEVDcXFENzM5ZDlJZmxaOGlUZG9md2NObVRrcWFYU090UzRURk1LWHd0cWRtVm5BVEg4Qzd1OU5GU1dYNmdIYURKMk9OMkQxbHJWbFZRbXdGVHA2Tlg2cWJiZTVra1RsSkZIWVB5cTNTTUFYWTJCK0oxZTB5SzhuUlI1S1RTczhRaTBvSG0vUWxncTJveGJkempsNmVhVS9QT0paR0Q5WTB0UjlwR2IzNC9sQVNFSUZEU0ZqUXR6enZ1ZEU2emN0czMxL1I1dVhCbGhFSEZ3aFEyRTJpL3RpaWhQYm1MQnErN3ByNWJSWnBvS1JHeGFISnBDUGZGcUZrdTc1Qnh4SDFMOWhBYTdpV0s1VHNrZ01JbUhyNEwyNUdBY1lXN0JnM3pkRG1JWmZOS3ZoaWQ1R1MwYm4rR1BtcW4reEhMaUpZZjVZbkpHREhYS2haU1JEVGFQcnhUTExqeGVNREhqdDRvbmgwZEtvdDl3aHlUbENqSVBJYkNTRHhVR2dmRUFrd0paZi9rOE5FdEJPQnFNRnNWSjV2ZXNnYjdVaUxFMDJ0V3RMK0pHQzVTS2tNOWJ3bGhUSmxlNm1pYm9nWmdONkZQTUoyVWxsVkhXZi93V0Z6b0dOTGxrNWlXblhuQitIRXUyL1ZoNm1JU2dtcE8wdVBWN2dQWUtoYWRWRktCb0J1STZqSDFadjBmT0lEN3loSlc5bXdGenRwd1I5dFpLOG1EbU5BZ2lRR3pSMndQYTJSS29iL3E1RFZ1UlRyZHc9PS0tQVVkSmU2QlFPTVNBMmJscFhFbjdTUT09--12ae8dfb1da36b1c2cce3313e3cf938e55b8e3b7; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "af35ab65-f5ca-4d92-a19b-be8f786cc883"
								},
								{
									"key": "X-Runtime",
									"value": "0.289858"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 28411,\n    \"email\": \"b88a4014-5f54-44dc-9631-d96fe6c0e54a@migroceruser.in\",\n    \"persistence_token\": null,\n    \"perishable_token\": null,\n    \"last_request_at\": null,\n    \"login\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"ship_address_id\": null,\n    \"bill_address_id\": null,\n    \"authentication_token\": null,\n    \"created_at\": \"2019-06-21T16:29:34.146+05:30\",\n    \"updated_at\": \"2019-06-21T16:29:34.297+05:30\",\n    \"spree_api_key\": null,\n    \"deleted_at\": null,\n    \"supplier_id\": null,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"area\": null,\n    \"last_visited_store_id\": null,\n    \"city\": null,\n    \"state\": null,\n    \"country\": null,\n    \"provider\": \"email\",\n    \"uid\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"phone\": \"9014259811\",\n    \"sub_area\": null,\n    \"is_valid_email\": false,\n    \"is_guest\": false,\n    \"referral_credits\": null,\n    \"referrer_benefit_enabled\": true,\n    \"offers_availed\": [],\n    \"device_token\": null,\n    \"store_id\": 468,\n    \"referral_code\": \"JNDKSVUG\"\n}"
						},
						{
							"name": "VerifyOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=SjFrK3R2UG5GVnpLeWRZR1hiWjRWdDg5QitXaHhCeHM4VU9qL21SOWJ3OVRpb3dzL0tzalgwRE84NlJxay80eDMxeUZOc2VVYmpsSDhodkZONmZIOHU4Y1Jud2ZEaE1OeW1iN1JmU002ZE40MFZSSk0xYVFNTzVIMG1EbzlVSjJuZEVVZHZCL1NKYWhQSGxwWFN4V3pZS1hyUmFITlpVRUZoaGFHbXZ0ZmI2NEVHL1FFVVpTRjhNY2M5Rlc1WFEzemluY2k5OEtxQXVTbnJDMDB5UGpGdXlDTEg4QnNWUUhsZk9FOTg5ZUNQVDJFS2VYd2pKOElDdHdzUjZOOVdabCtBNWFMY0JwOEs4K29kK21lVmt0NHg0MXBFUHdMMS9QVW9SUUdoaWt6eldOcjdSZEx0YS90dFIrem5ZTDF3Vms0cW9pNVN2amFCR1ZsVnQyUkZLQktlNndGM2lxMi81T01wckN1UWQ2eU9wU1FhRkZ3K1FSRVI0eE9MSzVpYzhPZHJnT3NHQzVHM2VXTDBUZWxIMmptTFdzMUFqQXRaenhPVXlXVXpsRnloQlpyYXNmajZWM1drMmt1SmtjMTMwUER3S0dYSVRxUnVoT3JwQzJlbnZYblhLV2l1c05kU2FDRWJsb0RIUWlaU29wTkFOWjQwN2ViMXcyM1VFVWZjeFllaHRJLzVIN2RUQjZJMWNjNUJPOVZ2aTVCWWFPMWJuWmR2Qmw5N013MVp6eVF5VXFGdGpNVnJwTEVhbG9EbG1ya2NndFhJVS9naXZYdVk5KzBINkZudTZIT0JydFBPZkVMdEQyeVY3V2QwN0hEZFdOODBQdzZrdDZreU5HS21VVmpmV2pRYXpSVk5hRmhRRE5GR0lHaEpnWWpFbFZBL1F1ZjRzR3p2Ly96WEhuaG5pUkI4MU9IMFMvc3d3TU1yYXJrMk9qTGpDcWloNnl3Q1g3THJodFd6M2FHb0tMNC9ZSUtHSFZVZUs1UjJLMEpza1RQT2dQcmhpRVhzV1VwektOMmxCNkc4SnBBWVJvTlJRVkdJbURQUFZZNlFudVFiaitXLzFpVFlzU0U3YjB0STRBWVpYU1lqdGJ3TGIrZ0Uzdld2Zlo2ZjQ2bkswSU5tUy9qV1ZQZ3g0N3Z0Y204THdPYVVyV0dTSitJaXI2b0FPZjlIWGNYWlNOS2xReVg5ZnJvUUh0bExyUkRaZUtMb0paVVhmOFZabmptcXFrbjAzLytTL2Zxd1d0NjVzeHVtMUd6S1BLVnRPTmRJV1JpR21vaW1QN3RCVkVaS3gxTnNEMUY1ZG93ajhhTExYWS94M1BFK21mc2Q3ck1qbWpYVW1hVmVRN1VjTmJ6Z0lsT1NPb3V6c0JtRGxXQzRFSytsSDN6eUdXOTVDTlBlMXJ6U2tkY256dkx3Q2x3V01naXZzVUtCRlcrWWZ0K2NkNjNZNjRqSW1EUlZzN2dzVVdvc1h1MG4xbDU3UXJIV3Q2ZTRSV05GdFdSWk4yNkozdlVwTnkyR1ZySmtrOHhhWktmWTlQTDdVSFM0L25XWmZldWM5WlNZRkw5MklvckVlNGp0SUJVdWo4UkxoVmRZWCtsdnIrYURNVGRsUDRJSktlVHYwalN2QmE4bEpnZmd0T1E1K1diWWNGMGc9PS0tbXFWSGdrNVp5bTM3cjVXSWRKQVJmZz09--f6da2704e8f37523bc545b8626fa477654ff0041; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "b6855e8b-3f3c-498c-96bc-dff0e421a0a6"
								},
								{
									"key": "X-Runtime",
									"value": "0.036412"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "Invalid SupplierId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=VWRQallGTVlpSGtUK3lveEttSG5vL2tWWFk1NWFnK21xK3RYVXdhZzJqWXRCcndSZVJLYnZTeUlRenk3SDN4VllXTkt4R3NoT3pNdXhTMDJ1SzdFQTJFanByc3dHeWlXRVlIMXBDbnVEZjY1UGovUVY4QW92TFVCRllZdk1nV2o0Q1FIbEIzYmN5UkI0ekhPSXUvUExlTmRHc2xJUzFzaC9vd003LzYzUUNUazJteGhYVit6T1gyRER5RHBma2xjNGVweVVZcDNvM3VVZVhEZ3NzUEsrcXhhMWJWZXFVOXJOVlFxSnkyaHhMaEdaeSs3MysvMVY1WnJud1ZPS0pyQ1Jncm9hM25uYU9EQ1h4NjBKL0tVdWpEYnpmYS9wMDRLLzJlWHdDemptRkI4T1lrREZPdEtva2c5TlN3WEI3eW5hNm9iWExBUi8vRW9uTG5SUDRDWXhSdGpyemwxcGRKSllqSXlsSWJBVHg2L0tFOWtHMzdxbmRqTXFLNUNHSXdSNHdjM0ozZldQTjJML2FxU1VXYi9raDltOC92aFZuTjkzamtvb0VhTGQ5cVk0a2puYTJTYVpGTUtGK2o1TndnZDE0Y0hSamFQRFZBcDJNM2JKZWlwMFhjUFRZb2E5OWtKRWJIalo5TGNLcDlPVXp3RHd6ME5sdmg5MUdyZnN5MlVQaC9Ea2Z3OTQvd2YzZjJTMjJGRGpBcXhyZFRubWVTTnlodGJkOUszYWI0YzRqTGYrMXM5c29WSEYzY09Ub3BXTVJ2emFYYlJIc1VkQ2JOL1dMMlZYckdRM2M5d0hsMHBrNVU2ZkdtdEJmQXN1MHhFMnZRd1lqdzlxVFBpa2JhV0xXOWllbDBhV0pId052UVVRb0NLYWU5N3NodVI5RGdLUXpBRVpxUDJ3KzBzWXFLOHlVQlArQU51NHdhWUE5MTBlS2N6OWp4K24vVDgzTWdrQ3d0azYvSWtPV2J1MjFUTXQ5cTh3RDVTZ3gzR29yOHIwR2liTkt1eGl2ajkwTmEvMkxoYW42QkRuMnQybm5TTytTd3lzdlMrZktGNUEyTTkxSVY5V3lBT2hrNnorTmpLSFhpWVBFSHluaVNMR1Z6VEtRdU9QQnp1MEZXOThDUGlUYnRPT2J1dDVGcW4zYzI2ZXNCdHY2Zmtybzk3TitSVXVEOFRjUDlVbFJoOHM5Z2ViR2JoRGwrZU9FN0lBVGRRT3YzMXFNY3VTL3g2UzQ3aWp5RHY0SjNRM3pPMUc2Z0hMQ2svdGQwYzhRTEE4WkZIZU5wdWVBMWl2KzByWEErVGFNNnRsWThLcGNzUzVsZE9URHBLT2hBcUhDQ0RVQzZ3NytEc2d2UGtGT2w0VGg4dkpXN0xHNHVPaWVMcFQ4V0laVTZUbGFDbWNDWXM3djMyZE5ZRTFkZ3dySWZDNCtjWndzalF3aEFxcGVDbVEzWlk3U3lEQTNweE9iaDZyMWlSS2NxMzVKQThVTkE2Qno4Z2wvVUxGbGpKQlFHTUgveDhTQWxUSTNEMWM3WWdod2tvWDF6Z3oreTc4OGFyWjdJSGptbjNsU1R5UXNTRldGcVpaUkVzS1pzOFJ3dkxVSFovbWZUN3p6VGVEWEJQaVkzYmdaZE82SjQyQ2NQS0l5OHlWRE95b2c9PS0ta00wVDhMc2dmY0NBSU9PcmxGd1poQT09--ec2a30ffb0a7f93990ae4bfdf8c266e16a6b0408; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "f5380e7f-7cdc-4f82-aad0-6ca6d3c2a22d"
								},
								{
									"key": "X-Runtime",
									"value": "0.005480"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"invalid_supplier_chain_id\",\n    \"message\": \"Invalid Supplier Id\"\n}"
						},
						{
							"name": "InvalidOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"8817\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 409\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:56:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=MXBkUitZL09GK1RLcGh4enM3N0hDMTRiZWltaUt5R09oRGRqLzVKUHVDWWQzMm5ZSWVkSmVUQmU4ZUJSSk9NQWlJSlV2enVKMDY0QWVYb1Vqbmw3Znh1eWk1Njh4OGRJcW15d1FoRTU2aHFybDkyT29nQmRVNUJabEdLRXVWUlNlYlRZK3FEZXdTejZQbE5WQmlSQThyaXo5UTBjQjhMU3VUb3BLSmJVcHlaRVYwOWNwK1FnaXcrdnlOMmgvcTF5YXZlOFZEdXhoRTVhdytIUXIyd3pMZ3Yvd1BoVVFlSkFNN3EvMDRVdzM3Y0FscGxMZ0N5RS9oVHZjN1FVREgrSE5jVk82SVFXdVlXYkxvU3V3SVJSMCtPY3A2WGRQbEVXUUo1U2xPYzFReWdQSm9GeXhOenY3NU8zV01kNVFQeU1JU1JQQmx2Z0lCQTJyaUdxRXd1WUhWMm1ra3BVZEVKRlNDK3dqTlJ3ZGNjRUZCSFlFdElCellPOE9kSDFiYVI2Tk1oWlU5enN4SmhrcE5pUWVCcjdNb0gxY3dleVlYWXFuRFdWSk1pMFIzcGlFZTAwcyt4Ui9wZy9zbmRBamJVNUV3dTR1MVB5YUR1SjhhakxuejRzMkVuSFRpV2p5bVV5TmVpM1FqY3dHWWU0cFVIYXc1QUdIc2RhT1lMWmFVc3diMlN4cWNOWUZPdHJoK1dHMDZWMGU1SmpNR1laMkVObEZlMjBEVVBiRVlka01LWmFjc2I1Y2w5VTRHTTFpSStTSzRNTy82Rkl2bzE1NHJZSkhlbGxWWjhUb1VOV2V6YmdvcWRzbGVENWhQejJ5MFdTY0x5WTU4V3JCQ2tCaGR4WXZYQ1NKcFloMEs0U1gzWHpUQWcyNnh6UG1sRTRjZGZ6dmZHclExKzJKcVQvUnVHZjdrSlN5eG9kSXp2WFFsUTFpYXovL1UzZ0IvOGFZR2dGYm1tSUxoV3pkNk8rSExRMWFXN3NVMTM3K2V0bll4VXJ3S2hjb2lCN2VkL0Q0SGxQeVhFUk1iczNGNVdydDF1Uy9ucTVFV04rSm40NlhrZmlxUmxMdUtEUjlZcmh4L0NLNU1oZ2NudWtJMTBjUmQyRXBLZzJ4NXVHZEFJazFTdVpBU3dSYzlIN2x3czhKSUYraGpLVWVwcXFwNTZSQy9nNXhuaTF5SGR3YkJ4VDlEUlZoOGExMXBJeC8xNC9sZGtUaFFZTmxkd3V0TUpaczVKdkM2RjkvV3I4NVo1WjdMM2JNVHNrNUpUWVUyOXNyVi9Xc1NDa2twVUR2MCtvN28zM0N4ZVNqVXR3WHRnSFNxQTlsOEZDQjJSTTdIWCtUd0dWRm9vSTV1SWFYb2pCQ0J6RXk4R2ZLaUNIWjVoNWc5aFMrL05OWVArNW5zNmhWQVBvc2RpKzIrcFF1dUtQSFF1R3Y2RHFoN01HNzRKMEpMb1VjMVlhREszdTVmYlBLL24xTlBoeFpobjFBQ1NCZk8wQWsxUlh2ckVNT0ljMmI5ME0zZnVBdGZ5cGdpUUlCYzM2eW01SW9qVGJFcXdBQ2Nnc3llcnc5ZmV5T0lsNTlzbklJTjBVWWE5RlZPUUxNdXQwWUdWWE8wQmVTNG11OGVScW9CRVNlcEVYTlVPT2djSDU5akV0T3c9PS0tSWxJcnJBR1hZaWh6Wkx3NW1pclhEUT09--03cfa8ce49c8c11481ac76963088442e9f92c5bd; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "3040cbde-16ef-4be9-8ce5-181b9cac4a7c"
								},
								{
									"key": "X-Runtime",
									"value": "0.125114"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Otp\",\n    \"type\": \"invalid\"\n}"
						}
					]
				},
				{
					"name": "Create Sub Store Verify Otp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "supplier_id",
								"type": "text",
								"value": "272",
								"disabled": true
							},
							{
								"key": "uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "access-token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": \"8111111111\",\n    \"country_code\": \"{{country_code}}\",\n    \"otp_code\": \"1234\",\n    \"app_namea\": 613,\n    \"fcm_toke1n\": \"e9lYiZBhRvemMV8jOw4GIZ:APA91bEDPIKvOJYp9XtMEpoZm-v12XBF-coz63ZXPmRFXYKlRDjKGMgRGGIzf3nikLfOm6sAncNp4qIXelWpUERUTnMBXzC5b2n48XSKVK-NJc-mOGpwP5GwFf-AJVQiECg_RpB-j9Qr\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/create_sub_store",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"create_sub_store"
							]
						}
					},
					"response": [
						{
							"name": "OTP Expired",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=OThmOHhjSml6RUNWNE1VRUhpaTIyYzdTaHVyM2lMbXV2N2dEWDFOVThreVA1bE4xdTJLbTd3VEt1WHFLZWRqWjZ1NXFtMWh0RmZtQXl4N1NPZFBsTFA5a1M1eTJscmRVTDFIRUsvak10bHdkMXd4VGdRZ3lvS2VlNDFERWFzUEZMeGVHazRVL2tpNWtZZnZVUGx4RisrVloyVk5TVVYxMWNqRmJtUG93cXNGOTlESXlBMkttRlRLTkdEMWJ4Q3FpS3BqRUFQb1llbUMreVpLRlRkaXJ1cUczS1cvK0I0K1grZ2gxaE1PMU96NHJCd01hYldvUHZwR1VNR3lka2FLQ2Nnb1ZYaUV4R2xUOWxhMnNpTGllVGZIN2ZiVHhINDZvb2N4OUxaampaMEluL1hQY2NnYk4yT21ackRwejY5Q3U4VkQ4c1ZkeDRPQzBveCtndGV1aU82bTcxMEg5bE9LMlFHR005NnFDMzJKNmNzNDB2Wi96RkFWMy9RUTluWGxGRkVYaDQ5bVVHR0JJSzRWK2V1TkVwNFNpVkcwbTBaZW9jcDgzNGU4dHc5QzkzbmlpYkx0WmdhNmVuZmZ0cXY0ZHpHMjl4YXcwdk1jckd5QmJTSWpjb3k1MlF6V2tvcFZhbFNHWDFzTllFNjJiL29vZGZFL1FweS9MSjNDQy9xNGV4OCtudkkwbnAxbDdBZTA2YVVSNDAxTnhsVnBKQW9LWXhZV0I3YWNQQVRJdDdhZ2t0RnRIVmsxaE1WczU4NytDWGoxb0tFNityS3NBWURYL29vRUJxNEhiUk8rWEdvNGNBYUczd1dGNnAxU3VyZkUydjl6RWM0VkdWVTZrdUJ1YWMxYVY4ajBaRUs4cWpaZHRMc1ZWcVVzVk1uRWFHc0NxbXpTcHo0Y1R6c1pWSzhYay9lQ1RlRndxSllRRURnSTRoTUg2NWNzWkZ1MER2MmlIM0lYbnZrV2Q3NUp5eFNNUUFkdHJwb2ZpcHppSGFNYmRZQVJxZmZLTm0rcWdiVlh2V2xXSlJvS1pWbDNMOVhkL0RLU3ZKTk9OUXhINE9jeDBpSUdvMjdsMTJlcytUL2VGeFd2OHhmbW8yVjNSSjZBWUd0VU9iTituV3Zld25Ha2JDNWFJS25vNS9QVUh5M1lJd1RzNEhCSXBnVVNUaG5HS1J0YTFBckdNdEdGb1JUTENRWmI0dURXbHpHVXpITFFqNWNGdEdvcndiQjVnd1pKeEZsWU9oSWM5cURoMVpaUXNOcjZkaEJRelp1S0ZTelI5ZWxuSkQ4c2tBZUpFdnRBUWZ2dG1VaThic3ZpSkVXdkV5ZWYrWTBpYSthS0NLWXhIL1ZQOG5hRW1nRFpsVE9sekhxbE5BNTBXOTlSMWtJNGQwRmFUa2t6eGRaWjdGMkN3OWUybC8xc2dnQnJ1NGZmY0NpQkJGejFiS0lCaDNwTXl2Yk9MN1J6Qm0yWHYwNFNWRjFYOTUyK3VDZkhSWEcvSWJtM2FFeE9NSS9ucGFKSGxPOEErR2V3eGlFUHJtWnd1dERiMHlDSURLOTJNREJsWVpHOEczQVhXQml6dStnQmRVV1NGaGlpTHViTGwvUmJSTTA0aXdMa3VNYU02Q2VWbmxXVkxUMjhrdm5nSFBoaUQ2cEZhd1E9PS0tRFNLSHhBV0twUDE2S3Z5L0I2RjZpZz09--6353f430dd4c42ae5423008d9411a8b21b61392e; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "71371364-554f-4a0c-8ea3-8658679a615c"
								},
								{
									"key": "X-Runtime",
									"value": "0.210981"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:59:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Access-Token",
									"value": "GrpheNgkFUH8wwixjwOMnw"
								},
								{
									"key": "Token-Type",
									"value": "Bearer"
								},
								{
									"key": "Client",
									"value": "vZqbia0mRQ-T6j1_tiWu1w"
								},
								{
									"key": "Expiry",
									"value": "33010714774"
								},
								{
									"key": "Uid",
									"value": "9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Etag",
									"value": "W/\"8155e657bf4f1866f677db487a367565\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=cVo1TWZTaFFzejFPS0dyeXlyZHp0eEVwb0ZJaGxxY1FWd2RFUU9RRUI1ditVcXY5b2dra1NQUklHa3FZLzQ3dGRjVmxwdDNqNmZPaE5SbjR3d21zT21kMUdLMzZGdDJ4cVlySmpFR0JxTkliVXlCcEVTbzBEbVFUUWZmdVpzMG1SL2pobmhuNlFhWjl1M2dWMFB4cVNpTkwwYmZmSWRuOXNualR4TkxWbytkTzFPaGtudEZib3BpZlJOTTNZZmExWkFJS1V6SWg2anBtdlUzbGFuTDd3T2hjU2gzcmYzMDF4Q0ZQVGMwR2EwTVBWb3NGd1BENmdTSHR6UzRhN2EyZkVqelJFQm4xTUhobVFCd2dReHg3cEZ6V1JUK2RrVjlLVHJUdFJWVjlBNmpiZ25yaWFPVm1QbDZaQy90dU5oMVhlRDY4MGRlMWQyaHJVNXczeTRsZlpCa3Nna3JvNHpxYjZBOE5idTIzZE5yNmRHQ3B6VmFaQWJNU2VnSk1mcFp6MHUyaERyd2ZyYmpPV0UzWXlrZlJPb2R5UTVoc0dVWE1DdUhQWmZ2UStkVlRoSHZrbllUNzcrVnUxS25rZUFQWUpYMkZVek9qV1pqcEE4WExTblBBMzlwc3M1dXQrSytobEpOcUpuZFFHNUE4MnFqVWxMcmpCajlTNmVUbEFVYXVFYlFqejl4WjcweXZtcm1OYWhXUndoTnEzZjFnMHZXclhubWl6dFNlbVk4a3F0SWZScEtvZEpxSktHS05MS1JiN2twclY3VG1WVEIyWlFoaWNuWnRtcnltajFFamN6cVo2RWFJZlhFZ2YzTElFUzFqUXg4MXFYa0lQOEQ4WUEzMWk4R1l5NGxmWDYzclAyNkIvUWJwY296SEVDcXFENzM5ZDlJZmxaOGlUZG9md2NObVRrcWFYU090UzRURk1LWHd0cWRtVm5BVEg4Qzd1OU5GU1dYNmdIYURKMk9OMkQxbHJWbFZRbXdGVHA2Tlg2cWJiZTVra1RsSkZIWVB5cTNTTUFYWTJCK0oxZTB5SzhuUlI1S1RTczhRaTBvSG0vUWxncTJveGJkempsNmVhVS9QT0paR0Q5WTB0UjlwR2IzNC9sQVNFSUZEU0ZqUXR6enZ1ZEU2emN0czMxL1I1dVhCbGhFSEZ3aFEyRTJpL3RpaWhQYm1MQnErN3ByNWJSWnBvS1JHeGFISnBDUGZGcUZrdTc1Qnh4SDFMOWhBYTdpV0s1VHNrZ01JbUhyNEwyNUdBY1lXN0JnM3pkRG1JWmZOS3ZoaWQ1R1MwYm4rR1BtcW4reEhMaUpZZjVZbkpHREhYS2haU1JEVGFQcnhUTExqeGVNREhqdDRvbmgwZEtvdDl3aHlUbENqSVBJYkNTRHhVR2dmRUFrd0paZi9rOE5FdEJPQnFNRnNWSjV2ZXNnYjdVaUxFMDJ0V3RMK0pHQzVTS2tNOWJ3bGhUSmxlNm1pYm9nWmdONkZQTUoyVWxsVkhXZi93V0Z6b0dOTGxrNWlXblhuQitIRXUyL1ZoNm1JU2dtcE8wdVBWN2dQWUtoYWRWRktCb0J1STZqSDFadjBmT0lEN3loSlc5bXdGenRwd1I5dFpLOG1EbU5BZ2lRR3pSMndQYTJSS29iL3E1RFZ1UlRyZHc9PS0tQVVkSmU2QlFPTVNBMmJscFhFbjdTUT09--12ae8dfb1da36b1c2cce3313e3cf938e55b8e3b7; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "af35ab65-f5ca-4d92-a19b-be8f786cc883"
								},
								{
									"key": "X-Runtime",
									"value": "0.289858"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 28411,\n    \"email\": \"b88a4014-5f54-44dc-9631-d96fe6c0e54a@migroceruser.in\",\n    \"persistence_token\": null,\n    \"perishable_token\": null,\n    \"last_request_at\": null,\n    \"login\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"ship_address_id\": null,\n    \"bill_address_id\": null,\n    \"authentication_token\": null,\n    \"created_at\": \"2019-06-21T16:29:34.146+05:30\",\n    \"updated_at\": \"2019-06-21T16:29:34.297+05:30\",\n    \"spree_api_key\": null,\n    \"deleted_at\": null,\n    \"supplier_id\": null,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"area\": null,\n    \"last_visited_store_id\": null,\n    \"city\": null,\n    \"state\": null,\n    \"country\": null,\n    \"provider\": \"email\",\n    \"uid\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"phone\": \"9014259811\",\n    \"sub_area\": null,\n    \"is_valid_email\": false,\n    \"is_guest\": false,\n    \"referral_credits\": null,\n    \"referrer_benefit_enabled\": true,\n    \"offers_availed\": [],\n    \"device_token\": null,\n    \"store_id\": 468,\n    \"referral_code\": \"JNDKSVUG\"\n}"
						},
						{
							"name": "VerifyOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=SjFrK3R2UG5GVnpLeWRZR1hiWjRWdDg5QitXaHhCeHM4VU9qL21SOWJ3OVRpb3dzL0tzalgwRE84NlJxay80eDMxeUZOc2VVYmpsSDhodkZONmZIOHU4Y1Jud2ZEaE1OeW1iN1JmU002ZE40MFZSSk0xYVFNTzVIMG1EbzlVSjJuZEVVZHZCL1NKYWhQSGxwWFN4V3pZS1hyUmFITlpVRUZoaGFHbXZ0ZmI2NEVHL1FFVVpTRjhNY2M5Rlc1WFEzemluY2k5OEtxQXVTbnJDMDB5UGpGdXlDTEg4QnNWUUhsZk9FOTg5ZUNQVDJFS2VYd2pKOElDdHdzUjZOOVdabCtBNWFMY0JwOEs4K29kK21lVmt0NHg0MXBFUHdMMS9QVW9SUUdoaWt6eldOcjdSZEx0YS90dFIrem5ZTDF3Vms0cW9pNVN2amFCR1ZsVnQyUkZLQktlNndGM2lxMi81T01wckN1UWQ2eU9wU1FhRkZ3K1FSRVI0eE9MSzVpYzhPZHJnT3NHQzVHM2VXTDBUZWxIMmptTFdzMUFqQXRaenhPVXlXVXpsRnloQlpyYXNmajZWM1drMmt1SmtjMTMwUER3S0dYSVRxUnVoT3JwQzJlbnZYblhLV2l1c05kU2FDRWJsb0RIUWlaU29wTkFOWjQwN2ViMXcyM1VFVWZjeFllaHRJLzVIN2RUQjZJMWNjNUJPOVZ2aTVCWWFPMWJuWmR2Qmw5N013MVp6eVF5VXFGdGpNVnJwTEVhbG9EbG1ya2NndFhJVS9naXZYdVk5KzBINkZudTZIT0JydFBPZkVMdEQyeVY3V2QwN0hEZFdOODBQdzZrdDZreU5HS21VVmpmV2pRYXpSVk5hRmhRRE5GR0lHaEpnWWpFbFZBL1F1ZjRzR3p2Ly96WEhuaG5pUkI4MU9IMFMvc3d3TU1yYXJrMk9qTGpDcWloNnl3Q1g3THJodFd6M2FHb0tMNC9ZSUtHSFZVZUs1UjJLMEpza1RQT2dQcmhpRVhzV1VwektOMmxCNkc4SnBBWVJvTlJRVkdJbURQUFZZNlFudVFiaitXLzFpVFlzU0U3YjB0STRBWVpYU1lqdGJ3TGIrZ0Uzdld2Zlo2ZjQ2bkswSU5tUy9qV1ZQZ3g0N3Z0Y204THdPYVVyV0dTSitJaXI2b0FPZjlIWGNYWlNOS2xReVg5ZnJvUUh0bExyUkRaZUtMb0paVVhmOFZabmptcXFrbjAzLytTL2Zxd1d0NjVzeHVtMUd6S1BLVnRPTmRJV1JpR21vaW1QN3RCVkVaS3gxTnNEMUY1ZG93ajhhTExYWS94M1BFK21mc2Q3ck1qbWpYVW1hVmVRN1VjTmJ6Z0lsT1NPb3V6c0JtRGxXQzRFSytsSDN6eUdXOTVDTlBlMXJ6U2tkY256dkx3Q2x3V01naXZzVUtCRlcrWWZ0K2NkNjNZNjRqSW1EUlZzN2dzVVdvc1h1MG4xbDU3UXJIV3Q2ZTRSV05GdFdSWk4yNkozdlVwTnkyR1ZySmtrOHhhWktmWTlQTDdVSFM0L25XWmZldWM5WlNZRkw5MklvckVlNGp0SUJVdWo4UkxoVmRZWCtsdnIrYURNVGRsUDRJSktlVHYwalN2QmE4bEpnZmd0T1E1K1diWWNGMGc9PS0tbXFWSGdrNVp5bTM3cjVXSWRKQVJmZz09--f6da2704e8f37523bc545b8626fa477654ff0041; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "b6855e8b-3f3c-498c-96bc-dff0e421a0a6"
								},
								{
									"key": "X-Runtime",
									"value": "0.036412"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "Invalid SupplierId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=VWRQallGTVlpSGtUK3lveEttSG5vL2tWWFk1NWFnK21xK3RYVXdhZzJqWXRCcndSZVJLYnZTeUlRenk3SDN4VllXTkt4R3NoT3pNdXhTMDJ1SzdFQTJFanByc3dHeWlXRVlIMXBDbnVEZjY1UGovUVY4QW92TFVCRllZdk1nV2o0Q1FIbEIzYmN5UkI0ekhPSXUvUExlTmRHc2xJUzFzaC9vd003LzYzUUNUazJteGhYVit6T1gyRER5RHBma2xjNGVweVVZcDNvM3VVZVhEZ3NzUEsrcXhhMWJWZXFVOXJOVlFxSnkyaHhMaEdaeSs3MysvMVY1WnJud1ZPS0pyQ1Jncm9hM25uYU9EQ1h4NjBKL0tVdWpEYnpmYS9wMDRLLzJlWHdDemptRkI4T1lrREZPdEtva2c5TlN3WEI3eW5hNm9iWExBUi8vRW9uTG5SUDRDWXhSdGpyemwxcGRKSllqSXlsSWJBVHg2L0tFOWtHMzdxbmRqTXFLNUNHSXdSNHdjM0ozZldQTjJML2FxU1VXYi9raDltOC92aFZuTjkzamtvb0VhTGQ5cVk0a2puYTJTYVpGTUtGK2o1TndnZDE0Y0hSamFQRFZBcDJNM2JKZWlwMFhjUFRZb2E5OWtKRWJIalo5TGNLcDlPVXp3RHd6ME5sdmg5MUdyZnN5MlVQaC9Ea2Z3OTQvd2YzZjJTMjJGRGpBcXhyZFRubWVTTnlodGJkOUszYWI0YzRqTGYrMXM5c29WSEYzY09Ub3BXTVJ2emFYYlJIc1VkQ2JOL1dMMlZYckdRM2M5d0hsMHBrNVU2ZkdtdEJmQXN1MHhFMnZRd1lqdzlxVFBpa2JhV0xXOWllbDBhV0pId052UVVRb0NLYWU5N3NodVI5RGdLUXpBRVpxUDJ3KzBzWXFLOHlVQlArQU51NHdhWUE5MTBlS2N6OWp4K24vVDgzTWdrQ3d0azYvSWtPV2J1MjFUTXQ5cTh3RDVTZ3gzR29yOHIwR2liTkt1eGl2ajkwTmEvMkxoYW42QkRuMnQybm5TTytTd3lzdlMrZktGNUEyTTkxSVY5V3lBT2hrNnorTmpLSFhpWVBFSHluaVNMR1Z6VEtRdU9QQnp1MEZXOThDUGlUYnRPT2J1dDVGcW4zYzI2ZXNCdHY2Zmtybzk3TitSVXVEOFRjUDlVbFJoOHM5Z2ViR2JoRGwrZU9FN0lBVGRRT3YzMXFNY3VTL3g2UzQ3aWp5RHY0SjNRM3pPMUc2Z0hMQ2svdGQwYzhRTEE4WkZIZU5wdWVBMWl2KzByWEErVGFNNnRsWThLcGNzUzVsZE9URHBLT2hBcUhDQ0RVQzZ3NytEc2d2UGtGT2w0VGg4dkpXN0xHNHVPaWVMcFQ4V0laVTZUbGFDbWNDWXM3djMyZE5ZRTFkZ3dySWZDNCtjWndzalF3aEFxcGVDbVEzWlk3U3lEQTNweE9iaDZyMWlSS2NxMzVKQThVTkE2Qno4Z2wvVUxGbGpKQlFHTUgveDhTQWxUSTNEMWM3WWdod2tvWDF6Z3oreTc4OGFyWjdJSGptbjNsU1R5UXNTRldGcVpaUkVzS1pzOFJ3dkxVSFovbWZUN3p6VGVEWEJQaVkzYmdaZE82SjQyQ2NQS0l5OHlWRE95b2c9PS0ta00wVDhMc2dmY0NBSU9PcmxGd1poQT09--ec2a30ffb0a7f93990ae4bfdf8c266e16a6b0408; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "f5380e7f-7cdc-4f82-aad0-6ca6d3c2a22d"
								},
								{
									"key": "X-Runtime",
									"value": "0.005480"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"invalid_supplier_chain_id\",\n    \"message\": \"Invalid Supplier Id\"\n}"
						},
						{
							"name": "InvalidOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"8817\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 409\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:56:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=MXBkUitZL09GK1RLcGh4enM3N0hDMTRiZWltaUt5R09oRGRqLzVKUHVDWWQzMm5ZSWVkSmVUQmU4ZUJSSk9NQWlJSlV2enVKMDY0QWVYb1Vqbmw3Znh1eWk1Njh4OGRJcW15d1FoRTU2aHFybDkyT29nQmRVNUJabEdLRXVWUlNlYlRZK3FEZXdTejZQbE5WQmlSQThyaXo5UTBjQjhMU3VUb3BLSmJVcHlaRVYwOWNwK1FnaXcrdnlOMmgvcTF5YXZlOFZEdXhoRTVhdytIUXIyd3pMZ3Yvd1BoVVFlSkFNN3EvMDRVdzM3Y0FscGxMZ0N5RS9oVHZjN1FVREgrSE5jVk82SVFXdVlXYkxvU3V3SVJSMCtPY3A2WGRQbEVXUUo1U2xPYzFReWdQSm9GeXhOenY3NU8zV01kNVFQeU1JU1JQQmx2Z0lCQTJyaUdxRXd1WUhWMm1ra3BVZEVKRlNDK3dqTlJ3ZGNjRUZCSFlFdElCellPOE9kSDFiYVI2Tk1oWlU5enN4SmhrcE5pUWVCcjdNb0gxY3dleVlYWXFuRFdWSk1pMFIzcGlFZTAwcyt4Ui9wZy9zbmRBamJVNUV3dTR1MVB5YUR1SjhhakxuejRzMkVuSFRpV2p5bVV5TmVpM1FqY3dHWWU0cFVIYXc1QUdIc2RhT1lMWmFVc3diMlN4cWNOWUZPdHJoK1dHMDZWMGU1SmpNR1laMkVObEZlMjBEVVBiRVlka01LWmFjc2I1Y2w5VTRHTTFpSStTSzRNTy82Rkl2bzE1NHJZSkhlbGxWWjhUb1VOV2V6YmdvcWRzbGVENWhQejJ5MFdTY0x5WTU4V3JCQ2tCaGR4WXZYQ1NKcFloMEs0U1gzWHpUQWcyNnh6UG1sRTRjZGZ6dmZHclExKzJKcVQvUnVHZjdrSlN5eG9kSXp2WFFsUTFpYXovL1UzZ0IvOGFZR2dGYm1tSUxoV3pkNk8rSExRMWFXN3NVMTM3K2V0bll4VXJ3S2hjb2lCN2VkL0Q0SGxQeVhFUk1iczNGNVdydDF1Uy9ucTVFV04rSm40NlhrZmlxUmxMdUtEUjlZcmh4L0NLNU1oZ2NudWtJMTBjUmQyRXBLZzJ4NXVHZEFJazFTdVpBU3dSYzlIN2x3czhKSUYraGpLVWVwcXFwNTZSQy9nNXhuaTF5SGR3YkJ4VDlEUlZoOGExMXBJeC8xNC9sZGtUaFFZTmxkd3V0TUpaczVKdkM2RjkvV3I4NVo1WjdMM2JNVHNrNUpUWVUyOXNyVi9Xc1NDa2twVUR2MCtvN28zM0N4ZVNqVXR3WHRnSFNxQTlsOEZDQjJSTTdIWCtUd0dWRm9vSTV1SWFYb2pCQ0J6RXk4R2ZLaUNIWjVoNWc5aFMrL05OWVArNW5zNmhWQVBvc2RpKzIrcFF1dUtQSFF1R3Y2RHFoN01HNzRKMEpMb1VjMVlhREszdTVmYlBLL24xTlBoeFpobjFBQ1NCZk8wQWsxUlh2ckVNT0ljMmI5ME0zZnVBdGZ5cGdpUUlCYzM2eW01SW9qVGJFcXdBQ2Nnc3llcnc5ZmV5T0lsNTlzbklJTjBVWWE5RlZPUUxNdXQwWUdWWE8wQmVTNG11OGVScW9CRVNlcEVYTlVPT2djSDU5akV0T3c9PS0tSWxJcnJBR1hZaWh6Wkx3NW1pclhEUT09--03cfa8ce49c8c11481ac76963088442e9f92c5bd; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "3040cbde-16ef-4be9-8ce5-181b9cac4a7c"
								},
								{
									"key": "X-Runtime",
									"value": "0.125114"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Otp\",\n    \"type\": \"invalid\"\n}"
						}
					]
				},
				{
					"name": "FBLogin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"let uid = pm.response.headers.get('uid');",
									"",
									"let access_token = pm.response.headers.get('access-token');",
									"let client = pm.response.headers.get('client');",
									"",
									"pm.collectionVariables.set(\"uid\", uid);",
									"pm.collectionVariables.set(\"client\", client);",
									"pm.collectionVariables.set(\"access_token\", access_token);",
									"",
									"",
									"",
									"console.log(\"uid : \", pm.collectionVariables.get(\"uid\"))",
									"console.log(\"access_token : \", pm.collectionVariables.get(\"access_token\"))",
									"console.log(\"client : \", pm.collectionVariables.get(\"client\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "supplier_id",
								"type": "text",
								"value": "272",
								"disabled": true
							},
							{
								"key": "uid",
								"type": "text",
								"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
								"disabled": true
							},
							{
								"key": "access-token",
								"type": "text",
								"value": "R9vgiznm-19EnNbAyb9F4Q",
								"disabled": true
							},
							{
								"key": "client",
								"type": "text",
								"value": "3JepNbFc3Yt-ljRYdlee1g",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"supplier_id\": 1,\n    \"token\": \"EAAP7sbyRb1oBACnewUXdA3G2rvZC4sL4RmqsZB7ZCrFu6x52slRfXcIeDICvkZCpcWAEJC6HmWeeVGsLATZB4kTonZC4EuybsGxyZAb4dfJmwquk2eEjubhuu1zMWgyeHjzYuPpGhZAelg3lO4zSQZAoGoQCpeKW27g7yhw3dVSJJIUsRqKZBDNT3FtEbOFvp6TZBIOWW4Ouedpjw8PzsbZCCYBdYOM9qGmIJPCKZA1XLQZATpBgNHQrMbYLxAB38VEFjDLUwZD,\",\n    \"metadata\": {\n        \"user_id\": \"248136900069620\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/login/supplier/facebook",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								"supplier",
								"facebook"
							]
						}
					},
					"response": [
						{
							"name": "InvalidOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"8817\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 409\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:56:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=MXBkUitZL09GK1RLcGh4enM3N0hDMTRiZWltaUt5R09oRGRqLzVKUHVDWWQzMm5ZSWVkSmVUQmU4ZUJSSk9NQWlJSlV2enVKMDY0QWVYb1Vqbmw3Znh1eWk1Njh4OGRJcW15d1FoRTU2aHFybDkyT29nQmRVNUJabEdLRXVWUlNlYlRZK3FEZXdTejZQbE5WQmlSQThyaXo5UTBjQjhMU3VUb3BLSmJVcHlaRVYwOWNwK1FnaXcrdnlOMmgvcTF5YXZlOFZEdXhoRTVhdytIUXIyd3pMZ3Yvd1BoVVFlSkFNN3EvMDRVdzM3Y0FscGxMZ0N5RS9oVHZjN1FVREgrSE5jVk82SVFXdVlXYkxvU3V3SVJSMCtPY3A2WGRQbEVXUUo1U2xPYzFReWdQSm9GeXhOenY3NU8zV01kNVFQeU1JU1JQQmx2Z0lCQTJyaUdxRXd1WUhWMm1ra3BVZEVKRlNDK3dqTlJ3ZGNjRUZCSFlFdElCellPOE9kSDFiYVI2Tk1oWlU5enN4SmhrcE5pUWVCcjdNb0gxY3dleVlYWXFuRFdWSk1pMFIzcGlFZTAwcyt4Ui9wZy9zbmRBamJVNUV3dTR1MVB5YUR1SjhhakxuejRzMkVuSFRpV2p5bVV5TmVpM1FqY3dHWWU0cFVIYXc1QUdIc2RhT1lMWmFVc3diMlN4cWNOWUZPdHJoK1dHMDZWMGU1SmpNR1laMkVObEZlMjBEVVBiRVlka01LWmFjc2I1Y2w5VTRHTTFpSStTSzRNTy82Rkl2bzE1NHJZSkhlbGxWWjhUb1VOV2V6YmdvcWRzbGVENWhQejJ5MFdTY0x5WTU4V3JCQ2tCaGR4WXZYQ1NKcFloMEs0U1gzWHpUQWcyNnh6UG1sRTRjZGZ6dmZHclExKzJKcVQvUnVHZjdrSlN5eG9kSXp2WFFsUTFpYXovL1UzZ0IvOGFZR2dGYm1tSUxoV3pkNk8rSExRMWFXN3NVMTM3K2V0bll4VXJ3S2hjb2lCN2VkL0Q0SGxQeVhFUk1iczNGNVdydDF1Uy9ucTVFV04rSm40NlhrZmlxUmxMdUtEUjlZcmh4L0NLNU1oZ2NudWtJMTBjUmQyRXBLZzJ4NXVHZEFJazFTdVpBU3dSYzlIN2x3czhKSUYraGpLVWVwcXFwNTZSQy9nNXhuaTF5SGR3YkJ4VDlEUlZoOGExMXBJeC8xNC9sZGtUaFFZTmxkd3V0TUpaczVKdkM2RjkvV3I4NVo1WjdMM2JNVHNrNUpUWVUyOXNyVi9Xc1NDa2twVUR2MCtvN28zM0N4ZVNqVXR3WHRnSFNxQTlsOEZDQjJSTTdIWCtUd0dWRm9vSTV1SWFYb2pCQ0J6RXk4R2ZLaUNIWjVoNWc5aFMrL05OWVArNW5zNmhWQVBvc2RpKzIrcFF1dUtQSFF1R3Y2RHFoN01HNzRKMEpMb1VjMVlhREszdTVmYlBLL24xTlBoeFpobjFBQ1NCZk8wQWsxUlh2ckVNT0ljMmI5ME0zZnVBdGZ5cGdpUUlCYzM2eW01SW9qVGJFcXdBQ2Nnc3llcnc5ZmV5T0lsNTlzbklJTjBVWWE5RlZPUUxNdXQwWUdWWE8wQmVTNG11OGVScW9CRVNlcEVYTlVPT2djSDU5akV0T3c9PS0tSWxJcnJBR1hZaWh6Wkx3NW1pclhEUT09--03cfa8ce49c8c11481ac76963088442e9f92c5bd; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "3040cbde-16ef-4be9-8ce5-181b9cac4a7c"
								},
								{
									"key": "X-Runtime",
									"value": "0.125114"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Otp\",\n    \"type\": \"invalid\"\n}"
						},
						{
							"name": "Invalid SupplierId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=VWRQallGTVlpSGtUK3lveEttSG5vL2tWWFk1NWFnK21xK3RYVXdhZzJqWXRCcndSZVJLYnZTeUlRenk3SDN4VllXTkt4R3NoT3pNdXhTMDJ1SzdFQTJFanByc3dHeWlXRVlIMXBDbnVEZjY1UGovUVY4QW92TFVCRllZdk1nV2o0Q1FIbEIzYmN5UkI0ekhPSXUvUExlTmRHc2xJUzFzaC9vd003LzYzUUNUazJteGhYVit6T1gyRER5RHBma2xjNGVweVVZcDNvM3VVZVhEZ3NzUEsrcXhhMWJWZXFVOXJOVlFxSnkyaHhMaEdaeSs3MysvMVY1WnJud1ZPS0pyQ1Jncm9hM25uYU9EQ1h4NjBKL0tVdWpEYnpmYS9wMDRLLzJlWHdDemptRkI4T1lrREZPdEtva2c5TlN3WEI3eW5hNm9iWExBUi8vRW9uTG5SUDRDWXhSdGpyemwxcGRKSllqSXlsSWJBVHg2L0tFOWtHMzdxbmRqTXFLNUNHSXdSNHdjM0ozZldQTjJML2FxU1VXYi9raDltOC92aFZuTjkzamtvb0VhTGQ5cVk0a2puYTJTYVpGTUtGK2o1TndnZDE0Y0hSamFQRFZBcDJNM2JKZWlwMFhjUFRZb2E5OWtKRWJIalo5TGNLcDlPVXp3RHd6ME5sdmg5MUdyZnN5MlVQaC9Ea2Z3OTQvd2YzZjJTMjJGRGpBcXhyZFRubWVTTnlodGJkOUszYWI0YzRqTGYrMXM5c29WSEYzY09Ub3BXTVJ2emFYYlJIc1VkQ2JOL1dMMlZYckdRM2M5d0hsMHBrNVU2ZkdtdEJmQXN1MHhFMnZRd1lqdzlxVFBpa2JhV0xXOWllbDBhV0pId052UVVRb0NLYWU5N3NodVI5RGdLUXpBRVpxUDJ3KzBzWXFLOHlVQlArQU51NHdhWUE5MTBlS2N6OWp4K24vVDgzTWdrQ3d0azYvSWtPV2J1MjFUTXQ5cTh3RDVTZ3gzR29yOHIwR2liTkt1eGl2ajkwTmEvMkxoYW42QkRuMnQybm5TTytTd3lzdlMrZktGNUEyTTkxSVY5V3lBT2hrNnorTmpLSFhpWVBFSHluaVNMR1Z6VEtRdU9QQnp1MEZXOThDUGlUYnRPT2J1dDVGcW4zYzI2ZXNCdHY2Zmtybzk3TitSVXVEOFRjUDlVbFJoOHM5Z2ViR2JoRGwrZU9FN0lBVGRRT3YzMXFNY3VTL3g2UzQ3aWp5RHY0SjNRM3pPMUc2Z0hMQ2svdGQwYzhRTEE4WkZIZU5wdWVBMWl2KzByWEErVGFNNnRsWThLcGNzUzVsZE9URHBLT2hBcUhDQ0RVQzZ3NytEc2d2UGtGT2w0VGg4dkpXN0xHNHVPaWVMcFQ4V0laVTZUbGFDbWNDWXM3djMyZE5ZRTFkZ3dySWZDNCtjWndzalF3aEFxcGVDbVEzWlk3U3lEQTNweE9iaDZyMWlSS2NxMzVKQThVTkE2Qno4Z2wvVUxGbGpKQlFHTUgveDhTQWxUSTNEMWM3WWdod2tvWDF6Z3oreTc4OGFyWjdJSGptbjNsU1R5UXNTRldGcVpaUkVzS1pzOFJ3dkxVSFovbWZUN3p6VGVEWEJQaVkzYmdaZE82SjQyQ2NQS0l5OHlWRE95b2c9PS0ta00wVDhMc2dmY0NBSU9PcmxGd1poQT09--ec2a30ffb0a7f93990ae4bfdf8c266e16a6b0408; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "f5380e7f-7cdc-4f82-aad0-6ca6d3c2a22d"
								},
								{
									"key": "X-Runtime",
									"value": "0.005480"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"invalid_supplier_chain_id\",\n    \"message\": \"Invalid Supplier Id\"\n}"
						},
						{
							"name": "OTP Expired",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=OThmOHhjSml6RUNWNE1VRUhpaTIyYzdTaHVyM2lMbXV2N2dEWDFOVThreVA1bE4xdTJLbTd3VEt1WHFLZWRqWjZ1NXFtMWh0RmZtQXl4N1NPZFBsTFA5a1M1eTJscmRVTDFIRUsvak10bHdkMXd4VGdRZ3lvS2VlNDFERWFzUEZMeGVHazRVL2tpNWtZZnZVUGx4RisrVloyVk5TVVYxMWNqRmJtUG93cXNGOTlESXlBMkttRlRLTkdEMWJ4Q3FpS3BqRUFQb1llbUMreVpLRlRkaXJ1cUczS1cvK0I0K1grZ2gxaE1PMU96NHJCd01hYldvUHZwR1VNR3lka2FLQ2Nnb1ZYaUV4R2xUOWxhMnNpTGllVGZIN2ZiVHhINDZvb2N4OUxaampaMEluL1hQY2NnYk4yT21ackRwejY5Q3U4VkQ4c1ZkeDRPQzBveCtndGV1aU82bTcxMEg5bE9LMlFHR005NnFDMzJKNmNzNDB2Wi96RkFWMy9RUTluWGxGRkVYaDQ5bVVHR0JJSzRWK2V1TkVwNFNpVkcwbTBaZW9jcDgzNGU4dHc5QzkzbmlpYkx0WmdhNmVuZmZ0cXY0ZHpHMjl4YXcwdk1jckd5QmJTSWpjb3k1MlF6V2tvcFZhbFNHWDFzTllFNjJiL29vZGZFL1FweS9MSjNDQy9xNGV4OCtudkkwbnAxbDdBZTA2YVVSNDAxTnhsVnBKQW9LWXhZV0I3YWNQQVRJdDdhZ2t0RnRIVmsxaE1WczU4NytDWGoxb0tFNityS3NBWURYL29vRUJxNEhiUk8rWEdvNGNBYUczd1dGNnAxU3VyZkUydjl6RWM0VkdWVTZrdUJ1YWMxYVY4ajBaRUs4cWpaZHRMc1ZWcVVzVk1uRWFHc0NxbXpTcHo0Y1R6c1pWSzhYay9lQ1RlRndxSllRRURnSTRoTUg2NWNzWkZ1MER2MmlIM0lYbnZrV2Q3NUp5eFNNUUFkdHJwb2ZpcHppSGFNYmRZQVJxZmZLTm0rcWdiVlh2V2xXSlJvS1pWbDNMOVhkL0RLU3ZKTk9OUXhINE9jeDBpSUdvMjdsMTJlcytUL2VGeFd2OHhmbW8yVjNSSjZBWUd0VU9iTituV3Zld25Ha2JDNWFJS25vNS9QVUh5M1lJd1RzNEhCSXBnVVNUaG5HS1J0YTFBckdNdEdGb1JUTENRWmI0dURXbHpHVXpITFFqNWNGdEdvcndiQjVnd1pKeEZsWU9oSWM5cURoMVpaUXNOcjZkaEJRelp1S0ZTelI5ZWxuSkQ4c2tBZUpFdnRBUWZ2dG1VaThic3ZpSkVXdkV5ZWYrWTBpYSthS0NLWXhIL1ZQOG5hRW1nRFpsVE9sekhxbE5BNTBXOTlSMWtJNGQwRmFUa2t6eGRaWjdGMkN3OWUybC8xc2dnQnJ1NGZmY0NpQkJGejFiS0lCaDNwTXl2Yk9MN1J6Qm0yWHYwNFNWRjFYOTUyK3VDZkhSWEcvSWJtM2FFeE9NSS9ucGFKSGxPOEErR2V3eGlFUHJtWnd1dERiMHlDSURLOTJNREJsWVpHOEczQVhXQml6dStnQmRVV1NGaGlpTHViTGwvUmJSTTA0aXdMa3VNYU02Q2VWbmxXVkxUMjhrdm5nSFBoaUQ2cEZhd1E9PS0tRFNLSHhBV0twUDE2S3Z5L0I2RjZpZz09--6353f430dd4c42ae5423008d9411a8b21b61392e; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "71371364-554f-4a0c-8ea3-8658679a615c"
								},
								{
									"key": "X-Runtime",
									"value": "0.210981"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:59:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Access-Token",
									"value": "GrpheNgkFUH8wwixjwOMnw"
								},
								{
									"key": "Token-Type",
									"value": "Bearer"
								},
								{
									"key": "Client",
									"value": "vZqbia0mRQ-T6j1_tiWu1w"
								},
								{
									"key": "Expiry",
									"value": "33010714774"
								},
								{
									"key": "Uid",
									"value": "9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Etag",
									"value": "W/\"8155e657bf4f1866f677db487a367565\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=cVo1TWZTaFFzejFPS0dyeXlyZHp0eEVwb0ZJaGxxY1FWd2RFUU9RRUI1ditVcXY5b2dra1NQUklHa3FZLzQ3dGRjVmxwdDNqNmZPaE5SbjR3d21zT21kMUdLMzZGdDJ4cVlySmpFR0JxTkliVXlCcEVTbzBEbVFUUWZmdVpzMG1SL2pobmhuNlFhWjl1M2dWMFB4cVNpTkwwYmZmSWRuOXNualR4TkxWbytkTzFPaGtudEZib3BpZlJOTTNZZmExWkFJS1V6SWg2anBtdlUzbGFuTDd3T2hjU2gzcmYzMDF4Q0ZQVGMwR2EwTVBWb3NGd1BENmdTSHR6UzRhN2EyZkVqelJFQm4xTUhobVFCd2dReHg3cEZ6V1JUK2RrVjlLVHJUdFJWVjlBNmpiZ25yaWFPVm1QbDZaQy90dU5oMVhlRDY4MGRlMWQyaHJVNXczeTRsZlpCa3Nna3JvNHpxYjZBOE5idTIzZE5yNmRHQ3B6VmFaQWJNU2VnSk1mcFp6MHUyaERyd2ZyYmpPV0UzWXlrZlJPb2R5UTVoc0dVWE1DdUhQWmZ2UStkVlRoSHZrbllUNzcrVnUxS25rZUFQWUpYMkZVek9qV1pqcEE4WExTblBBMzlwc3M1dXQrSytobEpOcUpuZFFHNUE4MnFqVWxMcmpCajlTNmVUbEFVYXVFYlFqejl4WjcweXZtcm1OYWhXUndoTnEzZjFnMHZXclhubWl6dFNlbVk4a3F0SWZScEtvZEpxSktHS05MS1JiN2twclY3VG1WVEIyWlFoaWNuWnRtcnltajFFamN6cVo2RWFJZlhFZ2YzTElFUzFqUXg4MXFYa0lQOEQ4WUEzMWk4R1l5NGxmWDYzclAyNkIvUWJwY296SEVDcXFENzM5ZDlJZmxaOGlUZG9md2NObVRrcWFYU090UzRURk1LWHd0cWRtVm5BVEg4Qzd1OU5GU1dYNmdIYURKMk9OMkQxbHJWbFZRbXdGVHA2Tlg2cWJiZTVra1RsSkZIWVB5cTNTTUFYWTJCK0oxZTB5SzhuUlI1S1RTczhRaTBvSG0vUWxncTJveGJkempsNmVhVS9QT0paR0Q5WTB0UjlwR2IzNC9sQVNFSUZEU0ZqUXR6enZ1ZEU2emN0czMxL1I1dVhCbGhFSEZ3aFEyRTJpL3RpaWhQYm1MQnErN3ByNWJSWnBvS1JHeGFISnBDUGZGcUZrdTc1Qnh4SDFMOWhBYTdpV0s1VHNrZ01JbUhyNEwyNUdBY1lXN0JnM3pkRG1JWmZOS3ZoaWQ1R1MwYm4rR1BtcW4reEhMaUpZZjVZbkpHREhYS2haU1JEVGFQcnhUTExqeGVNREhqdDRvbmgwZEtvdDl3aHlUbENqSVBJYkNTRHhVR2dmRUFrd0paZi9rOE5FdEJPQnFNRnNWSjV2ZXNnYjdVaUxFMDJ0V3RMK0pHQzVTS2tNOWJ3bGhUSmxlNm1pYm9nWmdONkZQTUoyVWxsVkhXZi93V0Z6b0dOTGxrNWlXblhuQitIRXUyL1ZoNm1JU2dtcE8wdVBWN2dQWUtoYWRWRktCb0J1STZqSDFadjBmT0lEN3loSlc5bXdGenRwd1I5dFpLOG1EbU5BZ2lRR3pSMndQYTJSS29iL3E1RFZ1UlRyZHc9PS0tQVVkSmU2QlFPTVNBMmJscFhFbjdTUT09--12ae8dfb1da36b1c2cce3313e3cf938e55b8e3b7; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "af35ab65-f5ca-4d92-a19b-be8f786cc883"
								},
								{
									"key": "X-Runtime",
									"value": "0.289858"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 28411,\n    \"email\": \"b88a4014-5f54-44dc-9631-d96fe6c0e54a@migroceruser.in\",\n    \"persistence_token\": null,\n    \"perishable_token\": null,\n    \"last_request_at\": null,\n    \"login\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"ship_address_id\": null,\n    \"bill_address_id\": null,\n    \"authentication_token\": null,\n    \"created_at\": \"2019-06-21T16:29:34.146+05:30\",\n    \"updated_at\": \"2019-06-21T16:29:34.297+05:30\",\n    \"spree_api_key\": null,\n    \"deleted_at\": null,\n    \"supplier_id\": null,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"area\": null,\n    \"last_visited_store_id\": null,\n    \"city\": null,\n    \"state\": null,\n    \"country\": null,\n    \"provider\": \"email\",\n    \"uid\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"phone\": \"9014259811\",\n    \"sub_area\": null,\n    \"is_valid_email\": false,\n    \"is_guest\": false,\n    \"referral_credits\": null,\n    \"referrer_benefit_enabled\": true,\n    \"offers_availed\": [],\n    \"device_token\": null,\n    \"store_id\": 468,\n    \"referral_code\": \"JNDKSVUG\"\n}"
						},
						{
							"name": "VerifyOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=SjFrK3R2UG5GVnpLeWRZR1hiWjRWdDg5QitXaHhCeHM4VU9qL21SOWJ3OVRpb3dzL0tzalgwRE84NlJxay80eDMxeUZOc2VVYmpsSDhodkZONmZIOHU4Y1Jud2ZEaE1OeW1iN1JmU002ZE40MFZSSk0xYVFNTzVIMG1EbzlVSjJuZEVVZHZCL1NKYWhQSGxwWFN4V3pZS1hyUmFITlpVRUZoaGFHbXZ0ZmI2NEVHL1FFVVpTRjhNY2M5Rlc1WFEzemluY2k5OEtxQXVTbnJDMDB5UGpGdXlDTEg4QnNWUUhsZk9FOTg5ZUNQVDJFS2VYd2pKOElDdHdzUjZOOVdabCtBNWFMY0JwOEs4K29kK21lVmt0NHg0MXBFUHdMMS9QVW9SUUdoaWt6eldOcjdSZEx0YS90dFIrem5ZTDF3Vms0cW9pNVN2amFCR1ZsVnQyUkZLQktlNndGM2lxMi81T01wckN1UWQ2eU9wU1FhRkZ3K1FSRVI0eE9MSzVpYzhPZHJnT3NHQzVHM2VXTDBUZWxIMmptTFdzMUFqQXRaenhPVXlXVXpsRnloQlpyYXNmajZWM1drMmt1SmtjMTMwUER3S0dYSVRxUnVoT3JwQzJlbnZYblhLV2l1c05kU2FDRWJsb0RIUWlaU29wTkFOWjQwN2ViMXcyM1VFVWZjeFllaHRJLzVIN2RUQjZJMWNjNUJPOVZ2aTVCWWFPMWJuWmR2Qmw5N013MVp6eVF5VXFGdGpNVnJwTEVhbG9EbG1ya2NndFhJVS9naXZYdVk5KzBINkZudTZIT0JydFBPZkVMdEQyeVY3V2QwN0hEZFdOODBQdzZrdDZreU5HS21VVmpmV2pRYXpSVk5hRmhRRE5GR0lHaEpnWWpFbFZBL1F1ZjRzR3p2Ly96WEhuaG5pUkI4MU9IMFMvc3d3TU1yYXJrMk9qTGpDcWloNnl3Q1g3THJodFd6M2FHb0tMNC9ZSUtHSFZVZUs1UjJLMEpza1RQT2dQcmhpRVhzV1VwektOMmxCNkc4SnBBWVJvTlJRVkdJbURQUFZZNlFudVFiaitXLzFpVFlzU0U3YjB0STRBWVpYU1lqdGJ3TGIrZ0Uzdld2Zlo2ZjQ2bkswSU5tUy9qV1ZQZ3g0N3Z0Y204THdPYVVyV0dTSitJaXI2b0FPZjlIWGNYWlNOS2xReVg5ZnJvUUh0bExyUkRaZUtMb0paVVhmOFZabmptcXFrbjAzLytTL2Zxd1d0NjVzeHVtMUd6S1BLVnRPTmRJV1JpR21vaW1QN3RCVkVaS3gxTnNEMUY1ZG93ajhhTExYWS94M1BFK21mc2Q3ck1qbWpYVW1hVmVRN1VjTmJ6Z0lsT1NPb3V6c0JtRGxXQzRFSytsSDN6eUdXOTVDTlBlMXJ6U2tkY256dkx3Q2x3V01naXZzVUtCRlcrWWZ0K2NkNjNZNjRqSW1EUlZzN2dzVVdvc1h1MG4xbDU3UXJIV3Q2ZTRSV05GdFdSWk4yNkozdlVwTnkyR1ZySmtrOHhhWktmWTlQTDdVSFM0L25XWmZldWM5WlNZRkw5MklvckVlNGp0SUJVdWo4UkxoVmRZWCtsdnIrYURNVGRsUDRJSktlVHYwalN2QmE4bEpnZmd0T1E1K1diWWNGMGc9PS0tbXFWSGdrNVp5bTM3cjVXSWRKQVJmZz09--f6da2704e8f37523bc545b8626fa477654ff0041; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "b6855e8b-3f3c-498c-96bc-dff0e421a0a6"
								},
								{
									"key": "X-Runtime",
									"value": "0.036412"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						}
					]
				},
				{
					"name": "GoogleLogin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"let uid = pm.response.headers.get('uid');",
									"",
									"let access_token = pm.response.headers.get('access-token');",
									"let client = pm.response.headers.get('client');",
									"",
									"pm.collectionVariables.set(\"uid\", uid);",
									"pm.collectionVariables.set(\"client\", client);",
									"pm.collectionVariables.set(\"access_token\", access_token);",
									"",
									"",
									"",
									"console.log(\"uid : \", pm.collectionVariables.get(\"uid\"))",
									"console.log(\"access_token : \", pm.collectionVariables.get(\"access_token\"))",
									"console.log(\"client : \", pm.collectionVariables.get(\"client\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "supplier_id",
								"type": "text",
								"value": "272",
								"disabled": true
							},
							{
								"key": "uid",
								"type": "text",
								"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
								"disabled": true
							},
							{
								"key": "access-token",
								"type": "text",
								"value": "R9vgiznm-19EnNbAyb9F4Q",
								"disabled": true
							},
							{
								"key": "client",
								"type": "text",
								"value": "3JepNbFc3Yt-ljRYdlee1g",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"supplier_id\": 1,\n    \"token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjZhZGMxMDFjYzc0OThjMDljMDEwZGMzZDUxNzZmYTk3Yzk2MjdlY2IiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiI2MjM0ODM5NDI1OS1zNTVndWxjcHBlODFnaWU2ZjBnMGhocjltMmI5NnBlOC5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsImF1ZCI6IjYyMzQ4Mzk0MjU5LW8xa3BqZmZoM3BjcDU2N3Jnczdib2RnM3ZsdTg1Y3E0LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwic3ViIjoiMTExODcxMDU2NzQ0NjIzMzM5Njc3IiwiZW1haWwiOiJydXNoaTEyOTdAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsIm5hbWUiOiJSdXNoaSBCaGFyZ2F2IiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS8td0lxTlJTd2ViQjgvQUFBQUFBQUFBQUkvQUFBQUFBQUFBQUEvQU1adXVjbFlTLW53X3ZvT29SeTcwQm9wSE4yTlctekJIdy9zOTYtYy9waG90by5qcGciLCJnaXZlbl9uYW1lIjoiUnVzaGkiLCJmYW1pbHlfbmFtZSI6IkJoYXJnYXYiLCJsb2NhbGUiOiJlbiIsImlhdCI6MTYwODg5NTQxNiwiZXhwIjoxNjA4ODk5MDE2fQ.Bdr3vnnZrRSIgvVqaiQOAyCTMahUPe01mj4xM57jfrgBph-ZwmV7QDowAKIyhIP9eV0QdQYmtNC95MUdnVTPaIb9HxZYUipTQzpiErM7mPPOyGBfRYbvzkYzhPiEZWLR_TJEBpkdTIlG_QcD_cltJDuXUudSR_HFa_ZWWMI4Xh7CtYS9XIGkJAVcH9-1lk6WLoDKjOLeBvtynjvVfaj4fmsIKKrKecONnHiF3rz03DasLu2aZPOo7rQ08N31EvHKit4CQsP6_ugKBpKs4o3IVIodXrrPCntrrtFnWWTb93juyBsykkkbMOQwTrlgR-_3KKCTaiYtgiIm4nK0T9Yl9w\",\n    \"metadata\": {\n        \"user_id\": \"248136900069620\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/login/supplier/google",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								"supplier",
								"google"
							]
						}
					},
					"response": [
						{
							"name": "Invalid SupplierId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=VWRQallGTVlpSGtUK3lveEttSG5vL2tWWFk1NWFnK21xK3RYVXdhZzJqWXRCcndSZVJLYnZTeUlRenk3SDN4VllXTkt4R3NoT3pNdXhTMDJ1SzdFQTJFanByc3dHeWlXRVlIMXBDbnVEZjY1UGovUVY4QW92TFVCRllZdk1nV2o0Q1FIbEIzYmN5UkI0ekhPSXUvUExlTmRHc2xJUzFzaC9vd003LzYzUUNUazJteGhYVit6T1gyRER5RHBma2xjNGVweVVZcDNvM3VVZVhEZ3NzUEsrcXhhMWJWZXFVOXJOVlFxSnkyaHhMaEdaeSs3MysvMVY1WnJud1ZPS0pyQ1Jncm9hM25uYU9EQ1h4NjBKL0tVdWpEYnpmYS9wMDRLLzJlWHdDemptRkI4T1lrREZPdEtva2c5TlN3WEI3eW5hNm9iWExBUi8vRW9uTG5SUDRDWXhSdGpyemwxcGRKSllqSXlsSWJBVHg2L0tFOWtHMzdxbmRqTXFLNUNHSXdSNHdjM0ozZldQTjJML2FxU1VXYi9raDltOC92aFZuTjkzamtvb0VhTGQ5cVk0a2puYTJTYVpGTUtGK2o1TndnZDE0Y0hSamFQRFZBcDJNM2JKZWlwMFhjUFRZb2E5OWtKRWJIalo5TGNLcDlPVXp3RHd6ME5sdmg5MUdyZnN5MlVQaC9Ea2Z3OTQvd2YzZjJTMjJGRGpBcXhyZFRubWVTTnlodGJkOUszYWI0YzRqTGYrMXM5c29WSEYzY09Ub3BXTVJ2emFYYlJIc1VkQ2JOL1dMMlZYckdRM2M5d0hsMHBrNVU2ZkdtdEJmQXN1MHhFMnZRd1lqdzlxVFBpa2JhV0xXOWllbDBhV0pId052UVVRb0NLYWU5N3NodVI5RGdLUXpBRVpxUDJ3KzBzWXFLOHlVQlArQU51NHdhWUE5MTBlS2N6OWp4K24vVDgzTWdrQ3d0azYvSWtPV2J1MjFUTXQ5cTh3RDVTZ3gzR29yOHIwR2liTkt1eGl2ajkwTmEvMkxoYW42QkRuMnQybm5TTytTd3lzdlMrZktGNUEyTTkxSVY5V3lBT2hrNnorTmpLSFhpWVBFSHluaVNMR1Z6VEtRdU9QQnp1MEZXOThDUGlUYnRPT2J1dDVGcW4zYzI2ZXNCdHY2Zmtybzk3TitSVXVEOFRjUDlVbFJoOHM5Z2ViR2JoRGwrZU9FN0lBVGRRT3YzMXFNY3VTL3g2UzQ3aWp5RHY0SjNRM3pPMUc2Z0hMQ2svdGQwYzhRTEE4WkZIZU5wdWVBMWl2KzByWEErVGFNNnRsWThLcGNzUzVsZE9URHBLT2hBcUhDQ0RVQzZ3NytEc2d2UGtGT2w0VGg4dkpXN0xHNHVPaWVMcFQ4V0laVTZUbGFDbWNDWXM3djMyZE5ZRTFkZ3dySWZDNCtjWndzalF3aEFxcGVDbVEzWlk3U3lEQTNweE9iaDZyMWlSS2NxMzVKQThVTkE2Qno4Z2wvVUxGbGpKQlFHTUgveDhTQWxUSTNEMWM3WWdod2tvWDF6Z3oreTc4OGFyWjdJSGptbjNsU1R5UXNTRldGcVpaUkVzS1pzOFJ3dkxVSFovbWZUN3p6VGVEWEJQaVkzYmdaZE82SjQyQ2NQS0l5OHlWRE95b2c9PS0ta00wVDhMc2dmY0NBSU9PcmxGd1poQT09--ec2a30ffb0a7f93990ae4bfdf8c266e16a6b0408; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "f5380e7f-7cdc-4f82-aad0-6ca6d3c2a22d"
								},
								{
									"key": "X-Runtime",
									"value": "0.005480"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"invalid_supplier_chain_id\",\n    \"message\": \"Invalid Supplier Id\"\n}"
						},
						{
							"name": "InvalidOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"8817\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 409\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:56:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=MXBkUitZL09GK1RLcGh4enM3N0hDMTRiZWltaUt5R09oRGRqLzVKUHVDWWQzMm5ZSWVkSmVUQmU4ZUJSSk9NQWlJSlV2enVKMDY0QWVYb1Vqbmw3Znh1eWk1Njh4OGRJcW15d1FoRTU2aHFybDkyT29nQmRVNUJabEdLRXVWUlNlYlRZK3FEZXdTejZQbE5WQmlSQThyaXo5UTBjQjhMU3VUb3BLSmJVcHlaRVYwOWNwK1FnaXcrdnlOMmgvcTF5YXZlOFZEdXhoRTVhdytIUXIyd3pMZ3Yvd1BoVVFlSkFNN3EvMDRVdzM3Y0FscGxMZ0N5RS9oVHZjN1FVREgrSE5jVk82SVFXdVlXYkxvU3V3SVJSMCtPY3A2WGRQbEVXUUo1U2xPYzFReWdQSm9GeXhOenY3NU8zV01kNVFQeU1JU1JQQmx2Z0lCQTJyaUdxRXd1WUhWMm1ra3BVZEVKRlNDK3dqTlJ3ZGNjRUZCSFlFdElCellPOE9kSDFiYVI2Tk1oWlU5enN4SmhrcE5pUWVCcjdNb0gxY3dleVlYWXFuRFdWSk1pMFIzcGlFZTAwcyt4Ui9wZy9zbmRBamJVNUV3dTR1MVB5YUR1SjhhakxuejRzMkVuSFRpV2p5bVV5TmVpM1FqY3dHWWU0cFVIYXc1QUdIc2RhT1lMWmFVc3diMlN4cWNOWUZPdHJoK1dHMDZWMGU1SmpNR1laMkVObEZlMjBEVVBiRVlka01LWmFjc2I1Y2w5VTRHTTFpSStTSzRNTy82Rkl2bzE1NHJZSkhlbGxWWjhUb1VOV2V6YmdvcWRzbGVENWhQejJ5MFdTY0x5WTU4V3JCQ2tCaGR4WXZYQ1NKcFloMEs0U1gzWHpUQWcyNnh6UG1sRTRjZGZ6dmZHclExKzJKcVQvUnVHZjdrSlN5eG9kSXp2WFFsUTFpYXovL1UzZ0IvOGFZR2dGYm1tSUxoV3pkNk8rSExRMWFXN3NVMTM3K2V0bll4VXJ3S2hjb2lCN2VkL0Q0SGxQeVhFUk1iczNGNVdydDF1Uy9ucTVFV04rSm40NlhrZmlxUmxMdUtEUjlZcmh4L0NLNU1oZ2NudWtJMTBjUmQyRXBLZzJ4NXVHZEFJazFTdVpBU3dSYzlIN2x3czhKSUYraGpLVWVwcXFwNTZSQy9nNXhuaTF5SGR3YkJ4VDlEUlZoOGExMXBJeC8xNC9sZGtUaFFZTmxkd3V0TUpaczVKdkM2RjkvV3I4NVo1WjdMM2JNVHNrNUpUWVUyOXNyVi9Xc1NDa2twVUR2MCtvN28zM0N4ZVNqVXR3WHRnSFNxQTlsOEZDQjJSTTdIWCtUd0dWRm9vSTV1SWFYb2pCQ0J6RXk4R2ZLaUNIWjVoNWc5aFMrL05OWVArNW5zNmhWQVBvc2RpKzIrcFF1dUtQSFF1R3Y2RHFoN01HNzRKMEpMb1VjMVlhREszdTVmYlBLL24xTlBoeFpobjFBQ1NCZk8wQWsxUlh2ckVNT0ljMmI5ME0zZnVBdGZ5cGdpUUlCYzM2eW01SW9qVGJFcXdBQ2Nnc3llcnc5ZmV5T0lsNTlzbklJTjBVWWE5RlZPUUxNdXQwWUdWWE8wQmVTNG11OGVScW9CRVNlcEVYTlVPT2djSDU5akV0T3c9PS0tSWxJcnJBR1hZaWh6Wkx3NW1pclhEUT09--03cfa8ce49c8c11481ac76963088442e9f92c5bd; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "3040cbde-16ef-4be9-8ce5-181b9cac4a7c"
								},
								{
									"key": "X-Runtime",
									"value": "0.125114"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Otp\",\n    \"type\": \"invalid\"\n}"
						},
						{
							"name": "VerifyOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=SjFrK3R2UG5GVnpLeWRZR1hiWjRWdDg5QitXaHhCeHM4VU9qL21SOWJ3OVRpb3dzL0tzalgwRE84NlJxay80eDMxeUZOc2VVYmpsSDhodkZONmZIOHU4Y1Jud2ZEaE1OeW1iN1JmU002ZE40MFZSSk0xYVFNTzVIMG1EbzlVSjJuZEVVZHZCL1NKYWhQSGxwWFN4V3pZS1hyUmFITlpVRUZoaGFHbXZ0ZmI2NEVHL1FFVVpTRjhNY2M5Rlc1WFEzemluY2k5OEtxQXVTbnJDMDB5UGpGdXlDTEg4QnNWUUhsZk9FOTg5ZUNQVDJFS2VYd2pKOElDdHdzUjZOOVdabCtBNWFMY0JwOEs4K29kK21lVmt0NHg0MXBFUHdMMS9QVW9SUUdoaWt6eldOcjdSZEx0YS90dFIrem5ZTDF3Vms0cW9pNVN2amFCR1ZsVnQyUkZLQktlNndGM2lxMi81T01wckN1UWQ2eU9wU1FhRkZ3K1FSRVI0eE9MSzVpYzhPZHJnT3NHQzVHM2VXTDBUZWxIMmptTFdzMUFqQXRaenhPVXlXVXpsRnloQlpyYXNmajZWM1drMmt1SmtjMTMwUER3S0dYSVRxUnVoT3JwQzJlbnZYblhLV2l1c05kU2FDRWJsb0RIUWlaU29wTkFOWjQwN2ViMXcyM1VFVWZjeFllaHRJLzVIN2RUQjZJMWNjNUJPOVZ2aTVCWWFPMWJuWmR2Qmw5N013MVp6eVF5VXFGdGpNVnJwTEVhbG9EbG1ya2NndFhJVS9naXZYdVk5KzBINkZudTZIT0JydFBPZkVMdEQyeVY3V2QwN0hEZFdOODBQdzZrdDZreU5HS21VVmpmV2pRYXpSVk5hRmhRRE5GR0lHaEpnWWpFbFZBL1F1ZjRzR3p2Ly96WEhuaG5pUkI4MU9IMFMvc3d3TU1yYXJrMk9qTGpDcWloNnl3Q1g3THJodFd6M2FHb0tMNC9ZSUtHSFZVZUs1UjJLMEpza1RQT2dQcmhpRVhzV1VwektOMmxCNkc4SnBBWVJvTlJRVkdJbURQUFZZNlFudVFiaitXLzFpVFlzU0U3YjB0STRBWVpYU1lqdGJ3TGIrZ0Uzdld2Zlo2ZjQ2bkswSU5tUy9qV1ZQZ3g0N3Z0Y204THdPYVVyV0dTSitJaXI2b0FPZjlIWGNYWlNOS2xReVg5ZnJvUUh0bExyUkRaZUtMb0paVVhmOFZabmptcXFrbjAzLytTL2Zxd1d0NjVzeHVtMUd6S1BLVnRPTmRJV1JpR21vaW1QN3RCVkVaS3gxTnNEMUY1ZG93ajhhTExYWS94M1BFK21mc2Q3ck1qbWpYVW1hVmVRN1VjTmJ6Z0lsT1NPb3V6c0JtRGxXQzRFSytsSDN6eUdXOTVDTlBlMXJ6U2tkY256dkx3Q2x3V01naXZzVUtCRlcrWWZ0K2NkNjNZNjRqSW1EUlZzN2dzVVdvc1h1MG4xbDU3UXJIV3Q2ZTRSV05GdFdSWk4yNkozdlVwTnkyR1ZySmtrOHhhWktmWTlQTDdVSFM0L25XWmZldWM5WlNZRkw5MklvckVlNGp0SUJVdWo4UkxoVmRZWCtsdnIrYURNVGRsUDRJSktlVHYwalN2QmE4bEpnZmd0T1E1K1diWWNGMGc9PS0tbXFWSGdrNVp5bTM3cjVXSWRKQVJmZz09--f6da2704e8f37523bc545b8626fa477654ff0041; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "b6855e8b-3f3c-498c-96bc-dff0e421a0a6"
								},
								{
									"key": "X-Runtime",
									"value": "0.036412"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:59:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Access-Token",
									"value": "GrpheNgkFUH8wwixjwOMnw"
								},
								{
									"key": "Token-Type",
									"value": "Bearer"
								},
								{
									"key": "Client",
									"value": "vZqbia0mRQ-T6j1_tiWu1w"
								},
								{
									"key": "Expiry",
									"value": "33010714774"
								},
								{
									"key": "Uid",
									"value": "9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Etag",
									"value": "W/\"8155e657bf4f1866f677db487a367565\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=cVo1TWZTaFFzejFPS0dyeXlyZHp0eEVwb0ZJaGxxY1FWd2RFUU9RRUI1ditVcXY5b2dra1NQUklHa3FZLzQ3dGRjVmxwdDNqNmZPaE5SbjR3d21zT21kMUdLMzZGdDJ4cVlySmpFR0JxTkliVXlCcEVTbzBEbVFUUWZmdVpzMG1SL2pobmhuNlFhWjl1M2dWMFB4cVNpTkwwYmZmSWRuOXNualR4TkxWbytkTzFPaGtudEZib3BpZlJOTTNZZmExWkFJS1V6SWg2anBtdlUzbGFuTDd3T2hjU2gzcmYzMDF4Q0ZQVGMwR2EwTVBWb3NGd1BENmdTSHR6UzRhN2EyZkVqelJFQm4xTUhobVFCd2dReHg3cEZ6V1JUK2RrVjlLVHJUdFJWVjlBNmpiZ25yaWFPVm1QbDZaQy90dU5oMVhlRDY4MGRlMWQyaHJVNXczeTRsZlpCa3Nna3JvNHpxYjZBOE5idTIzZE5yNmRHQ3B6VmFaQWJNU2VnSk1mcFp6MHUyaERyd2ZyYmpPV0UzWXlrZlJPb2R5UTVoc0dVWE1DdUhQWmZ2UStkVlRoSHZrbllUNzcrVnUxS25rZUFQWUpYMkZVek9qV1pqcEE4WExTblBBMzlwc3M1dXQrSytobEpOcUpuZFFHNUE4MnFqVWxMcmpCajlTNmVUbEFVYXVFYlFqejl4WjcweXZtcm1OYWhXUndoTnEzZjFnMHZXclhubWl6dFNlbVk4a3F0SWZScEtvZEpxSktHS05MS1JiN2twclY3VG1WVEIyWlFoaWNuWnRtcnltajFFamN6cVo2RWFJZlhFZ2YzTElFUzFqUXg4MXFYa0lQOEQ4WUEzMWk4R1l5NGxmWDYzclAyNkIvUWJwY296SEVDcXFENzM5ZDlJZmxaOGlUZG9md2NObVRrcWFYU090UzRURk1LWHd0cWRtVm5BVEg4Qzd1OU5GU1dYNmdIYURKMk9OMkQxbHJWbFZRbXdGVHA2Tlg2cWJiZTVra1RsSkZIWVB5cTNTTUFYWTJCK0oxZTB5SzhuUlI1S1RTczhRaTBvSG0vUWxncTJveGJkempsNmVhVS9QT0paR0Q5WTB0UjlwR2IzNC9sQVNFSUZEU0ZqUXR6enZ1ZEU2emN0czMxL1I1dVhCbGhFSEZ3aFEyRTJpL3RpaWhQYm1MQnErN3ByNWJSWnBvS1JHeGFISnBDUGZGcUZrdTc1Qnh4SDFMOWhBYTdpV0s1VHNrZ01JbUhyNEwyNUdBY1lXN0JnM3pkRG1JWmZOS3ZoaWQ1R1MwYm4rR1BtcW4reEhMaUpZZjVZbkpHREhYS2haU1JEVGFQcnhUTExqeGVNREhqdDRvbmgwZEtvdDl3aHlUbENqSVBJYkNTRHhVR2dmRUFrd0paZi9rOE5FdEJPQnFNRnNWSjV2ZXNnYjdVaUxFMDJ0V3RMK0pHQzVTS2tNOWJ3bGhUSmxlNm1pYm9nWmdONkZQTUoyVWxsVkhXZi93V0Z6b0dOTGxrNWlXblhuQitIRXUyL1ZoNm1JU2dtcE8wdVBWN2dQWUtoYWRWRktCb0J1STZqSDFadjBmT0lEN3loSlc5bXdGenRwd1I5dFpLOG1EbU5BZ2lRR3pSMndQYTJSS29iL3E1RFZ1UlRyZHc9PS0tQVVkSmU2QlFPTVNBMmJscFhFbjdTUT09--12ae8dfb1da36b1c2cce3313e3cf938e55b8e3b7; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "af35ab65-f5ca-4d92-a19b-be8f786cc883"
								},
								{
									"key": "X-Runtime",
									"value": "0.289858"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 28411,\n    \"email\": \"b88a4014-5f54-44dc-9631-d96fe6c0e54a@migroceruser.in\",\n    \"persistence_token\": null,\n    \"perishable_token\": null,\n    \"last_request_at\": null,\n    \"login\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"ship_address_id\": null,\n    \"bill_address_id\": null,\n    \"authentication_token\": null,\n    \"created_at\": \"2019-06-21T16:29:34.146+05:30\",\n    \"updated_at\": \"2019-06-21T16:29:34.297+05:30\",\n    \"spree_api_key\": null,\n    \"deleted_at\": null,\n    \"supplier_id\": null,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"area\": null,\n    \"last_visited_store_id\": null,\n    \"city\": null,\n    \"state\": null,\n    \"country\": null,\n    \"provider\": \"email\",\n    \"uid\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"phone\": \"9014259811\",\n    \"sub_area\": null,\n    \"is_valid_email\": false,\n    \"is_guest\": false,\n    \"referral_credits\": null,\n    \"referrer_benefit_enabled\": true,\n    \"offers_availed\": [],\n    \"device_token\": null,\n    \"store_id\": 468,\n    \"referral_code\": \"JNDKSVUG\"\n}"
						},
						{
							"name": "OTP Expired",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=OThmOHhjSml6RUNWNE1VRUhpaTIyYzdTaHVyM2lMbXV2N2dEWDFOVThreVA1bE4xdTJLbTd3VEt1WHFLZWRqWjZ1NXFtMWh0RmZtQXl4N1NPZFBsTFA5a1M1eTJscmRVTDFIRUsvak10bHdkMXd4VGdRZ3lvS2VlNDFERWFzUEZMeGVHazRVL2tpNWtZZnZVUGx4RisrVloyVk5TVVYxMWNqRmJtUG93cXNGOTlESXlBMkttRlRLTkdEMWJ4Q3FpS3BqRUFQb1llbUMreVpLRlRkaXJ1cUczS1cvK0I0K1grZ2gxaE1PMU96NHJCd01hYldvUHZwR1VNR3lka2FLQ2Nnb1ZYaUV4R2xUOWxhMnNpTGllVGZIN2ZiVHhINDZvb2N4OUxaampaMEluL1hQY2NnYk4yT21ackRwejY5Q3U4VkQ4c1ZkeDRPQzBveCtndGV1aU82bTcxMEg5bE9LMlFHR005NnFDMzJKNmNzNDB2Wi96RkFWMy9RUTluWGxGRkVYaDQ5bVVHR0JJSzRWK2V1TkVwNFNpVkcwbTBaZW9jcDgzNGU4dHc5QzkzbmlpYkx0WmdhNmVuZmZ0cXY0ZHpHMjl4YXcwdk1jckd5QmJTSWpjb3k1MlF6V2tvcFZhbFNHWDFzTllFNjJiL29vZGZFL1FweS9MSjNDQy9xNGV4OCtudkkwbnAxbDdBZTA2YVVSNDAxTnhsVnBKQW9LWXhZV0I3YWNQQVRJdDdhZ2t0RnRIVmsxaE1WczU4NytDWGoxb0tFNityS3NBWURYL29vRUJxNEhiUk8rWEdvNGNBYUczd1dGNnAxU3VyZkUydjl6RWM0VkdWVTZrdUJ1YWMxYVY4ajBaRUs4cWpaZHRMc1ZWcVVzVk1uRWFHc0NxbXpTcHo0Y1R6c1pWSzhYay9lQ1RlRndxSllRRURnSTRoTUg2NWNzWkZ1MER2MmlIM0lYbnZrV2Q3NUp5eFNNUUFkdHJwb2ZpcHppSGFNYmRZQVJxZmZLTm0rcWdiVlh2V2xXSlJvS1pWbDNMOVhkL0RLU3ZKTk9OUXhINE9jeDBpSUdvMjdsMTJlcytUL2VGeFd2OHhmbW8yVjNSSjZBWUd0VU9iTituV3Zld25Ha2JDNWFJS25vNS9QVUh5M1lJd1RzNEhCSXBnVVNUaG5HS1J0YTFBckdNdEdGb1JUTENRWmI0dURXbHpHVXpITFFqNWNGdEdvcndiQjVnd1pKeEZsWU9oSWM5cURoMVpaUXNOcjZkaEJRelp1S0ZTelI5ZWxuSkQ4c2tBZUpFdnRBUWZ2dG1VaThic3ZpSkVXdkV5ZWYrWTBpYSthS0NLWXhIL1ZQOG5hRW1nRFpsVE9sekhxbE5BNTBXOTlSMWtJNGQwRmFUa2t6eGRaWjdGMkN3OWUybC8xc2dnQnJ1NGZmY0NpQkJGejFiS0lCaDNwTXl2Yk9MN1J6Qm0yWHYwNFNWRjFYOTUyK3VDZkhSWEcvSWJtM2FFeE9NSS9ucGFKSGxPOEErR2V3eGlFUHJtWnd1dERiMHlDSURLOTJNREJsWVpHOEczQVhXQml6dStnQmRVV1NGaGlpTHViTGwvUmJSTTA0aXdMa3VNYU02Q2VWbmxXVkxUMjhrdm5nSFBoaUQ2cEZhd1E9PS0tRFNLSHhBV0twUDE2S3Z5L0I2RjZpZz09--6353f430dd4c42ae5423008d9411a8b21b61392e; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "71371364-554f-4a0c-8ea3-8658679a615c"
								},
								{
									"key": "X-Runtime",
									"value": "0.210981"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						}
					]
				},
				{
					"name": "Apple Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"let uid = pm.response.headers.get('uid');",
									"",
									"let access_token = pm.response.headers.get('access-token');",
									"let client = pm.response.headers.get('client');",
									"",
									"pm.collectionVariables.set(\"uid\", uid);",
									"pm.collectionVariables.set(\"client\", client);",
									"pm.collectionVariables.set(\"access_token\", access_token);",
									"",
									"",
									"",
									"console.log(\"uid : \", pm.collectionVariables.get(\"uid\"))",
									"console.log(\"access_token : \", pm.collectionVariables.get(\"access_token\"))",
									"console.log(\"client : \", pm.collectionVariables.get(\"client\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "supplier_id",
								"type": "text",
								"value": "272",
								"disabled": true
							},
							{
								"key": "uid",
								"type": "text",
								"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
								"disabled": true
							},
							{
								"key": "access-token",
								"type": "text",
								"value": "R9vgiznm-19EnNbAyb9F4Q",
								"disabled": true
							},
							{
								"key": "client",
								"type": "text",
								"value": "3JepNbFc3Yt-ljRYdlee1g",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"supplier_id\": 1,\n    \"token\": \"eyJraWQiOiJlWGF1bm1MIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJodHRwczovL2FwcGxlaWQuYXBwbGUuY29tIiwiYXVkIjoiY29tLm1pZ3JvY2VyLmJ1c2luZXNzQXBwIiwiZXhwIjoxNjA5MzE5NDkxLCJpYXQiOjE2MDkyMzMwOTEsInN1YiI6IjAwMDk5NS45ZjU1NDkzZTkxYzU0ZjQ4OTczOWIzODY5MTQ3NzhhZC4wNzA0Iiwibm9uY2UiOiIyNjkxNCIsImNfaGFzaCI6InpidDAwVzRpRnBONVZSdkVIdExEb0EiLCJlbWFpbCI6ImRldmVsb3BlckBtaWdyb2Nlci5jb20iLCJlbWFpbF92ZXJpZmllZCI6InRydWUiLCJhdXRoX3RpbWUiOjE2MDkyMzMwOTEsIm5vbmNlX3N1cHBvcnRlZCI6dHJ1ZX0.XoUASI_Gz_1pAdYgZOtw3G2Zbp162vfIwSAu34X51FBi5X5An-r7UeZPkqr-P5whPKFh45t79wutHUJi1G7aKEjCtWNPuewigjtjjPLFEqYE4JCzn-Vy-x_lM_lzxuXk9V5StpFPfAXTvHuOtBE5LEyHRQobCSqu3kedeg54OVZSUYZptCwBfFqZI4DbV7gEfm8-5EHwrfJRIspLEfDM8PBx8BG7qwgRG15Xu4rr7dXw9Qsh6j10mVx_5Iqx5iR20wbhMaDlvL55qWcrJgA1mxGSdTUxeIfhpS2pQ2OZNTQCNWxDB8laUiNLeOddoeKmyn4K45r1NbrX2ugw24Nueg\",\n    \"code\": \"c4dc82d177f0c498ba013e20f1e392587.0.rzzv.IH7o2YjikyfCTJtgSW4L5A\",\n    \"metadata\": {\n        \"user_id\": \"248136900069620\"\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/login/supplier/apple",
							"host": [
								"{{url}}"
							],
							"path": [
								"login",
								"supplier",
								"apple"
							]
						}
					},
					"response": [
						{
							"name": "OTP Expired",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=OThmOHhjSml6RUNWNE1VRUhpaTIyYzdTaHVyM2lMbXV2N2dEWDFOVThreVA1bE4xdTJLbTd3VEt1WHFLZWRqWjZ1NXFtMWh0RmZtQXl4N1NPZFBsTFA5a1M1eTJscmRVTDFIRUsvak10bHdkMXd4VGdRZ3lvS2VlNDFERWFzUEZMeGVHazRVL2tpNWtZZnZVUGx4RisrVloyVk5TVVYxMWNqRmJtUG93cXNGOTlESXlBMkttRlRLTkdEMWJ4Q3FpS3BqRUFQb1llbUMreVpLRlRkaXJ1cUczS1cvK0I0K1grZ2gxaE1PMU96NHJCd01hYldvUHZwR1VNR3lka2FLQ2Nnb1ZYaUV4R2xUOWxhMnNpTGllVGZIN2ZiVHhINDZvb2N4OUxaampaMEluL1hQY2NnYk4yT21ackRwejY5Q3U4VkQ4c1ZkeDRPQzBveCtndGV1aU82bTcxMEg5bE9LMlFHR005NnFDMzJKNmNzNDB2Wi96RkFWMy9RUTluWGxGRkVYaDQ5bVVHR0JJSzRWK2V1TkVwNFNpVkcwbTBaZW9jcDgzNGU4dHc5QzkzbmlpYkx0WmdhNmVuZmZ0cXY0ZHpHMjl4YXcwdk1jckd5QmJTSWpjb3k1MlF6V2tvcFZhbFNHWDFzTllFNjJiL29vZGZFL1FweS9MSjNDQy9xNGV4OCtudkkwbnAxbDdBZTA2YVVSNDAxTnhsVnBKQW9LWXhZV0I3YWNQQVRJdDdhZ2t0RnRIVmsxaE1WczU4NytDWGoxb0tFNityS3NBWURYL29vRUJxNEhiUk8rWEdvNGNBYUczd1dGNnAxU3VyZkUydjl6RWM0VkdWVTZrdUJ1YWMxYVY4ajBaRUs4cWpaZHRMc1ZWcVVzVk1uRWFHc0NxbXpTcHo0Y1R6c1pWSzhYay9lQ1RlRndxSllRRURnSTRoTUg2NWNzWkZ1MER2MmlIM0lYbnZrV2Q3NUp5eFNNUUFkdHJwb2ZpcHppSGFNYmRZQVJxZmZLTm0rcWdiVlh2V2xXSlJvS1pWbDNMOVhkL0RLU3ZKTk9OUXhINE9jeDBpSUdvMjdsMTJlcytUL2VGeFd2OHhmbW8yVjNSSjZBWUd0VU9iTituV3Zld25Ha2JDNWFJS25vNS9QVUh5M1lJd1RzNEhCSXBnVVNUaG5HS1J0YTFBckdNdEdGb1JUTENRWmI0dURXbHpHVXpITFFqNWNGdEdvcndiQjVnd1pKeEZsWU9oSWM5cURoMVpaUXNOcjZkaEJRelp1S0ZTelI5ZWxuSkQ4c2tBZUpFdnRBUWZ2dG1VaThic3ZpSkVXdkV5ZWYrWTBpYSthS0NLWXhIL1ZQOG5hRW1nRFpsVE9sekhxbE5BNTBXOTlSMWtJNGQwRmFUa2t6eGRaWjdGMkN3OWUybC8xc2dnQnJ1NGZmY0NpQkJGejFiS0lCaDNwTXl2Yk9MN1J6Qm0yWHYwNFNWRjFYOTUyK3VDZkhSWEcvSWJtM2FFeE9NSS9ucGFKSGxPOEErR2V3eGlFUHJtWnd1dERiMHlDSURLOTJNREJsWVpHOEczQVhXQml6dStnQmRVV1NGaGlpTHViTGwvUmJSTTA0aXdMa3VNYU02Q2VWbmxXVkxUMjhrdm5nSFBoaUQ2cEZhd1E9PS0tRFNLSHhBV0twUDE2S3Z5L0I2RjZpZz09--6353f430dd4c42ae5423008d9411a8b21b61392e; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "71371364-554f-4a0c-8ea3-8658679a615c"
								},
								{
									"key": "X-Runtime",
									"value": "0.210981"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "InvalidOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"8817\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 409\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:56:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=MXBkUitZL09GK1RLcGh4enM3N0hDMTRiZWltaUt5R09oRGRqLzVKUHVDWWQzMm5ZSWVkSmVUQmU4ZUJSSk9NQWlJSlV2enVKMDY0QWVYb1Vqbmw3Znh1eWk1Njh4OGRJcW15d1FoRTU2aHFybDkyT29nQmRVNUJabEdLRXVWUlNlYlRZK3FEZXdTejZQbE5WQmlSQThyaXo5UTBjQjhMU3VUb3BLSmJVcHlaRVYwOWNwK1FnaXcrdnlOMmgvcTF5YXZlOFZEdXhoRTVhdytIUXIyd3pMZ3Yvd1BoVVFlSkFNN3EvMDRVdzM3Y0FscGxMZ0N5RS9oVHZjN1FVREgrSE5jVk82SVFXdVlXYkxvU3V3SVJSMCtPY3A2WGRQbEVXUUo1U2xPYzFReWdQSm9GeXhOenY3NU8zV01kNVFQeU1JU1JQQmx2Z0lCQTJyaUdxRXd1WUhWMm1ra3BVZEVKRlNDK3dqTlJ3ZGNjRUZCSFlFdElCellPOE9kSDFiYVI2Tk1oWlU5enN4SmhrcE5pUWVCcjdNb0gxY3dleVlYWXFuRFdWSk1pMFIzcGlFZTAwcyt4Ui9wZy9zbmRBamJVNUV3dTR1MVB5YUR1SjhhakxuejRzMkVuSFRpV2p5bVV5TmVpM1FqY3dHWWU0cFVIYXc1QUdIc2RhT1lMWmFVc3diMlN4cWNOWUZPdHJoK1dHMDZWMGU1SmpNR1laMkVObEZlMjBEVVBiRVlka01LWmFjc2I1Y2w5VTRHTTFpSStTSzRNTy82Rkl2bzE1NHJZSkhlbGxWWjhUb1VOV2V6YmdvcWRzbGVENWhQejJ5MFdTY0x5WTU4V3JCQ2tCaGR4WXZYQ1NKcFloMEs0U1gzWHpUQWcyNnh6UG1sRTRjZGZ6dmZHclExKzJKcVQvUnVHZjdrSlN5eG9kSXp2WFFsUTFpYXovL1UzZ0IvOGFZR2dGYm1tSUxoV3pkNk8rSExRMWFXN3NVMTM3K2V0bll4VXJ3S2hjb2lCN2VkL0Q0SGxQeVhFUk1iczNGNVdydDF1Uy9ucTVFV04rSm40NlhrZmlxUmxMdUtEUjlZcmh4L0NLNU1oZ2NudWtJMTBjUmQyRXBLZzJ4NXVHZEFJazFTdVpBU3dSYzlIN2x3czhKSUYraGpLVWVwcXFwNTZSQy9nNXhuaTF5SGR3YkJ4VDlEUlZoOGExMXBJeC8xNC9sZGtUaFFZTmxkd3V0TUpaczVKdkM2RjkvV3I4NVo1WjdMM2JNVHNrNUpUWVUyOXNyVi9Xc1NDa2twVUR2MCtvN28zM0N4ZVNqVXR3WHRnSFNxQTlsOEZDQjJSTTdIWCtUd0dWRm9vSTV1SWFYb2pCQ0J6RXk4R2ZLaUNIWjVoNWc5aFMrL05OWVArNW5zNmhWQVBvc2RpKzIrcFF1dUtQSFF1R3Y2RHFoN01HNzRKMEpMb1VjMVlhREszdTVmYlBLL24xTlBoeFpobjFBQ1NCZk8wQWsxUlh2ckVNT0ljMmI5ME0zZnVBdGZ5cGdpUUlCYzM2eW01SW9qVGJFcXdBQ2Nnc3llcnc5ZmV5T0lsNTlzbklJTjBVWWE5RlZPUUxNdXQwWUdWWE8wQmVTNG11OGVScW9CRVNlcEVYTlVPT2djSDU5akV0T3c9PS0tSWxJcnJBR1hZaWh6Wkx3NW1pclhEUT09--03cfa8ce49c8c11481ac76963088442e9f92c5bd; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "3040cbde-16ef-4be9-8ce5-181b9cac4a7c"
								},
								{
									"key": "X-Runtime",
									"value": "0.125114"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Otp\",\n    \"type\": \"invalid\"\n}"
						},
						{
							"name": "VerifyOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=SjFrK3R2UG5GVnpLeWRZR1hiWjRWdDg5QitXaHhCeHM4VU9qL21SOWJ3OVRpb3dzL0tzalgwRE84NlJxay80eDMxeUZOc2VVYmpsSDhodkZONmZIOHU4Y1Jud2ZEaE1OeW1iN1JmU002ZE40MFZSSk0xYVFNTzVIMG1EbzlVSjJuZEVVZHZCL1NKYWhQSGxwWFN4V3pZS1hyUmFITlpVRUZoaGFHbXZ0ZmI2NEVHL1FFVVpTRjhNY2M5Rlc1WFEzemluY2k5OEtxQXVTbnJDMDB5UGpGdXlDTEg4QnNWUUhsZk9FOTg5ZUNQVDJFS2VYd2pKOElDdHdzUjZOOVdabCtBNWFMY0JwOEs4K29kK21lVmt0NHg0MXBFUHdMMS9QVW9SUUdoaWt6eldOcjdSZEx0YS90dFIrem5ZTDF3Vms0cW9pNVN2amFCR1ZsVnQyUkZLQktlNndGM2lxMi81T01wckN1UWQ2eU9wU1FhRkZ3K1FSRVI0eE9MSzVpYzhPZHJnT3NHQzVHM2VXTDBUZWxIMmptTFdzMUFqQXRaenhPVXlXVXpsRnloQlpyYXNmajZWM1drMmt1SmtjMTMwUER3S0dYSVRxUnVoT3JwQzJlbnZYblhLV2l1c05kU2FDRWJsb0RIUWlaU29wTkFOWjQwN2ViMXcyM1VFVWZjeFllaHRJLzVIN2RUQjZJMWNjNUJPOVZ2aTVCWWFPMWJuWmR2Qmw5N013MVp6eVF5VXFGdGpNVnJwTEVhbG9EbG1ya2NndFhJVS9naXZYdVk5KzBINkZudTZIT0JydFBPZkVMdEQyeVY3V2QwN0hEZFdOODBQdzZrdDZreU5HS21VVmpmV2pRYXpSVk5hRmhRRE5GR0lHaEpnWWpFbFZBL1F1ZjRzR3p2Ly96WEhuaG5pUkI4MU9IMFMvc3d3TU1yYXJrMk9qTGpDcWloNnl3Q1g3THJodFd6M2FHb0tMNC9ZSUtHSFZVZUs1UjJLMEpza1RQT2dQcmhpRVhzV1VwektOMmxCNkc4SnBBWVJvTlJRVkdJbURQUFZZNlFudVFiaitXLzFpVFlzU0U3YjB0STRBWVpYU1lqdGJ3TGIrZ0Uzdld2Zlo2ZjQ2bkswSU5tUy9qV1ZQZ3g0N3Z0Y204THdPYVVyV0dTSitJaXI2b0FPZjlIWGNYWlNOS2xReVg5ZnJvUUh0bExyUkRaZUtMb0paVVhmOFZabmptcXFrbjAzLytTL2Zxd1d0NjVzeHVtMUd6S1BLVnRPTmRJV1JpR21vaW1QN3RCVkVaS3gxTnNEMUY1ZG93ajhhTExYWS94M1BFK21mc2Q3ck1qbWpYVW1hVmVRN1VjTmJ6Z0lsT1NPb3V6c0JtRGxXQzRFSytsSDN6eUdXOTVDTlBlMXJ6U2tkY256dkx3Q2x3V01naXZzVUtCRlcrWWZ0K2NkNjNZNjRqSW1EUlZzN2dzVVdvc1h1MG4xbDU3UXJIV3Q2ZTRSV05GdFdSWk4yNkozdlVwTnkyR1ZySmtrOHhhWktmWTlQTDdVSFM0L25XWmZldWM5WlNZRkw5MklvckVlNGp0SUJVdWo4UkxoVmRZWCtsdnIrYURNVGRsUDRJSktlVHYwalN2QmE4bEpnZmd0T1E1K1diWWNGMGc9PS0tbXFWSGdrNVp5bTM3cjVXSWRKQVJmZz09--f6da2704e8f37523bc545b8626fa477654ff0041; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "b6855e8b-3f3c-498c-96bc-dff0e421a0a6"
								},
								{
									"key": "X-Runtime",
									"value": "0.036412"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:59:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Access-Token",
									"value": "GrpheNgkFUH8wwixjwOMnw"
								},
								{
									"key": "Token-Type",
									"value": "Bearer"
								},
								{
									"key": "Client",
									"value": "vZqbia0mRQ-T6j1_tiWu1w"
								},
								{
									"key": "Expiry",
									"value": "33010714774"
								},
								{
									"key": "Uid",
									"value": "9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Etag",
									"value": "W/\"8155e657bf4f1866f677db487a367565\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=cVo1TWZTaFFzejFPS0dyeXlyZHp0eEVwb0ZJaGxxY1FWd2RFUU9RRUI1ditVcXY5b2dra1NQUklHa3FZLzQ3dGRjVmxwdDNqNmZPaE5SbjR3d21zT21kMUdLMzZGdDJ4cVlySmpFR0JxTkliVXlCcEVTbzBEbVFUUWZmdVpzMG1SL2pobmhuNlFhWjl1M2dWMFB4cVNpTkwwYmZmSWRuOXNualR4TkxWbytkTzFPaGtudEZib3BpZlJOTTNZZmExWkFJS1V6SWg2anBtdlUzbGFuTDd3T2hjU2gzcmYzMDF4Q0ZQVGMwR2EwTVBWb3NGd1BENmdTSHR6UzRhN2EyZkVqelJFQm4xTUhobVFCd2dReHg3cEZ6V1JUK2RrVjlLVHJUdFJWVjlBNmpiZ25yaWFPVm1QbDZaQy90dU5oMVhlRDY4MGRlMWQyaHJVNXczeTRsZlpCa3Nna3JvNHpxYjZBOE5idTIzZE5yNmRHQ3B6VmFaQWJNU2VnSk1mcFp6MHUyaERyd2ZyYmpPV0UzWXlrZlJPb2R5UTVoc0dVWE1DdUhQWmZ2UStkVlRoSHZrbllUNzcrVnUxS25rZUFQWUpYMkZVek9qV1pqcEE4WExTblBBMzlwc3M1dXQrSytobEpOcUpuZFFHNUE4MnFqVWxMcmpCajlTNmVUbEFVYXVFYlFqejl4WjcweXZtcm1OYWhXUndoTnEzZjFnMHZXclhubWl6dFNlbVk4a3F0SWZScEtvZEpxSktHS05MS1JiN2twclY3VG1WVEIyWlFoaWNuWnRtcnltajFFamN6cVo2RWFJZlhFZ2YzTElFUzFqUXg4MXFYa0lQOEQ4WUEzMWk4R1l5NGxmWDYzclAyNkIvUWJwY296SEVDcXFENzM5ZDlJZmxaOGlUZG9md2NObVRrcWFYU090UzRURk1LWHd0cWRtVm5BVEg4Qzd1OU5GU1dYNmdIYURKMk9OMkQxbHJWbFZRbXdGVHA2Tlg2cWJiZTVra1RsSkZIWVB5cTNTTUFYWTJCK0oxZTB5SzhuUlI1S1RTczhRaTBvSG0vUWxncTJveGJkempsNmVhVS9QT0paR0Q5WTB0UjlwR2IzNC9sQVNFSUZEU0ZqUXR6enZ1ZEU2emN0czMxL1I1dVhCbGhFSEZ3aFEyRTJpL3RpaWhQYm1MQnErN3ByNWJSWnBvS1JHeGFISnBDUGZGcUZrdTc1Qnh4SDFMOWhBYTdpV0s1VHNrZ01JbUhyNEwyNUdBY1lXN0JnM3pkRG1JWmZOS3ZoaWQ1R1MwYm4rR1BtcW4reEhMaUpZZjVZbkpHREhYS2haU1JEVGFQcnhUTExqeGVNREhqdDRvbmgwZEtvdDl3aHlUbENqSVBJYkNTRHhVR2dmRUFrd0paZi9rOE5FdEJPQnFNRnNWSjV2ZXNnYjdVaUxFMDJ0V3RMK0pHQzVTS2tNOWJ3bGhUSmxlNm1pYm9nWmdONkZQTUoyVWxsVkhXZi93V0Z6b0dOTGxrNWlXblhuQitIRXUyL1ZoNm1JU2dtcE8wdVBWN2dQWUtoYWRWRktCb0J1STZqSDFadjBmT0lEN3loSlc5bXdGenRwd1I5dFpLOG1EbU5BZ2lRR3pSMndQYTJSS29iL3E1RFZ1UlRyZHc9PS0tQVVkSmU2QlFPTVNBMmJscFhFbjdTUT09--12ae8dfb1da36b1c2cce3313e3cf938e55b8e3b7; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "af35ab65-f5ca-4d92-a19b-be8f786cc883"
								},
								{
									"key": "X-Runtime",
									"value": "0.289858"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 28411,\n    \"email\": \"b88a4014-5f54-44dc-9631-d96fe6c0e54a@migroceruser.in\",\n    \"persistence_token\": null,\n    \"perishable_token\": null,\n    \"last_request_at\": null,\n    \"login\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"ship_address_id\": null,\n    \"bill_address_id\": null,\n    \"authentication_token\": null,\n    \"created_at\": \"2019-06-21T16:29:34.146+05:30\",\n    \"updated_at\": \"2019-06-21T16:29:34.297+05:30\",\n    \"spree_api_key\": null,\n    \"deleted_at\": null,\n    \"supplier_id\": null,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"area\": null,\n    \"last_visited_store_id\": null,\n    \"city\": null,\n    \"state\": null,\n    \"country\": null,\n    \"provider\": \"email\",\n    \"uid\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"phone\": \"9014259811\",\n    \"sub_area\": null,\n    \"is_valid_email\": false,\n    \"is_guest\": false,\n    \"referral_credits\": null,\n    \"referrer_benefit_enabled\": true,\n    \"offers_availed\": [],\n    \"device_token\": null,\n    \"store_id\": 468,\n    \"referral_code\": \"JNDKSVUG\"\n}"
						},
						{
							"name": "Invalid SupplierId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=VWRQallGTVlpSGtUK3lveEttSG5vL2tWWFk1NWFnK21xK3RYVXdhZzJqWXRCcndSZVJLYnZTeUlRenk3SDN4VllXTkt4R3NoT3pNdXhTMDJ1SzdFQTJFanByc3dHeWlXRVlIMXBDbnVEZjY1UGovUVY4QW92TFVCRllZdk1nV2o0Q1FIbEIzYmN5UkI0ekhPSXUvUExlTmRHc2xJUzFzaC9vd003LzYzUUNUazJteGhYVit6T1gyRER5RHBma2xjNGVweVVZcDNvM3VVZVhEZ3NzUEsrcXhhMWJWZXFVOXJOVlFxSnkyaHhMaEdaeSs3MysvMVY1WnJud1ZPS0pyQ1Jncm9hM25uYU9EQ1h4NjBKL0tVdWpEYnpmYS9wMDRLLzJlWHdDemptRkI4T1lrREZPdEtva2c5TlN3WEI3eW5hNm9iWExBUi8vRW9uTG5SUDRDWXhSdGpyemwxcGRKSllqSXlsSWJBVHg2L0tFOWtHMzdxbmRqTXFLNUNHSXdSNHdjM0ozZldQTjJML2FxU1VXYi9raDltOC92aFZuTjkzamtvb0VhTGQ5cVk0a2puYTJTYVpGTUtGK2o1TndnZDE0Y0hSamFQRFZBcDJNM2JKZWlwMFhjUFRZb2E5OWtKRWJIalo5TGNLcDlPVXp3RHd6ME5sdmg5MUdyZnN5MlVQaC9Ea2Z3OTQvd2YzZjJTMjJGRGpBcXhyZFRubWVTTnlodGJkOUszYWI0YzRqTGYrMXM5c29WSEYzY09Ub3BXTVJ2emFYYlJIc1VkQ2JOL1dMMlZYckdRM2M5d0hsMHBrNVU2ZkdtdEJmQXN1MHhFMnZRd1lqdzlxVFBpa2JhV0xXOWllbDBhV0pId052UVVRb0NLYWU5N3NodVI5RGdLUXpBRVpxUDJ3KzBzWXFLOHlVQlArQU51NHdhWUE5MTBlS2N6OWp4K24vVDgzTWdrQ3d0azYvSWtPV2J1MjFUTXQ5cTh3RDVTZ3gzR29yOHIwR2liTkt1eGl2ajkwTmEvMkxoYW42QkRuMnQybm5TTytTd3lzdlMrZktGNUEyTTkxSVY5V3lBT2hrNnorTmpLSFhpWVBFSHluaVNMR1Z6VEtRdU9QQnp1MEZXOThDUGlUYnRPT2J1dDVGcW4zYzI2ZXNCdHY2Zmtybzk3TitSVXVEOFRjUDlVbFJoOHM5Z2ViR2JoRGwrZU9FN0lBVGRRT3YzMXFNY3VTL3g2UzQ3aWp5RHY0SjNRM3pPMUc2Z0hMQ2svdGQwYzhRTEE4WkZIZU5wdWVBMWl2KzByWEErVGFNNnRsWThLcGNzUzVsZE9URHBLT2hBcUhDQ0RVQzZ3NytEc2d2UGtGT2w0VGg4dkpXN0xHNHVPaWVMcFQ4V0laVTZUbGFDbWNDWXM3djMyZE5ZRTFkZ3dySWZDNCtjWndzalF3aEFxcGVDbVEzWlk3U3lEQTNweE9iaDZyMWlSS2NxMzVKQThVTkE2Qno4Z2wvVUxGbGpKQlFHTUgveDhTQWxUSTNEMWM3WWdod2tvWDF6Z3oreTc4OGFyWjdJSGptbjNsU1R5UXNTRldGcVpaUkVzS1pzOFJ3dkxVSFovbWZUN3p6VGVEWEJQaVkzYmdaZE82SjQyQ2NQS0l5OHlWRE95b2c9PS0ta00wVDhMc2dmY0NBSU9PcmxGd1poQT09--ec2a30ffb0a7f93990ae4bfdf8c266e16a6b0408; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "f5380e7f-7cdc-4f82-aad0-6ca6d3c2a22d"
								},
								{
									"key": "X-Runtime",
									"value": "0.005480"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"invalid_supplier_chain_id\",\n    \"message\": \"Invalid Supplier Id\"\n}"
						}
					]
				},
				{
					"name": "SetProxyUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"let uid = pm.response.headers.get('uid');",
									"",
									"let access_token = pm.response.headers.get('access-token');",
									"let client = pm.response.headers.get('client');",
									"let proxy_token = pm.response.json()['proxy_token'];",
									"",
									"pm.collectionVariables.set(\"proxy_token\", proxy_token);",
									"pm.collectionVariables.set(\"uid\", uid);",
									"pm.collectionVariables.set(\"client\", client);",
									"pm.collectionVariables.set(\"access_token\", access_token);",
									"",
									"",
									"console.log(\"uid : \", pm.collectionVariables.get(\"uid\"))",
									"console.log(\"access_token : \", pm.collectionVariables.get(\"access_token\"))",
									"console.log(\"client : \", pm.collectionVariables.get(\"client\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "supplier_id",
								"type": "text",
								"value": "272",
								"disabled": true
							},
							{
								"key": "uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "access-token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobile_no\": \"9899693582\",\n    \"country_code\": \"91\",\n    \"supplier_id\": \"1\"\n}"
						},
						"url": {
							"raw": "{{url}}/set_proxy_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"set_proxy_user"
							]
						}
					},
					"response": [
						{
							"name": "Invalid SupplierId",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=VWRQallGTVlpSGtUK3lveEttSG5vL2tWWFk1NWFnK21xK3RYVXdhZzJqWXRCcndSZVJLYnZTeUlRenk3SDN4VllXTkt4R3NoT3pNdXhTMDJ1SzdFQTJFanByc3dHeWlXRVlIMXBDbnVEZjY1UGovUVY4QW92TFVCRllZdk1nV2o0Q1FIbEIzYmN5UkI0ekhPSXUvUExlTmRHc2xJUzFzaC9vd003LzYzUUNUazJteGhYVit6T1gyRER5RHBma2xjNGVweVVZcDNvM3VVZVhEZ3NzUEsrcXhhMWJWZXFVOXJOVlFxSnkyaHhMaEdaeSs3MysvMVY1WnJud1ZPS0pyQ1Jncm9hM25uYU9EQ1h4NjBKL0tVdWpEYnpmYS9wMDRLLzJlWHdDemptRkI4T1lrREZPdEtva2c5TlN3WEI3eW5hNm9iWExBUi8vRW9uTG5SUDRDWXhSdGpyemwxcGRKSllqSXlsSWJBVHg2L0tFOWtHMzdxbmRqTXFLNUNHSXdSNHdjM0ozZldQTjJML2FxU1VXYi9raDltOC92aFZuTjkzamtvb0VhTGQ5cVk0a2puYTJTYVpGTUtGK2o1TndnZDE0Y0hSamFQRFZBcDJNM2JKZWlwMFhjUFRZb2E5OWtKRWJIalo5TGNLcDlPVXp3RHd6ME5sdmg5MUdyZnN5MlVQaC9Ea2Z3OTQvd2YzZjJTMjJGRGpBcXhyZFRubWVTTnlodGJkOUszYWI0YzRqTGYrMXM5c29WSEYzY09Ub3BXTVJ2emFYYlJIc1VkQ2JOL1dMMlZYckdRM2M5d0hsMHBrNVU2ZkdtdEJmQXN1MHhFMnZRd1lqdzlxVFBpa2JhV0xXOWllbDBhV0pId052UVVRb0NLYWU5N3NodVI5RGdLUXpBRVpxUDJ3KzBzWXFLOHlVQlArQU51NHdhWUE5MTBlS2N6OWp4K24vVDgzTWdrQ3d0azYvSWtPV2J1MjFUTXQ5cTh3RDVTZ3gzR29yOHIwR2liTkt1eGl2ajkwTmEvMkxoYW42QkRuMnQybm5TTytTd3lzdlMrZktGNUEyTTkxSVY5V3lBT2hrNnorTmpLSFhpWVBFSHluaVNMR1Z6VEtRdU9QQnp1MEZXOThDUGlUYnRPT2J1dDVGcW4zYzI2ZXNCdHY2Zmtybzk3TitSVXVEOFRjUDlVbFJoOHM5Z2ViR2JoRGwrZU9FN0lBVGRRT3YzMXFNY3VTL3g2UzQ3aWp5RHY0SjNRM3pPMUc2Z0hMQ2svdGQwYzhRTEE4WkZIZU5wdWVBMWl2KzByWEErVGFNNnRsWThLcGNzUzVsZE9URHBLT2hBcUhDQ0RVQzZ3NytEc2d2UGtGT2w0VGg4dkpXN0xHNHVPaWVMcFQ4V0laVTZUbGFDbWNDWXM3djMyZE5ZRTFkZ3dySWZDNCtjWndzalF3aEFxcGVDbVEzWlk3U3lEQTNweE9iaDZyMWlSS2NxMzVKQThVTkE2Qno4Z2wvVUxGbGpKQlFHTUgveDhTQWxUSTNEMWM3WWdod2tvWDF6Z3oreTc4OGFyWjdJSGptbjNsU1R5UXNTRldGcVpaUkVzS1pzOFJ3dkxVSFovbWZUN3p6VGVEWEJQaVkzYmdaZE82SjQyQ2NQS0l5OHlWRE95b2c9PS0ta00wVDhMc2dmY0NBSU9PcmxGd1poQT09--ec2a30ffb0a7f93990ae4bfdf8c266e16a6b0408; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "f5380e7f-7cdc-4f82-aad0-6ca6d3c2a22d"
								},
								{
									"key": "X-Runtime",
									"value": "0.005480"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"invalid_supplier_chain_id\",\n    \"message\": \"Invalid Supplier Id\"\n}"
						},
						{
							"name": "OTP Expired",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=OThmOHhjSml6RUNWNE1VRUhpaTIyYzdTaHVyM2lMbXV2N2dEWDFOVThreVA1bE4xdTJLbTd3VEt1WHFLZWRqWjZ1NXFtMWh0RmZtQXl4N1NPZFBsTFA5a1M1eTJscmRVTDFIRUsvak10bHdkMXd4VGdRZ3lvS2VlNDFERWFzUEZMeGVHazRVL2tpNWtZZnZVUGx4RisrVloyVk5TVVYxMWNqRmJtUG93cXNGOTlESXlBMkttRlRLTkdEMWJ4Q3FpS3BqRUFQb1llbUMreVpLRlRkaXJ1cUczS1cvK0I0K1grZ2gxaE1PMU96NHJCd01hYldvUHZwR1VNR3lka2FLQ2Nnb1ZYaUV4R2xUOWxhMnNpTGllVGZIN2ZiVHhINDZvb2N4OUxaampaMEluL1hQY2NnYk4yT21ackRwejY5Q3U4VkQ4c1ZkeDRPQzBveCtndGV1aU82bTcxMEg5bE9LMlFHR005NnFDMzJKNmNzNDB2Wi96RkFWMy9RUTluWGxGRkVYaDQ5bVVHR0JJSzRWK2V1TkVwNFNpVkcwbTBaZW9jcDgzNGU4dHc5QzkzbmlpYkx0WmdhNmVuZmZ0cXY0ZHpHMjl4YXcwdk1jckd5QmJTSWpjb3k1MlF6V2tvcFZhbFNHWDFzTllFNjJiL29vZGZFL1FweS9MSjNDQy9xNGV4OCtudkkwbnAxbDdBZTA2YVVSNDAxTnhsVnBKQW9LWXhZV0I3YWNQQVRJdDdhZ2t0RnRIVmsxaE1WczU4NytDWGoxb0tFNityS3NBWURYL29vRUJxNEhiUk8rWEdvNGNBYUczd1dGNnAxU3VyZkUydjl6RWM0VkdWVTZrdUJ1YWMxYVY4ajBaRUs4cWpaZHRMc1ZWcVVzVk1uRWFHc0NxbXpTcHo0Y1R6c1pWSzhYay9lQ1RlRndxSllRRURnSTRoTUg2NWNzWkZ1MER2MmlIM0lYbnZrV2Q3NUp5eFNNUUFkdHJwb2ZpcHppSGFNYmRZQVJxZmZLTm0rcWdiVlh2V2xXSlJvS1pWbDNMOVhkL0RLU3ZKTk9OUXhINE9jeDBpSUdvMjdsMTJlcytUL2VGeFd2OHhmbW8yVjNSSjZBWUd0VU9iTituV3Zld25Ha2JDNWFJS25vNS9QVUh5M1lJd1RzNEhCSXBnVVNUaG5HS1J0YTFBckdNdEdGb1JUTENRWmI0dURXbHpHVXpITFFqNWNGdEdvcndiQjVnd1pKeEZsWU9oSWM5cURoMVpaUXNOcjZkaEJRelp1S0ZTelI5ZWxuSkQ4c2tBZUpFdnRBUWZ2dG1VaThic3ZpSkVXdkV5ZWYrWTBpYSthS0NLWXhIL1ZQOG5hRW1nRFpsVE9sekhxbE5BNTBXOTlSMWtJNGQwRmFUa2t6eGRaWjdGMkN3OWUybC8xc2dnQnJ1NGZmY0NpQkJGejFiS0lCaDNwTXl2Yk9MN1J6Qm0yWHYwNFNWRjFYOTUyK3VDZkhSWEcvSWJtM2FFeE9NSS9ucGFKSGxPOEErR2V3eGlFUHJtWnd1dERiMHlDSURLOTJNREJsWVpHOEczQVhXQml6dStnQmRVV1NGaGlpTHViTGwvUmJSTTA0aXdMa3VNYU02Q2VWbmxXVkxUMjhrdm5nSFBoaUQ2cEZhd1E9PS0tRFNLSHhBV0twUDE2S3Z5L0I2RjZpZz09--6353f430dd4c42ae5423008d9411a8b21b61392e; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "71371364-554f-4a0c-8ea3-8658679a615c"
								},
								{
									"key": "X-Runtime",
									"value": "0.210981"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "VerifyOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 206\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Not Acceptable",
							"code": 406,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=SjFrK3R2UG5GVnpLeWRZR1hiWjRWdDg5QitXaHhCeHM4VU9qL21SOWJ3OVRpb3dzL0tzalgwRE84NlJxay80eDMxeUZOc2VVYmpsSDhodkZONmZIOHU4Y1Jud2ZEaE1OeW1iN1JmU002ZE40MFZSSk0xYVFNTzVIMG1EbzlVSjJuZEVVZHZCL1NKYWhQSGxwWFN4V3pZS1hyUmFITlpVRUZoaGFHbXZ0ZmI2NEVHL1FFVVpTRjhNY2M5Rlc1WFEzemluY2k5OEtxQXVTbnJDMDB5UGpGdXlDTEg4QnNWUUhsZk9FOTg5ZUNQVDJFS2VYd2pKOElDdHdzUjZOOVdabCtBNWFMY0JwOEs4K29kK21lVmt0NHg0MXBFUHdMMS9QVW9SUUdoaWt6eldOcjdSZEx0YS90dFIrem5ZTDF3Vms0cW9pNVN2amFCR1ZsVnQyUkZLQktlNndGM2lxMi81T01wckN1UWQ2eU9wU1FhRkZ3K1FSRVI0eE9MSzVpYzhPZHJnT3NHQzVHM2VXTDBUZWxIMmptTFdzMUFqQXRaenhPVXlXVXpsRnloQlpyYXNmajZWM1drMmt1SmtjMTMwUER3S0dYSVRxUnVoT3JwQzJlbnZYblhLV2l1c05kU2FDRWJsb0RIUWlaU29wTkFOWjQwN2ViMXcyM1VFVWZjeFllaHRJLzVIN2RUQjZJMWNjNUJPOVZ2aTVCWWFPMWJuWmR2Qmw5N013MVp6eVF5VXFGdGpNVnJwTEVhbG9EbG1ya2NndFhJVS9naXZYdVk5KzBINkZudTZIT0JydFBPZkVMdEQyeVY3V2QwN0hEZFdOODBQdzZrdDZreU5HS21VVmpmV2pRYXpSVk5hRmhRRE5GR0lHaEpnWWpFbFZBL1F1ZjRzR3p2Ly96WEhuaG5pUkI4MU9IMFMvc3d3TU1yYXJrMk9qTGpDcWloNnl3Q1g3THJodFd6M2FHb0tMNC9ZSUtHSFZVZUs1UjJLMEpza1RQT2dQcmhpRVhzV1VwektOMmxCNkc4SnBBWVJvTlJRVkdJbURQUFZZNlFudVFiaitXLzFpVFlzU0U3YjB0STRBWVpYU1lqdGJ3TGIrZ0Uzdld2Zlo2ZjQ2bkswSU5tUy9qV1ZQZ3g0N3Z0Y204THdPYVVyV0dTSitJaXI2b0FPZjlIWGNYWlNOS2xReVg5ZnJvUUh0bExyUkRaZUtMb0paVVhmOFZabmptcXFrbjAzLytTL2Zxd1d0NjVzeHVtMUd6S1BLVnRPTmRJV1JpR21vaW1QN3RCVkVaS3gxTnNEMUY1ZG93ajhhTExYWS94M1BFK21mc2Q3ck1qbWpYVW1hVmVRN1VjTmJ6Z0lsT1NPb3V6c0JtRGxXQzRFSytsSDN6eUdXOTVDTlBlMXJ6U2tkY256dkx3Q2x3V01naXZzVUtCRlcrWWZ0K2NkNjNZNjRqSW1EUlZzN2dzVVdvc1h1MG4xbDU3UXJIV3Q2ZTRSV05GdFdSWk4yNkozdlVwTnkyR1ZySmtrOHhhWktmWTlQTDdVSFM0L25XWmZldWM5WlNZRkw5MklvckVlNGp0SUJVdWo4UkxoVmRZWCtsdnIrYURNVGRsUDRJSktlVHYwalN2QmE4bEpnZmd0T1E1K1diWWNGMGc9PS0tbXFWSGdrNVp5bTM3cjVXSWRKQVJmZz09--f6da2704e8f37523bc545b8626fa477654ff0041; path=/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "__profilin=p%3Dt; path=/"
								},
								{
									"key": "X-Request-Id",
									"value": "b6855e8b-3f3c-498c-96bc-dff0e421a0a6"
								},
								{
									"key": "X-Runtime",
									"value": "0.036412"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"OTP expired\",\n    \"type\": \"expired\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"5654\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 468\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:59:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Access-Token",
									"value": "GrpheNgkFUH8wwixjwOMnw"
								},
								{
									"key": "Token-Type",
									"value": "Bearer"
								},
								{
									"key": "Client",
									"value": "vZqbia0mRQ-T6j1_tiWu1w"
								},
								{
									"key": "Expiry",
									"value": "33010714774"
								},
								{
									"key": "Uid",
									"value": "9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Etag",
									"value": "W/\"8155e657bf4f1866f677db487a367565\""
								},
								{
									"key": "Cache-Control",
									"value": "max-age=0, private, must-revalidate"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=cVo1TWZTaFFzejFPS0dyeXlyZHp0eEVwb0ZJaGxxY1FWd2RFUU9RRUI1ditVcXY5b2dra1NQUklHa3FZLzQ3dGRjVmxwdDNqNmZPaE5SbjR3d21zT21kMUdLMzZGdDJ4cVlySmpFR0JxTkliVXlCcEVTbzBEbVFUUWZmdVpzMG1SL2pobmhuNlFhWjl1M2dWMFB4cVNpTkwwYmZmSWRuOXNualR4TkxWbytkTzFPaGtudEZib3BpZlJOTTNZZmExWkFJS1V6SWg2anBtdlUzbGFuTDd3T2hjU2gzcmYzMDF4Q0ZQVGMwR2EwTVBWb3NGd1BENmdTSHR6UzRhN2EyZkVqelJFQm4xTUhobVFCd2dReHg3cEZ6V1JUK2RrVjlLVHJUdFJWVjlBNmpiZ25yaWFPVm1QbDZaQy90dU5oMVhlRDY4MGRlMWQyaHJVNXczeTRsZlpCa3Nna3JvNHpxYjZBOE5idTIzZE5yNmRHQ3B6VmFaQWJNU2VnSk1mcFp6MHUyaERyd2ZyYmpPV0UzWXlrZlJPb2R5UTVoc0dVWE1DdUhQWmZ2UStkVlRoSHZrbllUNzcrVnUxS25rZUFQWUpYMkZVek9qV1pqcEE4WExTblBBMzlwc3M1dXQrSytobEpOcUpuZFFHNUE4MnFqVWxMcmpCajlTNmVUbEFVYXVFYlFqejl4WjcweXZtcm1OYWhXUndoTnEzZjFnMHZXclhubWl6dFNlbVk4a3F0SWZScEtvZEpxSktHS05MS1JiN2twclY3VG1WVEIyWlFoaWNuWnRtcnltajFFamN6cVo2RWFJZlhFZ2YzTElFUzFqUXg4MXFYa0lQOEQ4WUEzMWk4R1l5NGxmWDYzclAyNkIvUWJwY296SEVDcXFENzM5ZDlJZmxaOGlUZG9md2NObVRrcWFYU090UzRURk1LWHd0cWRtVm5BVEg4Qzd1OU5GU1dYNmdIYURKMk9OMkQxbHJWbFZRbXdGVHA2Tlg2cWJiZTVra1RsSkZIWVB5cTNTTUFYWTJCK0oxZTB5SzhuUlI1S1RTczhRaTBvSG0vUWxncTJveGJkempsNmVhVS9QT0paR0Q5WTB0UjlwR2IzNC9sQVNFSUZEU0ZqUXR6enZ1ZEU2emN0czMxL1I1dVhCbGhFSEZ3aFEyRTJpL3RpaWhQYm1MQnErN3ByNWJSWnBvS1JHeGFISnBDUGZGcUZrdTc1Qnh4SDFMOWhBYTdpV0s1VHNrZ01JbUhyNEwyNUdBY1lXN0JnM3pkRG1JWmZOS3ZoaWQ1R1MwYm4rR1BtcW4reEhMaUpZZjVZbkpHREhYS2haU1JEVGFQcnhUTExqeGVNREhqdDRvbmgwZEtvdDl3aHlUbENqSVBJYkNTRHhVR2dmRUFrd0paZi9rOE5FdEJPQnFNRnNWSjV2ZXNnYjdVaUxFMDJ0V3RMK0pHQzVTS2tNOWJ3bGhUSmxlNm1pYm9nWmdONkZQTUoyVWxsVkhXZi93V0Z6b0dOTGxrNWlXblhuQitIRXUyL1ZoNm1JU2dtcE8wdVBWN2dQWUtoYWRWRktCb0J1STZqSDFadjBmT0lEN3loSlc5bXdGenRwd1I5dFpLOG1EbU5BZ2lRR3pSMndQYTJSS29iL3E1RFZ1UlRyZHc9PS0tQVVkSmU2QlFPTVNBMmJscFhFbjdTUT09--12ae8dfb1da36b1c2cce3313e3cf938e55b8e3b7; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "af35ab65-f5ca-4d92-a19b-be8f786cc883"
								},
								{
									"key": "X-Runtime",
									"value": "0.289858"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 28411,\n    \"email\": \"b88a4014-5f54-44dc-9631-d96fe6c0e54a@migroceruser.in\",\n    \"persistence_token\": null,\n    \"perishable_token\": null,\n    \"last_request_at\": null,\n    \"login\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"ship_address_id\": null,\n    \"bill_address_id\": null,\n    \"authentication_token\": null,\n    \"created_at\": \"2019-06-21T16:29:34.146+05:30\",\n    \"updated_at\": \"2019-06-21T16:29:34.297+05:30\",\n    \"spree_api_key\": null,\n    \"deleted_at\": null,\n    \"supplier_id\": null,\n    \"latitude\": null,\n    \"longitude\": null,\n    \"area\": null,\n    \"last_visited_store_id\": null,\n    \"city\": null,\n    \"state\": null,\n    \"country\": null,\n    \"provider\": \"email\",\n    \"uid\": \"9907f4fd-8d6d-4b49-ad2c-7e4553d75299_migroceruser.in\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"phone\": \"9014259811\",\n    \"sub_area\": null,\n    \"is_valid_email\": false,\n    \"is_guest\": false,\n    \"referral_credits\": null,\n    \"referrer_benefit_enabled\": true,\n    \"offers_availed\": [],\n    \"device_token\": null,\n    \"store_id\": 468,\n    \"referral_code\": \"JNDKSVUG\"\n}"
						},
						{
							"name": "InvalidOTP",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "supplier_id",
										"value": "272",
										"type": "text",
										"disabled": true
									},
									{
										"key": "uid",
										"value": "0d4ae67d-aa95-470e-ae20-9e23b028056c_migroceruser.in",
										"type": "text",
										"disabled": true
									},
									{
										"key": "access-token",
										"value": "R9vgiznm-19EnNbAyb9F4Q",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client",
										"value": "3JepNbFc3Yt-ljRYdlee1g",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobile_no\": \"9014259811\",\n    \"otp_code\": \"8817\",\n    \"referral_code\": \"FKSVWIJT\",\n    \"supplier_id\": 409\n}"
								},
								"url": {
									"raw": "{{url}}/login/verify_otp",
									"host": [
										"{{url}}"
									],
									"path": [
										"login",
										"verify_otp"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Date",
									"value": "Fri, 21 Jun 2019 10:56:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Set-Cookie",
									"value": "_mi_grocer_skeleton_session=MXBkUitZL09GK1RLcGh4enM3N0hDMTRiZWltaUt5R09oRGRqLzVKUHVDWWQzMm5ZSWVkSmVUQmU4ZUJSSk9NQWlJSlV2enVKMDY0QWVYb1Vqbmw3Znh1eWk1Njh4OGRJcW15d1FoRTU2aHFybDkyT29nQmRVNUJabEdLRXVWUlNlYlRZK3FEZXdTejZQbE5WQmlSQThyaXo5UTBjQjhMU3VUb3BLSmJVcHlaRVYwOWNwK1FnaXcrdnlOMmgvcTF5YXZlOFZEdXhoRTVhdytIUXIyd3pMZ3Yvd1BoVVFlSkFNN3EvMDRVdzM3Y0FscGxMZ0N5RS9oVHZjN1FVREgrSE5jVk82SVFXdVlXYkxvU3V3SVJSMCtPY3A2WGRQbEVXUUo1U2xPYzFReWdQSm9GeXhOenY3NU8zV01kNVFQeU1JU1JQQmx2Z0lCQTJyaUdxRXd1WUhWMm1ra3BVZEVKRlNDK3dqTlJ3ZGNjRUZCSFlFdElCellPOE9kSDFiYVI2Tk1oWlU5enN4SmhrcE5pUWVCcjdNb0gxY3dleVlYWXFuRFdWSk1pMFIzcGlFZTAwcyt4Ui9wZy9zbmRBamJVNUV3dTR1MVB5YUR1SjhhakxuejRzMkVuSFRpV2p5bVV5TmVpM1FqY3dHWWU0cFVIYXc1QUdIc2RhT1lMWmFVc3diMlN4cWNOWUZPdHJoK1dHMDZWMGU1SmpNR1laMkVObEZlMjBEVVBiRVlka01LWmFjc2I1Y2w5VTRHTTFpSStTSzRNTy82Rkl2bzE1NHJZSkhlbGxWWjhUb1VOV2V6YmdvcWRzbGVENWhQejJ5MFdTY0x5WTU4V3JCQ2tCaGR4WXZYQ1NKcFloMEs0U1gzWHpUQWcyNnh6UG1sRTRjZGZ6dmZHclExKzJKcVQvUnVHZjdrSlN5eG9kSXp2WFFsUTFpYXovL1UzZ0IvOGFZR2dGYm1tSUxoV3pkNk8rSExRMWFXN3NVMTM3K2V0bll4VXJ3S2hjb2lCN2VkL0Q0SGxQeVhFUk1iczNGNVdydDF1Uy9ucTVFV04rSm40NlhrZmlxUmxMdUtEUjlZcmh4L0NLNU1oZ2NudWtJMTBjUmQyRXBLZzJ4NXVHZEFJazFTdVpBU3dSYzlIN2x3czhKSUYraGpLVWVwcXFwNTZSQy9nNXhuaTF5SGR3YkJ4VDlEUlZoOGExMXBJeC8xNC9sZGtUaFFZTmxkd3V0TUpaczVKdkM2RjkvV3I4NVo1WjdMM2JNVHNrNUpUWVUyOXNyVi9Xc1NDa2twVUR2MCtvN28zM0N4ZVNqVXR3WHRnSFNxQTlsOEZDQjJSTTdIWCtUd0dWRm9vSTV1SWFYb2pCQ0J6RXk4R2ZLaUNIWjVoNWc5aFMrL05OWVArNW5zNmhWQVBvc2RpKzIrcFF1dUtQSFF1R3Y2RHFoN01HNzRKMEpMb1VjMVlhREszdTVmYlBLL24xTlBoeFpobjFBQ1NCZk8wQWsxUlh2ckVNT0ljMmI5ME0zZnVBdGZ5cGdpUUlCYzM2eW01SW9qVGJFcXdBQ2Nnc3llcnc5ZmV5T0lsNTlzbklJTjBVWWE5RlZPUUxNdXQwWUdWWE8wQmVTNG11OGVScW9CRVNlcEVYTlVPT2djSDU5akV0T3c9PS0tSWxJcnJBR1hZaWh6Wkx3NW1pclhEUT09--03cfa8ce49c8c11481ac76963088442e9f92c5bd; path=/; secure; HttpOnly"
								},
								{
									"key": "X-Request-Id",
									"value": "3040cbde-16ef-4be9-8ce5-181b9cac4a7c"
								},
								{
									"key": "X-Runtime",
									"value": "0.125114"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Otp\",\n    \"type\": \"invalid\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "OrderManagement",
			"item": [
				{
					"name": "AcceptOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let order = res_body.data.orderAccepted.order;",
									"",
									"console.log(\"order: \", order)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"State should be complete\", function(){",
									"    ",
									"    pm.expect(order.state).to.eq(\"complete\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($order_number: String!){\n  orderAccepted(input: {number: $order_number}){\n    order{\n        state\n    }\n  }\n}",
								"variables": "{\n\t\"order_number\": \"{{order_number}}\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "assignDeliveryExecutiveForOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"console.log(\"order: \", order)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"State should be complete\", function(){",
									"    ",
									"    pm.expect(order.state).to.eq(\"complete\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($order_number: String!){\n  assignDeliveryExecutiveForOrder(input: {order_number: $order_number, delivery_executive_id: 140985}){\n    order{\n        id\n        state\n        number\n        delivery_executive{\n            first_name\n            last_name\n            phone\n        }\n    }\n  }\n}",
								"variables": "{\n\t\"order_number\": \"{{order_number}}\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "OrderDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($order_number: String!){\n  newStoreOrderDetails(number: $order_number){\n    number\n    state\n    total\n    delivery_info{\n        tracking_url\n        status\n        dasher_status\n        dasher_phone_no_customer\n        dasher_phone_no_store\n        dasher_name\n    }\n    rz_payment{\n        rz_payment_id\n        status\n        rz_refund_amount\n        rz_refund_status\n    }\n  }\n}",
								"variables": "{\n\t\"order_number\": \"R403799951\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orders Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n  ordersSummary(start_time: 852057000, end_time: 1643881759, supplier_ids: [181296]){\n    confirm\n    shipped\n    complete\n    delivered\n    canceled\n    total_sale\n    total_orders\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "OrderEdit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"",
									"// postman.setNextRequest(null);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($order_number: String!){\n  editLineItem(input: {number: $order_number, edit_line_items: [{variant_id: 409750,, quantity: 4}]}){\n    order{\n      number\n      total\n      line_items{\n        variant{\n          id\n          price\n        }\n        quantity\n      }\n    }\n  }\n}",
								"variables": "{\n\t\"order_number\": \"{{order_number}}\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "OrderEdit Update LineItem price",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"",
									"// postman.setNextRequest(null);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($order_number: String!){\n  updateLineItemPrice(input: {order_number: $order_number, variant_id: 379659, store_price: 121}){\n    success\n    order{\n        number\n        total\n        line_items{\n            mrp\n            price\n        }\n    }\n  }\n}",
								"variables": "{\n\t\"order_number\": \"{{order_number}}\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order Shipped",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let order = res_body.data.orderShipped.order;",
									"",
									"console.log(\"order: \", order)",
									"",
									"pm.test(\"State should be shipped\", function(){",
									"    ",
									"    pm.expect(order.state).to.eq(\"shipped\");",
									"",
									"});",
									"",
									"// postman.setNextRequest(null);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($order_number: String!){\n  orderShipped(input: {number: $order_number}){\n    order{\n        state\n        delivery_info{\n        status\n        external_id\n        tracking_url\n        dasher_status\n        dasher_phone_no_customer\n        dasher_phone_no_store\n        dasher_name\n    }\n    }\n    \n  }\n}",
								"variables": "{\n\t\"order_number\": \"{{order_number}}\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order Canceled",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let order = res_body.data.orderCancel.order;",
									"",
									"console.log(\"order: \", order)",
									"",
									"pm.test(\"State should be canceled\", function(){",
									"    ",
									"    pm.expect(order.state).to.eq(\"canceled\");",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($order_number: String!){\n  orderCancel(input: {number: $order_number}){\n    order{\n        state\n        number\n    }\n  }\n}",
								"variables": "{\n\t\"order_number\": \"{{order_number}}\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orders List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n  ordersConnection(after: null, first: 10){\n    totalCount\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      cursor\n      node {\n        id\n        number\n        supplier_id\n        state\n        placed_at\n        accepted_at\n        shipped_at\n        delivered_at\n        canceled_at\n        user{\n          phone\n          email\n          id\n        }\n        rz_payment{\n            rz_payment_id\n            status\n            payment_method\n            amount\n            rz_refund_amount\n            rz_refund_status\n\n        }\n        ship_address{\n          locality\n          firstname\n          lastname\n        }\n        line_items{\n          quantity\n          price\n          productName\n          variant{\n            id\n            images{\n              id\n              url(style: \"small\")\n            }\n            product{\n              images{\n                url(style: \"mini\")\n              }\n            }\n          }\n        }\n        total\n        amount_paid\n        balance_amount\n        refund_amount\n        order_copy{\n          initial_line_items{\n            price\n            quantity\n            variant_id\n            variant{\n              sku\n              discontinued\n              images{\n                url\n              }\n              option_values{\n                presentation\n              }\n              product{\n                name\n              }\n            }\n          }\n          \n          edit_requests\n        }\n        \n      }\n    }\n  }\n}",
								"variables": "{\n\t\"order_number\": \"{{order_number}}\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "OrderDelivered",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let order = res_body.data.orderDelivered.order;",
									"",
									"console.log(\"order: \", order)",
									"",
									"",
									"pm.test(\"State should be delivered\", function(){",
									"    ",
									"    pm.expect(order.state).to.eq(\"delivered\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($order_number: String!){\n  orderDelivered(input: {number: $order_number}){\n    order{\n        state\n    }\n  }\n}",
								"variables": "{\n\t\"order_number\": \"{{order_number}}\"\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"// postman.setNextRequest('SearchProduct')",
							"",
							"let res_body = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"No errors\", function(){",
							"    pm.expect(res_body.errors).to.be.oneOf([undefined, null]);",
							"",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "ProductsEdit",
			"item": [
				{
					"name": "AddProductFromMasterCatalog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($supplier_id: Int!, $mc_variant_id: Int!, $store_price: Float!){\n  addVariantsBusinessAdmin(input: {variants: [{mc_variant_id: $mc_variant_id, store_price: $store_price}], supplier_id: $supplier_id}){\n    success\n    variants{\n        id\n        name\n        sku\n        product{\n            id\n            slug\n        }\n    }\n  }\n}",
								"variables": "{\n\t\"supplier_id\": 2318,\n\t\"mc_variant_id\": 138255,\n\t\"store_price\": 5,\n\t\"store_mrp\": 20\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "EditVariant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  editVariantBusinessAdmin(input: {\n    variant_id: 255916\n    discontinue: false\n    out_of_stock: true\n    price: 700.0\n    mrp: 800.0\n    max_quantity_per_order: 0\n  })\n  {\n   \n    variant{\n      id\n      out_of_stock\n      discontinued\n      mrp\n      price\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateMultipleVariants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  updateMultipleVariants(input: {\n    variantIds: [334153, 334155, 209920, 206609, 211297]\n    price: 60.0\n    maxQuantityPerOrder: 7\n    outOfStock: true\n  })\n  {\n    success\n    variants{\n      id\n      price\n      mrp\n      out_of_stock\n      discontinued\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreareMultipleVariants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  createVariantsForMultipleStores(input: {\n    variants_data: [{\n        mc_variant_id: 255916\n        store_price: 100\n        store_mrp: 120\n        supplier_ids: [3688]\n    },\n    {\n        mc_variant_id: 5\n        store_price: 220\n        store_mrp: 220\n        supplier_ids: [3688]\n    }]\n  })\n  {\n    success\n    error_messages\n    variants{\n      id\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Promotions",
			"item": [
				{
					"name": "Add FLat Discount Promotion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  addFlatDiscountPromotion(input: {\n    promotion: {\n      code: \"testing123\",\n      supplier_id: 3688,\n      starts_at: 1614750393,\n      expires_at: 1614836793,\n      name: \"testing Promotion\",\n      preferences: {\n        first_order_only: false,\n        order_min_amount: 0,\n        discount_percent: 10,\n        offer_max_amount: 300\n      }\n    }\n  }){\n    promotion{\n      id\n      code\n      expires_at\n      preferences{\n        amount_min\n        discount_percent\n        offer_max_amount\n        offer_type\n        order_min_amount\n        first_order_only\n      }\n      name\n    }\n    success\n    error_message\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Referral",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  setReferral(input: {\n    rules: {\n      order_min_amount: 100.0\n      offer_max_amount: 50.0\n      offer_percent: 10.0\n      offer_flat_amount: 50.0\n      type: flat_percent\n      rewarded_to: both\n    }\n    enabled: true\n  }){\n    success\n    referral_promotion{\n        enabled\n        supplier_chain_id\n        rules{\n            order_min_amount\n            offer_max_amount\n        }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Referral",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n    referralPromotion{\n       supplier_chain_id\n       enabled\n       rules{\n           order_min_amount\n           offer_max_amount\n           offer_percent\n           offer_flat_amount\n           rewarded_to\n           type\n       } \n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update FLat Discount Promotion Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  updatePromotion(input: {\n    promotion_id: 691,\n    promotion_data: {\n      code: \"demo_julydffddef_10\",\n      supplier_id: 202,\n      starts_at: 1569317228,\n      expires_at: 1600939655,\n      name: \"NewKrishccc 10\"\n      preferences: {\n        first_order_only: false,\n        order_min_amount: 500,\n        discount_percent: 50,\n        offer_max_amount: 200\n      }\n    }\n  }){\n    promotion{\n      code\n      expires_at\n      starts_at\n      code\n      name\n      preferences{\n        amount_min\n        discount_percent\n        offer_max_amount\n        offer_type\n        first_order_only\n        order_min_amount\n      }\n    }\n    success\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Promotion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  deletePromotion(input: {promotion_id: 3688}){\n    success\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "OrdersList Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							},
							{
								"key": "X-Proxy-Authorization",
								"type": "text",
								"value": "{{proxy_token}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n  productsCount(supplier_id: 202)\n  ordersSummary(supplier_id: 202, start_time: 1599552583, end_time: 1602144605){\n    shipped\n    delivered\n    canceled\n    complete\n    total_sale\n    total_orders\n  }\n  usersCount(supplier_id: 202)\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Invoice Tax",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							},
							{
								"key": "X-Proxy-Authorization",
								"type": "text",
								"value": "{{proxy_token}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n    setInvoiceTax(input: {\n        supplier_id: 202\n        label: \"sdsf\"\n        percentage: 15\n    }){\n        success\n        supplier{\n            id\n            invoice_tax{\n                label\n                percentage\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Tips",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							},
							{
								"key": "X-Proxy-Authorization",
								"type": "text",
								"value": "{{proxy_token}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n    setTips(input: {\n        supplier_id: 202\n        tip_type: percentage\n        values: [10, 15, 17.5, 20]\n        default_value: 20\n    }){\n        success\n        supplier{\n            id\n            invoice_tax{\n                label\n                percentage\n            }\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "offers",
			"item": [
				{
					"name": "createMultistoreCampaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  createMultiStoreCampaign(input: {\n    campaignType: general_offer\n    commonInput: {\n      name: \"testing api\"\n      starts_at: 1644415030\n      ends_at: 1675951039 \n    }\n    flatDiscountInput: {\n      code: \"api123\"\n      first_order_only: true\n      order_min_amount: 100.00\n      discount_percent: 20\n      offer_max_amount: 50\n    }\n    supplierIds: [3688]\n  })\n  {\n    success\n    errorMessages\n    campaigns{\n      id\n      name\n      starts_at\n      ends_at\n      supplier_ids\n      parent{\n        id\n      }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "createMultistoreOfferLineItemDiscountType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  createMultiStoreOfferLineItem(input: {\n    offerType: discount_type\n    parentCampaignId: 357\n    discountTypePreferences: {\n       discount_type: flat_percent\n       offer_on: mrp\n       flat_amount: 5\n       flat_percent: 20\n       allow_span: true\n       variant_id: 30473\n       min_quantity: 4\n    }\n    supplierIds: [562, 202]\n  })\n  {\n    success\n    errorMessages\n    offerLineItems{\n        id\n        campaign_id\n        parent_id\n        type\n        campaign{\n           name\n           starts_at\n           ends_at \n           parent{\n               id\n           }\n        }\n        parent_id\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "createMultistoreOfferLineItemInvoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  createMultiStoreOfferLineItem(input: {\n    offerType: on_invoice\n    parentCampaignId: 357\n    invoiceOfferTypePreferences: {\n        invoice_amount: 300\n        reward_type: variants\n        variants_data: {\n            variant_id: 30473\n            quantity: 2\n        }\n    }\n    supplierIds: [562, 202]\n  })\n  {\n    success\n    errorMessages\n    offerLineItems{\n        id\n        campaign_id\n        parent_id\n        type\n        campaign{\n           name\n           starts_at\n           ends_at \n           parent{\n               id\n           }\n        }\n        parent_id\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "createMultistoreOfferLineItemBuyMGetN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  createMultiStoreOfferLineItem(input: {\n    offerType: buy_m_get_n\n    parentCampaignId: 357\n    buyMGetNTypePreferences: {\n        allow_offer_span: true\n        policy_type: fixed_buy\n        buy_variants_data: [\n            {\n                variant_id: 88823,\n                quantity: 1\n            },\n            {\n                variant_id: 661,\n                quantity: 1\n            }\n        ],\n        get_variants_data: [\n            {\n                variant_id: 166977,\n                quantity: 1\n            }\n        ]\n    }\n    supplierIds: [202, 562]\n  })\n  {\n    success\n    errorMessages\n    offerLineItems{\n        id\n        campaign_id\n        parent_id\n        type\n        campaign{\n           name\n           starts_at\n           ends_at \n           parent{\n               id\n           }\n        }\n        parent_id\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteMutliStoreOfferLineItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  deleteMultiStoreOfferLineItem(input: {\n    parentId: 773    \n    supplierIds: [202]\n  })\n  {\n    success\n    errorMessages\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllCampaigns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n    getAllCampaigns(supplier_id: 3688){\n        id\n        name\n        supplier_ids\n        parent{\n            id\n            supplier_ids\n        }\n        offer_line_items{\n            id\n            parent{\n                id\n                supplier_ids\n            }\n            supplier_ids\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteMutliStoreCampaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  deleteMultiStoreCampaign(input: {\n    parentId: 383    \n    supplierIds: [202]\n  })\n  {\n    success\n    errorMessages\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteIndividualCampaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"// let order = res_body.data.orderAccepted.order;",
									"",
									"// console.log(\"order: \", order)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"State should be complete\", function(){",
									"    ",
									"//     pm.expect(order.state).to.eq(\"complete\");",
									"",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Uid",
								"type": "text",
								"value": "{{uid}}"
							},
							{
								"key": "Access-Token",
								"type": "text",
								"value": "{{access_token}}"
							},
							{
								"key": "client",
								"type": "text",
								"value": "{{client}}"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  deleteCampaign(input: {\n    id: 429\n  })\n  {\n    success\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Catalog V4",
			"item": [
				{
					"name": "Offers",
					"item": [
						{
							"name": "createCatalogCampaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\n  createCatalogCampaign(input: {\n    catalog_id: 73\n    campaign_type: general_offer\n    common_input: {\n      name: \"Employee Offers\"\n      starts_at: 1645185440\n      ends_at: 1676721440 \n    }\n    flat_discount_input: {\n      code: \"kris85498966s\"\n      first_order_only: true\n      order_min_amount: 100.00\n      discount_percent: 20\n      offer_max_amount: 50\n    }\n    supplier_ids: [181664, 181713, 181791, 181788, 181778, 181783, 181668, 181709, 181781, 181711, 181666, 181712, 181798, 181674, 181710, 181784, 181782, 181777, 181785, 181780, 181787, 181793, 181789, 181790, 181794, 181795, 181799, 181797, 181830, 181665, 181669, 181670, 181673, 181714, 181779, 181786, 181792, 181796, 181672, 181667, 181671]\n  })\n  {\n    success\n    error_messages\n    campaign{\n      id\n      name\n      starts_at\n      ends_at\n      supplier_ids\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteCatalogCampaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\n  deleteCatalogCampaign(input: {\n    campaign_id: 469\n  })\n  {\n    success\n    error_messages\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						},
						{
							"name": "addSuppliersToCampaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\n  addSuppliersToCampaign(input: {\n    campaign_id: 1856\n    supplier_ids: [2756]\n  })\n  {\n    success\n    error_messages\n    campaign{\n      id\n      name\n      starts_at\n      ends_at\n      supplier_ids\n      parent{\n        id\n      }\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						},
						{
							"name": "removeSuppliersFromCampaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\n  removeSuppliersFromCampaign(input: {\n    campaign_id: 470\n    supplier_ids: [202]\n  })\n  {\n    success\n    error_messages\n    campaign{\n      id\n      name\n      starts_at\n      ends_at\n      supplier_ids\n      parent{\n        id\n      }\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						},
						{
							"name": "extendCatalogCampaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\n  extendCatalogCampaign(input: {\n    campaign_id: 468\n    starts_at: 1629116707\n    ends_at: 1660652707\n  })\n  {\n    success\n    campaign{\n      id\n      name\n      starts_at\n      ends_at\n      supplier_ids\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						},
						{
							"name": "catalogCampaigns",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query{\n    catalogCampaigns(supplier_id: 202, catalog_id: 5, campaign_ids: [471]){\n        id\n        name\n        supplier_ids\n        catalog_id\n        catalog{\n            id\n            name\n        }\n        campaign_type\n        offer_line_items{\n            id\n            parent{\n                id\n                supplier_ids\n            }\n            supplier_ids\n        }\n    }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						},
						{
							"name": "createOfferLineItemDiscountType CatalogCampaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\n  createOfferLineItemCatalogCampaign(input: {\n    offer_type: discount_type\n    campaign_id: 2589\n    discount_type_preferences: {\n       discount_type: flat_percent\n       offer_on: mrp\n       flat_amount: 5\n       flat_percent: 50\n       allow_span: true\n       variant_id: 393279\n       min_quantity: 1\n    }\n  })\n  {\n    success\n    error_messages\n    offer_line_item{\n        id\n        campaign_id\n        type\n        campaign{\n           name\n           starts_at\n           ends_at \n        }\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						},
						{
							"name": "createOfferLineItemBuyMGetN Catalog Campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\n  createOfferLineItemCatalogCampaign(input: {\n    offer_type: buy_m_get_n\n    campaign_id: 468\n    buy_m_get_n_type_preferences: {\n        allow_offer_span: true\n        policy_type: fixed_buy\n        buy_variants_data: [\n            {\n                variant_id: 340626,\n                quantity: 1\n            },\n            {\n                variant_id: 340627,\n                quantity: 1\n            }\n        ],\n        get_variants_data: [\n            {\n                variant_id: 340627,\n                quantity: 1\n            }\n        ]\n    }\n  })\n  {\n    success\n    error_messages\n    offer_line_item{\n        id\n        campaign_id\n        type\n        campaign{\n           name\n           starts_at\n           ends_at \n        }\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						},
						{
							"name": "createMultistoreOfferLineItemInvoice Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\n  createOfferLineItemCatalogCampaign(input: {\n    offer_type: on_invoice\n    campaign_id: 468\n    invoice_offer_type_preferences: {\n        invoice_amount: 300\n        reward_type: variants\n        variants_data: {\n            variant_id: 340627\n            quantity: 2\n        }\n    }\n  })\n  {\n    success\n    error_messages\n    offer_line_item{\n        id\n        campaign_id\n        type\n        campaign{\n           name\n           starts_at\n           ends_at \n        }\n    }\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteCatalogOfferLineItem",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setNextRequest(null);",
											"let res_body = pm.response.json();",
											"",
											"",
											"// let order = res_body.data.orderAccepted.order;",
											"",
											"// console.log(\"order: \", order)",
											"",
											"// pm.test(\"Status code is 200\", function () {",
											"//     pm.response.to.have.status(200);",
											"// });",
											"",
											"// pm.test(\"State should be complete\", function(){",
											"    ",
											"//     pm.expect(order.state).to.eq(\"complete\");",
											"",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Uid",
										"type": "text",
										"value": "{{uid}}"
									},
									{
										"key": "Access-Token",
										"type": "text",
										"value": "{{access_token}}"
									},
									{
										"key": "client",
										"type": "text",
										"value": "{{client}}"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation{\n  deleteCatalogOfferLineItem(input: {\n    promotion_id: 1180\n  })\n  {\n    success\n    error_messages\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}/store/api",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"api"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Groups",
					"item": [
						{
							"name": "Create User Group",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Uid",
										"value": "{{uid}}",
										"type": "text"
									},
									{
										"key": "Access-Token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "client",
										"value": "{{client}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_group\": {\n        \"name\": \"Premium Users\",\n        \"phone_numbers\": [\"9014259811\"]\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/admin/api/v2/user_groups",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"api",
										"v2",
										"user_groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create User Group CSV",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Uid",
										"value": "{{uid}}",
										"type": "text"
									},
									{
										"key": "Access-Token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "client",
										"value": "{{client}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "Inactive users",
											"type": "text"
										},
										{
											"key": "data_file",
											"type": "file",
											"src": "/home/krishna/Desktop/User Group Creation.csv"
										}
									]
								},
								"url": {
									"raw": "{{url}}/admin/api/v2/user_groups/bulk_create",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"api",
										"v2",
										"user_groups",
										"bulk_create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create User Group From Oders count",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Uid",
										"value": "{{uid}}",
										"type": "text"
									},
									{
										"key": "Access-Token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "client",
										"value": "{{client}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"First Order Customeras\",\n    \"order_count\": 1,\n    \"start_time\": 1537835342,\n    \"end_time\": 1645784148\n}"
								},
								"url": {
									"raw": "{{url}}/admin/api/v2/user_groups/create_based_on_orders",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"api",
										"v2",
										"user_groups",
										"create_based_on_orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch User Groups",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Uid",
										"value": "{{uid}}",
										"type": "text"
									},
									{
										"key": "Access-Token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "client",
										"value": "{{client}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}} /admin/api/v2/user_groups",
									"host": [
										"{{url}} "
									],
									"path": [
										"admin",
										"api",
										"v2",
										"user_groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Order counts",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Uid",
										"value": "{{uid}}",
										"type": "text"
									},
									{
										"key": "Access-Token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "client",
										"value": "{{client}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"start_time\": 1537835342,\n    \"end_time\": 1645784148\n}"
								},
								"url": {
									"raw": "{{url}} /admin/api/v2/user_groups/orders_count_for_groups",
									"host": [
										"{{url}} "
									],
									"path": [
										"admin",
										"api",
										"v2",
										"user_groups",
										"orders_count_for_groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User Group",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Uid",
										"value": "{{uid}}",
										"type": "text"
									},
									{
										"key": "Access-Token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "client",
										"value": "{{client}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_group\": {\n        \"name\": \"Premium Users\",\n        \"active\": true,\n        \"remove_phone_numbers\": [\"9014259898\"],\n        \"add_phone_numbers\": [\"9014259811\"]\n    }\n}"
								},
								"url": {
									"raw": "{{url}}/admin/api/v2/user_groups/9/",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"api",
										"v2",
										"user_groups",
										"9",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User Group",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Uid",
										"value": "{{uid}}",
										"type": "text"
									},
									{
										"key": "Access-Token",
										"value": "{{access_token}}",
										"type": "text"
									},
									{
										"key": "client",
										"value": "{{client}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/admin/api/v2/user_groups/3/",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"api",
										"v2",
										"user_groups",
										"3",
										""
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"let uid = pm.collectionVariables.get(\"uid\");",
									"let client = pm.collectionVariables.get(\"client\");",
									"",
									"let access_token = pm.collectionVariables.get(\"access_token\");",
									"console.log(\"access_token\", access_token)",
									"// pm.request.headers.add({",
									"//     uid: uid,",
									"//     client: client,",
									"//     access_token: access_token",
									"// });",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Create Catalog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let dd = res_body.data.createCatalog;",
									"",
									"console.log(\"data: \", dd)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  createCatalog(input: {name: \"testing v2\"}){\n    success\n    errors\n    catalog{\n        id\n        name\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update  Catalog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let dd = res_body.data.createCatalog;",
									"",
									"console.log(\"data: \", dd)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  updateCatalog(input: {catalog_id: 3, name: \"Master dfdfdf v2\"}){\n    success\n    errors\n    catalog{\n        id\n        name\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Catalog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let dd = res_body.data.createCatalog;",
									"",
									"console.log(\"data: \", dd)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  deleteCatalog(input: {id: 377}){\n    success\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "taxonomies list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let dd = res_body.data.catalogList;",
									"",
									"console.log(\"data: \", dd)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n  taxonomies{\n      id\n      name\n      icon_present\n      icon_url\n      level_1_taxons{\n          id\n          name\n          depth\n          icon_url\n          children{\n              id\n              name\n              icon_url\n              depth\n          }\n      }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "catalog List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// // postman.setNextRequest(null);",
									"// let res_body = pm.response.json();",
									"",
									"",
									"// let dd = res_body.data.catalogList;",
									"",
									"// console.log(\"data: \", dd)",
									"",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query{\n  catalogList{\n      id\n      name\n      suppliers{\n          id\n          name\n      }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Supplier To Catalog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let dd = res_body.data.createCatalog;",
									"",
									"console.log(\"data: \", dd)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($catalog_id: Int!, $supplier_id: Int!){\n  addSupplier(input: {catalog_id: $catalog_id, supplier_id: $supplier_id}){\n    success\n    catalog{\n        id\n        name\n        suppliers{\n            id\n            name\n        }\n    }\n  }\n}",
								"variables": "{\n    \"catalog_id\": 269,\n    \"supplier_id\": 3690\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "RemoveSupplier To Catalog Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// postman.setNextRequest(null);",
									"let res_body = pm.response.json();",
									"",
									"",
									"let dd = res_body.data.createCatalog;",
									"",
									"console.log(\"data: \", dd)",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($catalog_id: Int!, $supplier_id: Int!){\n  removeSupplier(input: {catalog_id: $catalog_id, supplier_id: $supplier_id}){\n    success\n    catalog{\n        id\n        name\n        suppliers{\n            id\n            name\n        }\n    }\n  }\n}",
								"variables": "{\n    \"catalog_id\": 2,\n    \"supplier_id\": 202\n}"
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Catalog V4 Products",
			"item": [
				{
					"name": "Bulk Imports List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/v2/bulk_import_list?type=bulk_create",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v2",
								"bulk_import_list"
							],
							"query": [
								{
									"key": "type",
									"value": "bulk_create"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/categories?supplier_id=3688",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							],
							"query": [
								{
									"key": "supplier_id",
									"value": "3688"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Import Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "product_import[catalog_id]",
									"value": "269",
									"type": "text"
								},
								{
									"key": "product_import[data_file]",
									"type": "file",
									"src": "/home/srivathsav/Downloads/grocery_v2_updated_test (13) - grocery_v2_updated_test (13).csv"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v2/bulk_import",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v2",
								"bulk_import"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Single Variant stores data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"catalog_id\": 269,\n    \"stores_data\": [\n        {\n            \"supplier_id\": 3690,\n             \"price\": 300,\n             \"discontinue\": \"true\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{url}}/api/v2/variants/12894/update_stores_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v2",
								"variants",
								"12894",
								"update_stores_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Variants",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \n   \"id\": 12937,\n   \"supplier_id\": 3688\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/categories/remove",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"remove"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Variants at Store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"catalog_id\": 269,\n    \"supplier_ids\": [\n        3688\n    ],\n    \"variants\": {\n        \"0\": {\n            \"id\": \"12894\",\n            \"max_quantity_per_order\": 6\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v2/variants/multi_update",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v2",
								"variants",
								"multi_update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Categories",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \n    \"catalog_id\": 5,\n    \"producta_ids\": [227655],\n    \"variant_ids\": [ 340630, 340634]\n}"
						},
						"url": {
							"raw": "{{url}}/api/v2/variants/multi_delete",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v2",
								"variants",
								"multi_delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Supplier Variants",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation{\n  updateSupplierVariants(input: {variant_id: 12894, supplier_ids: [3688, 3690], out_of_stock: false, price: 390, mrp: 1000, discontinue: false}){\n    success\n    variant{\n        id\n        supplier_variants{\n            supplier_id\n            mrp\n            price\n            discontinued\n            is_out_of_stock\n        }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/store/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Variants",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"catalog_id\": 269,\n    \"taxon_id\" : 2017,\n    \"id\": \"3688\",\n    \"variants\": {\n        \"0\": {\n            \"id\": \"12888\",\n            \"delete\": \"true\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/process_product",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"process_product"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create/Update Product at Catalog Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"testing\",\n    \"taxon_id\": 12905,\n    \"catalog_id\": 269,\n    \"id\": 283185,\n    \"variants\": {\n        \"0\": {\n            \"break_uid\": \"uvo\",\n            \"quantity\": \"1\",\n            \"unit\": \"inch\",\n            \"out_of_stock\": \"false\",\n            \"mrp\": 100,\n            \"price\": 100,\n            \"max_quantity_per_order\": 0\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/process_product",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"process_product"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store Users",
			"item": [
				{
					"name": "Fetch users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/admin/api/v1/store_members/fetch_store_users?page=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"v1",
								"store_members",
								"fetch_store_users"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch users Copy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/admin/api/v1/store_members/fetch_store_users?page=0&roles[0]=delivery_executive&supplier_ids[0]=202",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"v1",
								"store_members",
								"fetch_store_users"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "roles[0]",
									"value": "delivery_executive"
								},
								{
									"key": "supplier_ids[0]",
									"value": "202"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"ddd\",\n    \"last_name\": \"ddd\",\n    \"phone\": \"98988899934\",\n    \"supplier_ids\": [181230],\n    \"role\": \"hq_staff\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/api/v1/store_members/create_store_user",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"v1",
								"store_members",
								"create_store_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"ddd\",\n    \"last_name\": \"dded\",\n    \"remove_supplier_ids\": [181230],\n    \"new_supplier_ids\": [181230]\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/api/v1/store_members/update_store_user/1927078",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"v1",
								"store_members",
								"update_store_user",
								"1927078"
							]
						}
					},
					"response": []
				},
				{
					"name": "Destroy User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/api/v1/store_members/destroy_store_user/144923",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"v1",
								"store_members",
								"destroy_store_user",
								"144923"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Analytics",
			"item": [
				{
					"name": "Order sales for a set of stores",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"agg_type\": \"sales\",\n    \"start_time\": 1635186600,\n    \"end_time\": 1635791400,\n    \"interval\": \"day\",\n    \"supplier_ids\": [2802, 2765, 2764],\n    \"include_canceled\": true\n}"
						},
						"url": {
							"raw": "{{url}}/admin/api/v2/orders/agg_stores_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"v2",
								"orders",
								"agg_stores_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order count for a set of stores",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"agg_type\": \"orders_count\",\n    \"start_time\": 1624518255,\n    \"end_time\": 1634716808,\n    \"interval\": \"day\",\n    \"supplier_ids\": [202, 2692],\n    \"include_canceled\": true\n\n}"
						},
						"url": {
							"raw": "{{url}}/admin/api/v2/orders/agg_stores_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"v2",
								"orders",
								"agg_stores_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order count for a super store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"agg_type\": \"orders_count\",\n    \"start_time\": 1624518255,\n    \"end_time\": 1634716808,\n    \"interval\": \"day\",\n    \"super_store_id\": 226,\n    \"include_canceled\": true\n\n}"
						},
						"url": {
							"raw": "{{url}}/admin/api/v2/orders/agg_super_store_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"v2",
								"orders",
								"agg_super_store_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Order sales for a super store Copy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"agg_type\": \"sales\",\n    \"start_time\": 1624518255,\n    \"end_time\": 1634716808,\n    \"interval\": \"day\",\n    \"super_store_id\": 226,\n    \"include_canceled\": true\n}"
						},
						"url": {
							"raw": "{{url}}/admin/api/v2/orders/agg_super_store_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"v2",
								"orders",
								"agg_super_store_data"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Create Notification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "body_json",
									"value": "{\"title\":\"iutiu\",\"body\":\"kjgkj\",\"targets\":{\"all_customers\":{}}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/api/notification",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"api",
								"notification"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dunzo",
			"item": [
				{
					"name": "Fetch dunzo config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setNextRequest('Update dunzo config super store');",
									"const response = pm.response.json();",
									"",
									"//test for dunzo configured",
									"if(response.dunzo.otp_enabled == true && response.dunzo.client_id != \"\" || response.dunzo.client_secret != \"\"){",
									"    pm.test(\"Dunzo Configured and Enabled\", () => {",
									"        pm.expect(response.dunzo.enabled).to.eql(true);",
									"});",
									"}",
									"//test for otp Enabled or not",
									"pm.test(\"Dunzo Otp for Delivery Enabled\", () => {",
									"  pm.expect(response.dunzo.otp_enabled).to.eql(true);",
									"});",
									"",
									"pm.collectionVariables.set(\"client_id\", response.dunzo.client_id);",
									"pm.collectionVariables.set(\"client_secret\", response.dunzo.client_secret);",
									"pm.collectionVariables.set(\"webhook_url\", response.dunzo.webhook_url);",
									"pm.collectionVariables.set(\"enabled\", response.dunzo.enabled);",
									"pm.collectionVariables.set(\"otp_enabled\", response.dunzo.otp_enabled);",
									"",
									"//test for async",
									"pm.test('async test', function (done) {",
									"  setTimeout(() => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"    done();",
									"  }, 1500);",
									"});",
									"",
									"//test for dunzo configured and not enabled",
									"if(response.dunzo.otp_enabled == false && response.dunzo.client_id != \"\" || response.dunzo.client_secret != \"\"){",
									"    pm.test(\"Dunzo Configured But Not Enabled\", () => {",
									"        pm.expect(response.dunzo.enabled).to.not.eql(null);",
									"});",
									"}",
									"",
									"//test when client id and client secret is null",
									"pm.test(\"Client_id or Client_secret are not Configured\", () => {",
									"    pm.expect(response.dunzo.client_id).to.not.equal(\"\");",
									"    pm.expect(response.dunzo.client_secret).to.not.equal(\"\");",
									"});",
									"",
									"// pm.test(\"Login Issue or Invalid API Key\", () =>{",
									"//     pm.expect(response.error).to.not.have(\"Invalid API\");",
									"// })",
									"",
									"pm.test(\"To Be Json\", () => {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/v2/delivery_partner/dunzo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v2",
								"delivery_partner",
								"dunzo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dunzo config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setNextRequest('Fetch dunzo config');\r",
									"//In Request \r",
									"const req = JSON.parse(request.data);\r",
									"//Response\r",
									"const response = pm.response.json();\r",
									"\r",
									"// console.log(req.dunzo.client_id);\r",
									"\r",
									"// console.log(req.dunzo.client_secret);\r",
									"\r",
									"// console.log(response.message);\r",
									"client_id = req.dunzo.client_id;\r",
									"client_secret = req.dunzo.client_secret;\r",
									"//test for given client_id and client_secret are not equal\r",
									"pm.test(\"client_id - \" + client_id +\" and \" +\"client_secret - \"+ client_secret + \"are not equal\", () => {\r",
									"  pm.expect(req.dunzo.client_id).to.not.equal(req.dunzo.client_secret);\r",
									"});\r",
									"//Test for Configured Duzo and its enabled\r",
									"pm.test(\"Dunzo Enabled\", () => {\r",
									"  if(response.message == \"Already dunzo is configured\"){\r",
									"      pm.expect(req.dunzo.enabled).to.equal(true);\r",
									"  }\r",
									"  else{\r",
									"      console.log(req);\r",
									"  }\r",
									"});\r",
									"//Test for Dunzo Configured and its not enabled\r",
									"pm.test(\"Dunzo Configured But not Enabled\", ()=>{\r",
									"    if(response.message == \"Already dunzo is configured\" && req.dunzo.enabled == false){\r",
									"        pm.expect(req.dunzo.enabled).to.equal(false);\r",
									"    }\r",
									"    else{\r",
									"        console.log(req);\r",
									"    }\r",
									"});\r",
									"//checking status code async\r",
									"pm.test('async test', function (done) {\r",
									"  setTimeout(() => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 422]);\r",
									"    done();\r",
									"  }, 1500);\r",
									"});\r",
									"//test when Invalid Creds\r",
									"pm.test(\"Invalid Creds\", () =>{\r",
									"    pm.expect(response.message).not.to.include(\"Invalid credential\");\r",
									"})\r",
									"//test when Input is not Valid\r",
									"pm.test(\"Invalid Input\",() =>{\r",
									"    pm.expect(response.message).not.to.include(\"Invalid Input\");\r",
									"})\r",
									"\r",
									"// pm.test(\"Login Issue or Invalid API Key\", () =>{\r",
									"//     pm.expect(response.error).to.be.empty;\r",
									"// })\r",
									"//test for response to be json\r",
									"pm.test(\"To Be Json\", () => {\r",
									"    pm.response.to.be.json;\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"client_id\",pm.iterationData.get(\"client_id\"));\r",
									"console.log(pm.collectionVariables.get(\"client_id\"));\r",
									"pm.collectionVariables.set(\"author_name\",pm.iterationData.get(\"client_secret\"));\r",
									"console.log(pm.collectionVariables.get(\"client_secret\"));\r",
									"pm.collectionVariables.set(\"enabled\",pm.iterationData.get(\"enabled\"));\r",
									"console.log(pm.collectionVariables.get(\"enabled\"));\r",
									"pm.collectionVariables.set(\"otp_enabled\",pm.iterationData.get(\"otp_enabled\"));\r",
									"console.log(pm.collectionVariables.get(\"otp_enabled\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dunzo\": {\n        \"client_id\": \"{{client_id}}\",\n        \"client_secret\": \"{{client_secret}}\",\n        \"enabled\": {{enabled}},\n        \"otp_enabled\": {{otp_enabled}}\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v2/delivery_partner/dunzo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v2",
								"delivery_partner",
								"dunzo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update dunzo config super store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setNextRequest('null');",
									"const response = pm.response.json();",
									"const req = JSON.parse(request.data);",
									"//test if dunzo enabled or not",
									"pm.test(\"Dunzo Enabled\", () => {",
									"  pm.expect(response.enabled).to.eql(true);",
									"});",
									"//test if otp_enabled or not",
									"pm.test(\"Dunzo Otp for Delivery Enabled\", () => {",
									"  pm.expect(response.otp_enabled).to.eql(true);",
									"});",
									"// console.log(response.message);",
									"",
									"//test when invalid creds given",
									"pm.test(\"Dunzo Configuration Invalid Creds\", () => {",
									"    pm.expect(response.message).to.not.eql(\"Invalid credentials\");",
									"});",
									"",
									"// pm.test(\"Login Issue or Invalid API Key\", () =>{",
									"//     pm.expect(response.error).to.not.have(\"Invalid API key () specified.\");",
									"// })",
									"",
									"//test for updation from true to false or false to true for enabled",
									"enabledPast = pm.collectionVariables.get(\"enabled\");",
									"pm.test( \"Confiug Dunzo enabled \" + enabledPast + \" Updated to \"+ response.enabled,() =>{",
									"    pm.expect(response.enabled).to.not.equal(null);",
									"})",
									"",
									"//test for updation from true to false or false to true for otp_enabled",
									"otp_enabledPast = pm.collectionVariables.get(\"otp_enabled\");",
									"pm.test( \"Confiug Dunzo otp_enabled \" + otp_enabledPast + \" Updated to \"+ response.enabled,() =>{",
									"    pm.expect(response.enabled).to.not.equal(null);",
									"})",
									"pm.collectionVariables.set(\"webhook_url\", response.webhook_url);",
									"",
									"client_id = pm.collectionVariables.get(\"client_id\");",
									"client_secret = pm.collectionVariables.get(\"client_secret\");",
									"//test if given client_id and client_secret are equal",
									"pm.test(\"client_id - \" + client_id +\" and \" +\"client_secret - \"+ client_secret +\" are not equal\", () => {",
									"  pm.expect(req.dunzo.client_id).to.not.equal(req.dunzo.client_secret);",
									"});",
									"",
									"//test for async",
									"pm.test('async test', function (done) {",
									"  setTimeout(() => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 422]);",
									"    done();",
									"  }, 1500);",
									"});",
									"//response to be Json",
									"pm.test(\"To Be Json\", () => {",
									"    pm.response.to.be.json;",
									"})",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"client_id_update\",pm.iterationData.get(\"client_id_update\"));\r",
									"console.log(pm.collectionVariables.get(\"client_id_update\"));\r",
									"pm.collectionVariables.set(\"client_secret_update\",pm.iterationData.get(\"client_secret_update\"));\r",
									"console.log(pm.collectionVariables.get(\"client_secret\"));\r",
									"pm.collectionVariables.set(\"enabled_update\",pm.iterationData.get(\"enabled_update\"));\r",
									"console.log(pm.collectionVariables.get(\"enabled_update\"));\r",
									"pm.collectionVariables.set(\"otpEnabled_update\",pm.iterationData.get(\"otpEnabled_update\"));\r",
									"console.log(pm.collectionVariables.get(\"otpEnabled_update\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dunzo\": {\n        \"client_id\": \"{{client_id_update}}\",\n        \"client_secret\": \"{{client_secret_update}}\",\n        \"enabled\": {{enabled_update}},\n        \"otp_enabled\": {{otpEnabled_update}}\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v2/delivery_partner/dunzo/update_super_store_config",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v2",
								"delivery_partner",
								"dunzo",
								"update_super_store_config"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update dunzo config sub store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"const req = JSON.parse(request.data);\r",
									"\r",
									"subEnabled = req.dunzo.enabled;\r",
									"\r",
									"//test if substore dunzo config enabled or not\r",
									"pm.test(\"SubStore Status Enabled \"+ subEnabled , () => {\r",
									"    pm.expect(req.dunzo.enabled).to.not.equal(null);\r",
									"})\r",
									"\r",
									"//test for async\r",
									"pm.test('async test', function (done) {\r",
									"  setTimeout(() => {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"    done();\r",
									"  }, 1500);\r",
									"});\r",
									"\r",
									"//response to be Json\r",
									"pm.test(\"To Be Json\", () => {\r",
									"    pm.response.to.be.json;\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"update_sub_store_dunzo_enable\",pm.iterationData.get(\"update_sub_store_dunzo_enable\"));\r",
									"console.log(pm.collectionVariables.get(\"update_sub_store_dunzo_enable\"));\r",
									"pm.collectionVariables.set(\"update_substore_id\",pm.iterationData.get(\"update_substore_id\"));\r",
									"console.log(pm.collectionVariables.get(\"update_substore_id\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dunzo\": {\n        \"enabled\": {{update_sub_store_dunzo_enable}},\n        \"sub_store_id\": {{update_substore_id}}\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v2/delivery_partner/dunzo/update_sub_store_config",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v2",
								"delivery_partner",
								"dunzo",
								"update_sub_store_config"
							]
						}
					},
					"response": []
				},
				{
					"name": "Regenerate Webhook token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Uid",
								"value": "{{uid}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "client",
								"value": "{{client}}",
								"type": "text"
							},
							{
								"key": "X-Proxy-Authorization",
								"value": "{{proxy_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{webhook_url}}/api/v2/delivery_partner/dunzo/regenerate_webhook_token",
							"host": [
								"{{webhook_url}}"
							],
							"path": [
								"api",
								"v2",
								"delivery_partner",
								"dunzo",
								"regenerate_webhook_token"
							]
						}
					},
					"response": []
				},
				{
					"name": "webhook",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{webhook_url}}/dunzo/webhook",
							"host": [
								"{{webhook_url}}"
							],
							"path": [
								"dunzo",
								"webhook"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "supplier_id",
			"value": "3690"
		},
		{
			"key": "phone_number",
			"value": "1212312312"
		},
		{
			"key": "order_number",
			"value": "R730355081"
		},
		{
			"key": "country_code",
			"value": "91"
		},
		{
			"key": "access_token",
			"value": "yuN7L84Tr6-NJNSXo_7xXg"
		},
		{
			"key": "client",
			"value": "c-Jg7ma01p_li4zg3mOieg"
		},
		{
			"key": "uid",
			"value": "marrihari204@gmail.com"
		},
		{
			"key": "proxy_token",
			"value": "cffca7a8488362dca9fe3e7d83c0e66880c58fab20dfbacd"
		},
		{
			"key": "url",
			"value": "https://testapi.migrocer.com/",
			"type": "string"
		},
		{
			"key": "client_id",
			"value": ""
		},
		{
			"key": "client_secret",
			"value": ""
		},
		{
			"key": "webhook_url",
			"value": ""
		},
		{
			"key": "test",
			"value": ""
		},
		{
			"key": "enabled",
			"value": "",
			"type": "string"
		},
		{
			"key": "otp_enabled",
			"value": "",
			"type": "string"
		},
		{
			"key": "author_name",
			"value": ""
		},
		{
			"key": "subEnabled",
			"value": ""
		},
		{
			"key": "client_id_update",
			"value": ""
		},
		{
			"key": "client_secret_update",
			"value": ""
		},
		{
			"key": "enabled_update",
			"value": ""
		},
		{
			"key": "otpEnabled_update",
			"value": ""
		}
	]
}